/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spscheduler.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.sambaash.platform.srv.spscheduler.model.SPJobEntry;
import com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalService;
import com.sambaash.platform.srv.spscheduler.service.persistence.SPJobEntryPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the s p job entry local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sambaash.platform.srv.spscheduler.service.impl.SPJobEntryLocalServiceImpl}.
 * </p>
 *
 * @author pradeep
 * @see com.sambaash.platform.srv.spscheduler.service.impl.SPJobEntryLocalServiceImpl
 * @see com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalServiceUtil
 * @generated
 */
public abstract class SPJobEntryLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements SPJobEntryLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalServiceUtil} to access the s p job entry local service.
	 */

	/**
	 * Adds the s p job entry to the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobEntry the s p job entry
	 * @return the s p job entry that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SPJobEntry addSPJobEntry(SPJobEntry spJobEntry)
		throws SystemException {
		spJobEntry.setNew(true);

		return spJobEntryPersistence.update(spJobEntry);
	}

	/**
	 * Creates a new s p job entry with the primary key. Does not add the s p job entry to the database.
	 *
	 * @param spJobEntryId the primary key for the new s p job entry
	 * @return the new s p job entry
	 */
	@Override
	public SPJobEntry createSPJobEntry(long spJobEntryId) {
		return spJobEntryPersistence.create(spJobEntryId);
	}

	/**
	 * Deletes the s p job entry with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobEntryId the primary key of the s p job entry
	 * @return the s p job entry that was removed
	 * @throws PortalException if a s p job entry with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SPJobEntry deleteSPJobEntry(long spJobEntryId)
		throws PortalException, SystemException {
		return spJobEntryPersistence.remove(spJobEntryId);
	}

	/**
	 * Deletes the s p job entry from the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobEntry the s p job entry
	 * @return the s p job entry that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SPJobEntry deleteSPJobEntry(SPJobEntry spJobEntry)
		throws SystemException {
		return spJobEntryPersistence.remove(spJobEntry);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(SPJobEntry.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return spJobEntryPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spscheduler.model.impl.SPJobEntryModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return spJobEntryPersistence.findWithDynamicQuery(dynamicQuery, start,
			end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spscheduler.model.impl.SPJobEntryModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return spJobEntryPersistence.findWithDynamicQuery(dynamicQuery, start,
			end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return spJobEntryPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return spJobEntryPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public SPJobEntry fetchSPJobEntry(long spJobEntryId)
		throws SystemException {
		return spJobEntryPersistence.fetchByPrimaryKey(spJobEntryId);
	}

	/**
	 * Returns the s p job entry with the matching UUID and company.
	 *
	 * @param uuid the s p job entry's UUID
	 * @param  companyId the primary key of the company
	 * @return the matching s p job entry, or <code>null</code> if a matching s p job entry could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobEntry fetchSPJobEntryByUuidAndCompanyId(String uuid,
		long companyId) throws SystemException {
		return spJobEntryPersistence.fetchByUuid_C_First(uuid, companyId, null);
	}

	/**
	 * Returns the s p job entry matching the UUID and group.
	 *
	 * @param uuid the s p job entry's UUID
	 * @param groupId the primary key of the group
	 * @return the matching s p job entry, or <code>null</code> if a matching s p job entry could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobEntry fetchSPJobEntryByUuidAndGroupId(String uuid, long groupId)
		throws SystemException {
		return spJobEntryPersistence.fetchByUUID_G(uuid, groupId);
	}

	/**
	 * Returns the s p job entry with the primary key.
	 *
	 * @param spJobEntryId the primary key of the s p job entry
	 * @return the s p job entry
	 * @throws PortalException if a s p job entry with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobEntry getSPJobEntry(long spJobEntryId)
		throws PortalException, SystemException {
		return spJobEntryPersistence.findByPrimaryKey(spJobEntryId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return spJobEntryPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns the s p job entry with the matching UUID and company.
	 *
	 * @param uuid the s p job entry's UUID
	 * @param  companyId the primary key of the company
	 * @return the matching s p job entry
	 * @throws PortalException if a matching s p job entry could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobEntry getSPJobEntryByUuidAndCompanyId(String uuid,
		long companyId) throws PortalException, SystemException {
		return spJobEntryPersistence.findByUuid_C_First(uuid, companyId, null);
	}

	/**
	 * Returns the s p job entry matching the UUID and group.
	 *
	 * @param uuid the s p job entry's UUID
	 * @param groupId the primary key of the group
	 * @return the matching s p job entry
	 * @throws PortalException if a matching s p job entry could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobEntry getSPJobEntryByUuidAndGroupId(String uuid, long groupId)
		throws PortalException, SystemException {
		return spJobEntryPersistence.findByUUID_G(uuid, groupId);
	}

	/**
	 * Returns a range of all the s p job entries.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spscheduler.model.impl.SPJobEntryModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of s p job entries
	 * @param end the upper bound of the range of s p job entries (not inclusive)
	 * @return the range of s p job entries
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<SPJobEntry> getSPJobEntries(int start, int end)
		throws SystemException {
		return spJobEntryPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of s p job entries.
	 *
	 * @return the number of s p job entries
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getSPJobEntriesCount() throws SystemException {
		return spJobEntryPersistence.countAll();
	}

	/**
	 * Updates the s p job entry in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param spJobEntry the s p job entry
	 * @return the s p job entry that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SPJobEntry updateSPJobEntry(SPJobEntry spJobEntry)
		throws SystemException {
		return spJobEntryPersistence.update(spJobEntry);
	}

	/**
	 * Returns the s p job entry local service.
	 *
	 * @return the s p job entry local service
	 */
	public com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalService getSPJobEntryLocalService() {
		return spJobEntryLocalService;
	}

	/**
	 * Sets the s p job entry local service.
	 *
	 * @param spJobEntryLocalService the s p job entry local service
	 */
	public void setSPJobEntryLocalService(
		com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalService spJobEntryLocalService) {
		this.spJobEntryLocalService = spJobEntryLocalService;
	}

	/**
	 * Returns the s p job entry persistence.
	 *
	 * @return the s p job entry persistence
	 */
	public SPJobEntryPersistence getSPJobEntryPersistence() {
		return spJobEntryPersistence;
	}

	/**
	 * Sets the s p job entry persistence.
	 *
	 * @param spJobEntryPersistence the s p job entry persistence
	 */
	public void setSPJobEntryPersistence(
		SPJobEntryPersistence spJobEntryPersistence) {
		this.spJobEntryPersistence = spJobEntryPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.sambaash.platform.srv.spscheduler.model.SPJobEntry",
			spJobEntryLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.sambaash.platform.srv.spscheduler.model.SPJobEntry");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return SPJobEntry.class;
	}

	protected String getModelClassName() {
		return SPJobEntry.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = spJobEntryPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalService.class)
	protected com.sambaash.platform.srv.spscheduler.service.SPJobEntryLocalService spJobEntryLocalService;
	@BeanReference(type = SPJobEntryPersistence.class)
	protected SPJobEntryPersistence spJobEntryPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private SPJobEntryLocalServiceClpInvoker _clpInvoker = new SPJobEntryLocalServiceClpInvoker();
}
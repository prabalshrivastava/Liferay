/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.mail.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent;
import com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPMailSubscriberUserAgent service. Represents a row in the &quot;SPMailSubscriberUserAgent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPMailSubscriberUserAgentImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPMailSubscriberUserAgentImpl
 * @see com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent
 * @see com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgentModel
 * @generated
 */
public class SPMailSubscriberUserAgentModelImpl extends BaseModelImpl<SPMailSubscriberUserAgent>
	implements SPMailSubscriberUserAgentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p mail subscriber user agent model instance should use the {@link com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent} interface instead.
	 */
	public static final String TABLE_NAME = "SPMailSubscriberUserAgent";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spMailSubscriberUserAgentId", Types.BIGINT },
			{ "spMailCampaignSubscribersId", Types.BIGINT },
			{ "spMailCampaignId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "type", Types.VARCHAR },
			{ "typeName", Types.VARCHAR },
			{ "deviceCategory", Types.VARCHAR },
			{ "family", Types.VARCHAR },
			{ "operatingSystem", Types.VARCHAR },
			{ "versionNumber", Types.VARCHAR },
			{ "userAgent", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMailSubscriberUserAgent (spMailSubscriberUserAgentId BIGINT(20) not null primary key,spMailCampaignSubscribersId BIGINT(20),spMailCampaignId BIGINT(20),name VARCHAR(250) null,type VARCHAR(250) null,typeName VARCHAR(250) null,deviceCategory VARCHAR(250) null,family VARCHAR(250) null,operatingSystem VARCHAR(250) null,versionNumber VARCHAR(75) null,userAgent LONGTEXT null)";
	public static final String TABLE_SQL_DROP = "drop table SPMailSubscriberUserAgent";
	public static final String ORDER_BY_JPQL = " ORDER BY spMailSubscriberUserAgent.spMailSubscriberUserAgentId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMailSubscriberUserAgent.spMailSubscriberUserAgentId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent"),
			true);
	public static long SPMAILCAMPAIGNID_COLUMN_BITMASK = 1L;
	public static long SPMAILCAMPAIGNSUBSCRIBERSID_COLUMN_BITMASK = 2L;
	public static long SPMAILSUBSCRIBERUSERAGENTID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent"));

	public SPMailSubscriberUserAgentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spMailSubscriberUserAgentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpMailSubscriberUserAgentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spMailSubscriberUserAgentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPMailSubscriberUserAgent.class;
	}

	@Override
	public String getModelClassName() {
		return SPMailSubscriberUserAgent.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spMailSubscriberUserAgentId",
			getSpMailSubscriberUserAgentId());
		attributes.put("spMailCampaignSubscribersId",
			getSpMailCampaignSubscribersId());
		attributes.put("spMailCampaignId", getSpMailCampaignId());
		attributes.put("name", getName());
		attributes.put("type", getType());
		attributes.put("typeName", getTypeName());
		attributes.put("deviceCategory", getDeviceCategory());
		attributes.put("family", getFamily());
		attributes.put("operatingSystem", getOperatingSystem());
		attributes.put("versionNumber", getVersionNumber());
		attributes.put("userAgent", getUserAgent());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spMailSubscriberUserAgentId = (Long)attributes.get(
				"spMailSubscriberUserAgentId");

		if (spMailSubscriberUserAgentId != null) {
			setSpMailSubscriberUserAgentId(spMailSubscriberUserAgentId);
		}

		Long spMailCampaignSubscribersId = (Long)attributes.get(
				"spMailCampaignSubscribersId");

		if (spMailCampaignSubscribersId != null) {
			setSpMailCampaignSubscribersId(spMailCampaignSubscribersId);
		}

		Long spMailCampaignId = (Long)attributes.get("spMailCampaignId");

		if (spMailCampaignId != null) {
			setSpMailCampaignId(spMailCampaignId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String typeName = (String)attributes.get("typeName");

		if (typeName != null) {
			setTypeName(typeName);
		}

		String deviceCategory = (String)attributes.get("deviceCategory");

		if (deviceCategory != null) {
			setDeviceCategory(deviceCategory);
		}

		String family = (String)attributes.get("family");

		if (family != null) {
			setFamily(family);
		}

		String operatingSystem = (String)attributes.get("operatingSystem");

		if (operatingSystem != null) {
			setOperatingSystem(operatingSystem);
		}

		String versionNumber = (String)attributes.get("versionNumber");

		if (versionNumber != null) {
			setVersionNumber(versionNumber);
		}

		String userAgent = (String)attributes.get("userAgent");

		if (userAgent != null) {
			setUserAgent(userAgent);
		}
	}

	@Override
	public long getSpMailSubscriberUserAgentId() {
		return _spMailSubscriberUserAgentId;
	}

	@Override
	public void setSpMailSubscriberUserAgentId(long spMailSubscriberUserAgentId) {
		_spMailSubscriberUserAgentId = spMailSubscriberUserAgentId;
	}

	@Override
	public long getSpMailCampaignSubscribersId() {
		return _spMailCampaignSubscribersId;
	}

	@Override
	public void setSpMailCampaignSubscribersId(long spMailCampaignSubscribersId) {
		_columnBitmask |= SPMAILCAMPAIGNSUBSCRIBERSID_COLUMN_BITMASK;

		if (!_setOriginalSpMailCampaignSubscribersId) {
			_setOriginalSpMailCampaignSubscribersId = true;

			_originalSpMailCampaignSubscribersId = _spMailCampaignSubscribersId;
		}

		_spMailCampaignSubscribersId = spMailCampaignSubscribersId;
	}

	public long getOriginalSpMailCampaignSubscribersId() {
		return _originalSpMailCampaignSubscribersId;
	}

	@Override
	public long getSpMailCampaignId() {
		return _spMailCampaignId;
	}

	@Override
	public void setSpMailCampaignId(long spMailCampaignId) {
		_columnBitmask |= SPMAILCAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalSpMailCampaignId) {
			_setOriginalSpMailCampaignId = true;

			_originalSpMailCampaignId = _spMailCampaignId;
		}

		_spMailCampaignId = spMailCampaignId;
	}

	public long getOriginalSpMailCampaignId() {
		return _originalSpMailCampaignId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public String getTypeName() {
		if (_typeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeName;
		}
	}

	@Override
	public void setTypeName(String typeName) {
		_typeName = typeName;
	}

	@Override
	public String getDeviceCategory() {
		if (_deviceCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _deviceCategory;
		}
	}

	@Override
	public void setDeviceCategory(String deviceCategory) {
		_deviceCategory = deviceCategory;
	}

	@Override
	public String getFamily() {
		if (_family == null) {
			return StringPool.BLANK;
		}
		else {
			return _family;
		}
	}

	@Override
	public void setFamily(String family) {
		_family = family;
	}

	@Override
	public String getOperatingSystem() {
		if (_operatingSystem == null) {
			return StringPool.BLANK;
		}
		else {
			return _operatingSystem;
		}
	}

	@Override
	public void setOperatingSystem(String operatingSystem) {
		_operatingSystem = operatingSystem;
	}

	@Override
	public String getVersionNumber() {
		if (_versionNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _versionNumber;
		}
	}

	@Override
	public void setVersionNumber(String versionNumber) {
		_versionNumber = versionNumber;
	}

	@Override
	public String getUserAgent() {
		if (_userAgent == null) {
			return StringPool.BLANK;
		}
		else {
			return _userAgent;
		}
	}

	@Override
	public void setUserAgent(String userAgent) {
		_userAgent = userAgent;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SPMailSubscriberUserAgent.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPMailSubscriberUserAgent toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPMailSubscriberUserAgent)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPMailSubscriberUserAgentImpl spMailSubscriberUserAgentImpl = new SPMailSubscriberUserAgentImpl();

		spMailSubscriberUserAgentImpl.setSpMailSubscriberUserAgentId(getSpMailSubscriberUserAgentId());
		spMailSubscriberUserAgentImpl.setSpMailCampaignSubscribersId(getSpMailCampaignSubscribersId());
		spMailSubscriberUserAgentImpl.setSpMailCampaignId(getSpMailCampaignId());
		spMailSubscriberUserAgentImpl.setName(getName());
		spMailSubscriberUserAgentImpl.setType(getType());
		spMailSubscriberUserAgentImpl.setTypeName(getTypeName());
		spMailSubscriberUserAgentImpl.setDeviceCategory(getDeviceCategory());
		spMailSubscriberUserAgentImpl.setFamily(getFamily());
		spMailSubscriberUserAgentImpl.setOperatingSystem(getOperatingSystem());
		spMailSubscriberUserAgentImpl.setVersionNumber(getVersionNumber());
		spMailSubscriberUserAgentImpl.setUserAgent(getUserAgent());

		spMailSubscriberUserAgentImpl.resetOriginalValues();

		return spMailSubscriberUserAgentImpl;
	}

	@Override
	public int compareTo(SPMailSubscriberUserAgent spMailSubscriberUserAgent) {
		long primaryKey = spMailSubscriberUserAgent.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPMailSubscriberUserAgent)) {
			return false;
		}

		SPMailSubscriberUserAgent spMailSubscriberUserAgent = (SPMailSubscriberUserAgent)obj;

		long primaryKey = spMailSubscriberUserAgent.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPMailSubscriberUserAgentModelImpl spMailSubscriberUserAgentModelImpl = this;

		spMailSubscriberUserAgentModelImpl._originalSpMailCampaignSubscribersId = spMailSubscriberUserAgentModelImpl._spMailCampaignSubscribersId;

		spMailSubscriberUserAgentModelImpl._setOriginalSpMailCampaignSubscribersId = false;

		spMailSubscriberUserAgentModelImpl._originalSpMailCampaignId = spMailSubscriberUserAgentModelImpl._spMailCampaignId;

		spMailSubscriberUserAgentModelImpl._setOriginalSpMailCampaignId = false;

		spMailSubscriberUserAgentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPMailSubscriberUserAgent> toCacheModel() {
		SPMailSubscriberUserAgentCacheModel spMailSubscriberUserAgentCacheModel = new SPMailSubscriberUserAgentCacheModel();

		spMailSubscriberUserAgentCacheModel.spMailSubscriberUserAgentId = getSpMailSubscriberUserAgentId();

		spMailSubscriberUserAgentCacheModel.spMailCampaignSubscribersId = getSpMailCampaignSubscribersId();

		spMailSubscriberUserAgentCacheModel.spMailCampaignId = getSpMailCampaignId();

		spMailSubscriberUserAgentCacheModel.name = getName();

		String name = spMailSubscriberUserAgentCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.name = null;
		}

		spMailSubscriberUserAgentCacheModel.type = getType();

		String type = spMailSubscriberUserAgentCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.type = null;
		}

		spMailSubscriberUserAgentCacheModel.typeName = getTypeName();

		String typeName = spMailSubscriberUserAgentCacheModel.typeName;

		if ((typeName != null) && (typeName.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.typeName = null;
		}

		spMailSubscriberUserAgentCacheModel.deviceCategory = getDeviceCategory();

		String deviceCategory = spMailSubscriberUserAgentCacheModel.deviceCategory;

		if ((deviceCategory != null) && (deviceCategory.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.deviceCategory = null;
		}

		spMailSubscriberUserAgentCacheModel.family = getFamily();

		String family = spMailSubscriberUserAgentCacheModel.family;

		if ((family != null) && (family.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.family = null;
		}

		spMailSubscriberUserAgentCacheModel.operatingSystem = getOperatingSystem();

		String operatingSystem = spMailSubscriberUserAgentCacheModel.operatingSystem;

		if ((operatingSystem != null) && (operatingSystem.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.operatingSystem = null;
		}

		spMailSubscriberUserAgentCacheModel.versionNumber = getVersionNumber();

		String versionNumber = spMailSubscriberUserAgentCacheModel.versionNumber;

		if ((versionNumber != null) && (versionNumber.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.versionNumber = null;
		}

		spMailSubscriberUserAgentCacheModel.userAgent = getUserAgent();

		String userAgent = spMailSubscriberUserAgentCacheModel.userAgent;

		if ((userAgent != null) && (userAgent.length() == 0)) {
			spMailSubscriberUserAgentCacheModel.userAgent = null;
		}

		return spMailSubscriberUserAgentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{spMailSubscriberUserAgentId=");
		sb.append(getSpMailSubscriberUserAgentId());
		sb.append(", spMailCampaignSubscribersId=");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append(", spMailCampaignId=");
		sb.append(getSpMailCampaignId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", typeName=");
		sb.append(getTypeName());
		sb.append(", deviceCategory=");
		sb.append(getDeviceCategory());
		sb.append(", family=");
		sb.append(getFamily());
		sb.append(", operatingSystem=");
		sb.append(getOperatingSystem());
		sb.append(", versionNumber=");
		sb.append(getVersionNumber());
		sb.append(", userAgent=");
		sb.append(getUserAgent());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.mail.model.SPMailSubscriberUserAgent");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spMailSubscriberUserAgentId</column-name><column-value><![CDATA[");
		sb.append(getSpMailSubscriberUserAgentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignSubscribersId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeName</column-name><column-value><![CDATA[");
		sb.append(getTypeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deviceCategory</column-name><column-value><![CDATA[");
		sb.append(getDeviceCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>family</column-name><column-value><![CDATA[");
		sb.append(getFamily());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operatingSystem</column-name><column-value><![CDATA[");
		sb.append(getOperatingSystem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versionNumber</column-name><column-value><![CDATA[");
		sb.append(getVersionNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userAgent</column-name><column-value><![CDATA[");
		sb.append(getUserAgent());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPMailSubscriberUserAgent.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPMailSubscriberUserAgent.class
		};
	private long _spMailSubscriberUserAgentId;
	private long _spMailCampaignSubscribersId;
	private long _originalSpMailCampaignSubscribersId;
	private boolean _setOriginalSpMailCampaignSubscribersId;
	private long _spMailCampaignId;
	private long _originalSpMailCampaignId;
	private boolean _setOriginalSpMailCampaignId;
	private String _name;
	private String _type;
	private String _typeName;
	private String _deviceCategory;
	private String _family;
	private String _operatingSystem;
	private String _versionNumber;
	private String _userAgent;
	private long _columnBitmask;
	private SPMailSubscriberUserAgent _escapedModel;
}
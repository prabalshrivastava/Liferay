/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.sppayment.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.sppayment.model.SPPurchase;
import com.sambaash.platform.srv.sppayment.model.SPPurchaseModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPPurchase service. Represents a row in the &quot;SPPurchase&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.sppayment.model.SPPurchaseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPPurchaseImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPPurchaseImpl
 * @see com.sambaash.platform.srv.sppayment.model.SPPurchase
 * @see com.sambaash.platform.srv.sppayment.model.SPPurchaseModel
 * @generated
 */
public class SPPurchaseModelImpl extends BaseModelImpl<SPPurchase>
	implements SPPurchaseModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p purchase model instance should use the {@link com.sambaash.platform.srv.sppayment.model.SPPurchase} interface instead.
	 */
	public static final String TABLE_NAME = "SPPurchase";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spPurchaseId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "cartId", Types.BIGINT },
			{ "extPaymentId", Types.VARCHAR },
			{ "extStatus", Types.VARCHAR },
			{ "extErrorCode", Types.BIGINT },
			{ "extErrorMsg", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPPurchase (spPurchaseId BIGINT(20) not null primary key,groupId BIGINT(20),cartId BIGINT(20),extPaymentId VARCHAR(75) null,extStatus VARCHAR(75) null,extErrorCode BIGINT(20),extErrorMsg VARCHAR(75) null,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPPurchase";
	public static final String ORDER_BY_JPQL = " ORDER BY spPurchase.spPurchaseId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPPurchase.spPurchaseId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.sppayment.model.SPPurchase"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.sppayment.model.SPPurchase"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.sppayment.model.SPPurchase"));

	public SPPurchaseModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spPurchaseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpPurchaseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spPurchaseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPPurchase.class;
	}

	@Override
	public String getModelClassName() {
		return SPPurchase.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spPurchaseId", getSpPurchaseId());
		attributes.put("groupId", getGroupId());
		attributes.put("cartId", getCartId());
		attributes.put("extPaymentId", getExtPaymentId());
		attributes.put("extStatus", getExtStatus());
		attributes.put("extErrorCode", getExtErrorCode());
		attributes.put("extErrorMsg", getExtErrorMsg());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spPurchaseId = (Long)attributes.get("spPurchaseId");

		if (spPurchaseId != null) {
			setSpPurchaseId(spPurchaseId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long cartId = (Long)attributes.get("cartId");

		if (cartId != null) {
			setCartId(cartId);
		}

		String extPaymentId = (String)attributes.get("extPaymentId");

		if (extPaymentId != null) {
			setExtPaymentId(extPaymentId);
		}

		String extStatus = (String)attributes.get("extStatus");

		if (extStatus != null) {
			setExtStatus(extStatus);
		}

		Long extErrorCode = (Long)attributes.get("extErrorCode");

		if (extErrorCode != null) {
			setExtErrorCode(extErrorCode);
		}

		String extErrorMsg = (String)attributes.get("extErrorMsg");

		if (extErrorMsg != null) {
			setExtErrorMsg(extErrorMsg);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSpPurchaseId() {
		return _spPurchaseId;
	}

	@Override
	public void setSpPurchaseId(long spPurchaseId) {
		_spPurchaseId = spPurchaseId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCartId() {
		return _cartId;
	}

	@Override
	public void setCartId(long cartId) {
		_cartId = cartId;
	}

	@Override
	public String getExtPaymentId() {
		if (_extPaymentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _extPaymentId;
		}
	}

	@Override
	public void setExtPaymentId(String extPaymentId) {
		_extPaymentId = extPaymentId;
	}

	@Override
	public String getExtStatus() {
		if (_extStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _extStatus;
		}
	}

	@Override
	public void setExtStatus(String extStatus) {
		_extStatus = extStatus;
	}

	@Override
	public long getExtErrorCode() {
		return _extErrorCode;
	}

	@Override
	public void setExtErrorCode(long extErrorCode) {
		_extErrorCode = extErrorCode;
	}

	@Override
	public String getExtErrorMsg() {
		if (_extErrorMsg == null) {
			return StringPool.BLANK;
		}
		else {
			return _extErrorMsg;
		}
	}

	@Override
	public void setExtErrorMsg(String extErrorMsg) {
		_extErrorMsg = extErrorMsg;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPPurchase.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPPurchase toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPPurchase)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPPurchaseImpl spPurchaseImpl = new SPPurchaseImpl();

		spPurchaseImpl.setSpPurchaseId(getSpPurchaseId());
		spPurchaseImpl.setGroupId(getGroupId());
		spPurchaseImpl.setCartId(getCartId());
		spPurchaseImpl.setExtPaymentId(getExtPaymentId());
		spPurchaseImpl.setExtStatus(getExtStatus());
		spPurchaseImpl.setExtErrorCode(getExtErrorCode());
		spPurchaseImpl.setExtErrorMsg(getExtErrorMsg());
		spPurchaseImpl.setCompanyId(getCompanyId());
		spPurchaseImpl.setUserId(getUserId());
		spPurchaseImpl.setUserName(getUserName());
		spPurchaseImpl.setCreateDate(getCreateDate());
		spPurchaseImpl.setModifiedDate(getModifiedDate());

		spPurchaseImpl.resetOriginalValues();

		return spPurchaseImpl;
	}

	@Override
	public int compareTo(SPPurchase spPurchase) {
		long primaryKey = spPurchase.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPPurchase)) {
			return false;
		}

		SPPurchase spPurchase = (SPPurchase)obj;

		long primaryKey = spPurchase.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SPPurchase> toCacheModel() {
		SPPurchaseCacheModel spPurchaseCacheModel = new SPPurchaseCacheModel();

		spPurchaseCacheModel.spPurchaseId = getSpPurchaseId();

		spPurchaseCacheModel.groupId = getGroupId();

		spPurchaseCacheModel.cartId = getCartId();

		spPurchaseCacheModel.extPaymentId = getExtPaymentId();

		String extPaymentId = spPurchaseCacheModel.extPaymentId;

		if ((extPaymentId != null) && (extPaymentId.length() == 0)) {
			spPurchaseCacheModel.extPaymentId = null;
		}

		spPurchaseCacheModel.extStatus = getExtStatus();

		String extStatus = spPurchaseCacheModel.extStatus;

		if ((extStatus != null) && (extStatus.length() == 0)) {
			spPurchaseCacheModel.extStatus = null;
		}

		spPurchaseCacheModel.extErrorCode = getExtErrorCode();

		spPurchaseCacheModel.extErrorMsg = getExtErrorMsg();

		String extErrorMsg = spPurchaseCacheModel.extErrorMsg;

		if ((extErrorMsg != null) && (extErrorMsg.length() == 0)) {
			spPurchaseCacheModel.extErrorMsg = null;
		}

		spPurchaseCacheModel.companyId = getCompanyId();

		spPurchaseCacheModel.userId = getUserId();

		spPurchaseCacheModel.userName = getUserName();

		String userName = spPurchaseCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spPurchaseCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spPurchaseCacheModel.createDate = createDate.getTime();
		}
		else {
			spPurchaseCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spPurchaseCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spPurchaseCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spPurchaseCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{spPurchaseId=");
		sb.append(getSpPurchaseId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", cartId=");
		sb.append(getCartId());
		sb.append(", extPaymentId=");
		sb.append(getExtPaymentId());
		sb.append(", extStatus=");
		sb.append(getExtStatus());
		sb.append(", extErrorCode=");
		sb.append(getExtErrorCode());
		sb.append(", extErrorMsg=");
		sb.append(getExtErrorMsg());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.sppayment.model.SPPurchase");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spPurchaseId</column-name><column-value><![CDATA[");
		sb.append(getSpPurchaseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cartId</column-name><column-value><![CDATA[");
		sb.append(getCartId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extPaymentId</column-name><column-value><![CDATA[");
		sb.append(getExtPaymentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extStatus</column-name><column-value><![CDATA[");
		sb.append(getExtStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extErrorCode</column-name><column-value><![CDATA[");
		sb.append(getExtErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extErrorMsg</column-name><column-value><![CDATA[");
		sb.append(getExtErrorMsg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPPurchase.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPPurchase.class
		};
	private long _spPurchaseId;
	private long _groupId;
	private long _cartId;
	private String _extPaymentId;
	private String _extStatus;
	private long _extErrorCode;
	private String _extErrorMsg;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private SPPurchase _escapedModel;
}
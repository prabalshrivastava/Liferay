/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spjob.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio;
import com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolioModel;
import com.sambaash.platform.srv.spjob.service.persistence.SPJobApplicantsPortfolioPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPJobApplicantsPortfolio service. Represents a row in the &quot;SPJobApplicantsCustomizedPortfolio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPJobApplicantsPortfolioImpl}.
 * </p>
 *
 * @author harini
 * @see SPJobApplicantsPortfolioImpl
 * @see com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio
 * @see com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolioModel
 * @generated
 */
public class SPJobApplicantsPortfolioModelImpl extends BaseModelImpl<SPJobApplicantsPortfolio>
	implements SPJobApplicantsPortfolioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p job applicants portfolio model instance should use the {@link com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio} interface instead.
	 */
	public static final String TABLE_NAME = "SPJobApplicantsCustomizedPortfolio";
	public static final Object[][] TABLE_COLUMNS = {
			{ "jobApplyId", Types.BIGINT },
			{ "porfolioId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "updatedBy", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPJobApplicantsCustomizedPortfolio (jobApplyId BIGINT(20) not null,porfolioId BIGINT(20) not null,userId BIGINT(20),createdBy BIGINT(20),updatedBy BIGINT(20),createDate DATETIME null,modifiedDate DATETIME null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,primary key (jobApplyId, porfolioId))";
	public static final String TABLE_SQL_DROP = "drop table SPJobApplicantsCustomizedPortfolio";
	public static final String ORDER_BY_JPQL = " ORDER BY spJobApplicantsPortfolio.id.jobApplyId ASC, spJobApplicantsPortfolio.id.porfolioId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPJobApplicantsCustomizedPortfolio.jobApplyId ASC, SPJobApplicantsCustomizedPortfolio.porfolioId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio"),
			true);
	public static long JOBAPPLYID_COLUMN_BITMASK = 1L;
	public static long PORFOLIOID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio"));

	public SPJobApplicantsPortfolioModelImpl() {
	}

	@Override
	public SPJobApplicantsPortfolioPK getPrimaryKey() {
		return new SPJobApplicantsPortfolioPK(_jobApplyId, _porfolioId);
	}

	@Override
	public void setPrimaryKey(SPJobApplicantsPortfolioPK primaryKey) {
		setJobApplyId(primaryKey.jobApplyId);
		setPorfolioId(primaryKey.porfolioId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new SPJobApplicantsPortfolioPK(_jobApplyId, _porfolioId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((SPJobApplicantsPortfolioPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return SPJobApplicantsPortfolio.class;
	}

	@Override
	public String getModelClassName() {
		return SPJobApplicantsPortfolio.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("jobApplyId", getJobApplyId());
		attributes.put("porfolioId", getPorfolioId());
		attributes.put("userId", getUserId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long jobApplyId = (Long)attributes.get("jobApplyId");

		if (jobApplyId != null) {
			setJobApplyId(jobApplyId);
		}

		Long porfolioId = (Long)attributes.get("porfolioId");

		if (porfolioId != null) {
			setPorfolioId(porfolioId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Long updatedBy = (Long)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}
	}

	@Override
	public long getJobApplyId() {
		return _jobApplyId;
	}

	@Override
	public void setJobApplyId(long jobApplyId) {
		_columnBitmask |= JOBAPPLYID_COLUMN_BITMASK;

		if (!_setOriginalJobApplyId) {
			_setOriginalJobApplyId = true;

			_originalJobApplyId = _jobApplyId;
		}

		_jobApplyId = jobApplyId;
	}

	public long getOriginalJobApplyId() {
		return _originalJobApplyId;
	}

	@Override
	public long getPorfolioId() {
		return _porfolioId;
	}

	@Override
	public void setPorfolioId(long porfolioId) {
		_porfolioId = porfolioId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public long getUpdatedBy() {
		return _updatedBy;
	}

	@Override
	public void setUpdatedBy(long updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public SPJobApplicantsPortfolio toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPJobApplicantsPortfolio)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPJobApplicantsPortfolioImpl spJobApplicantsPortfolioImpl = new SPJobApplicantsPortfolioImpl();

		spJobApplicantsPortfolioImpl.setJobApplyId(getJobApplyId());
		spJobApplicantsPortfolioImpl.setPorfolioId(getPorfolioId());
		spJobApplicantsPortfolioImpl.setUserId(getUserId());
		spJobApplicantsPortfolioImpl.setCreatedBy(getCreatedBy());
		spJobApplicantsPortfolioImpl.setUpdatedBy(getUpdatedBy());
		spJobApplicantsPortfolioImpl.setCreateDate(getCreateDate());
		spJobApplicantsPortfolioImpl.setModifiedDate(getModifiedDate());
		spJobApplicantsPortfolioImpl.setExtra1(getExtra1());
		spJobApplicantsPortfolioImpl.setExtra2(getExtra2());

		spJobApplicantsPortfolioImpl.resetOriginalValues();

		return spJobApplicantsPortfolioImpl;
	}

	@Override
	public int compareTo(SPJobApplicantsPortfolio spJobApplicantsPortfolio) {
		SPJobApplicantsPortfolioPK primaryKey = spJobApplicantsPortfolio.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPJobApplicantsPortfolio)) {
			return false;
		}

		SPJobApplicantsPortfolio spJobApplicantsPortfolio = (SPJobApplicantsPortfolio)obj;

		SPJobApplicantsPortfolioPK primaryKey = spJobApplicantsPortfolio.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		SPJobApplicantsPortfolioModelImpl spJobApplicantsPortfolioModelImpl = this;

		spJobApplicantsPortfolioModelImpl._originalJobApplyId = spJobApplicantsPortfolioModelImpl._jobApplyId;

		spJobApplicantsPortfolioModelImpl._setOriginalJobApplyId = false;

		spJobApplicantsPortfolioModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPJobApplicantsPortfolio> toCacheModel() {
		SPJobApplicantsPortfolioCacheModel spJobApplicantsPortfolioCacheModel = new SPJobApplicantsPortfolioCacheModel();

		spJobApplicantsPortfolioCacheModel.jobApplyId = getJobApplyId();

		spJobApplicantsPortfolioCacheModel.porfolioId = getPorfolioId();

		spJobApplicantsPortfolioCacheModel.userId = getUserId();

		spJobApplicantsPortfolioCacheModel.createdBy = getCreatedBy();

		spJobApplicantsPortfolioCacheModel.updatedBy = getUpdatedBy();

		Date createDate = getCreateDate();

		if (createDate != null) {
			spJobApplicantsPortfolioCacheModel.createDate = createDate.getTime();
		}
		else {
			spJobApplicantsPortfolioCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spJobApplicantsPortfolioCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spJobApplicantsPortfolioCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spJobApplicantsPortfolioCacheModel.extra1 = getExtra1();

		String extra1 = spJobApplicantsPortfolioCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			spJobApplicantsPortfolioCacheModel.extra1 = null;
		}

		spJobApplicantsPortfolioCacheModel.extra2 = getExtra2();

		String extra2 = spJobApplicantsPortfolioCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			spJobApplicantsPortfolioCacheModel.extra2 = null;
		}

		return spJobApplicantsPortfolioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{jobApplyId=");
		sb.append(getJobApplyId());
		sb.append(", porfolioId=");
		sb.append(getPorfolioId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>jobApplyId</column-name><column-value><![CDATA[");
		sb.append(getJobApplyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>porfolioId</column-name><column-value><![CDATA[");
		sb.append(getPorfolioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPJobApplicantsPortfolio.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPJobApplicantsPortfolio.class
		};
	private long _jobApplyId;
	private long _originalJobApplyId;
	private boolean _setOriginalJobApplyId;
	private long _porfolioId;
	private long _userId;
	private String _userUuid;
	private long _createdBy;
	private long _updatedBy;
	private Date _createDate;
	private Date _modifiedDate;
	private String _extra1;
	private String _extra2;
	private long _columnBitmask;
	private SPJobApplicantsPortfolio _escapedModel;
}
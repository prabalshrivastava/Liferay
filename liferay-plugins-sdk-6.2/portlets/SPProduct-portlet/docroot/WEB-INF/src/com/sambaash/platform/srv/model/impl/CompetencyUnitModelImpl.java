/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.CompetencyUnit;
import com.sambaash.platform.srv.model.CompetencyUnitModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CompetencyUnit service. Represents a row in the &quot;SPCompetencyUnit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.CompetencyUnitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompetencyUnitImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see CompetencyUnitImpl
 * @see com.sambaash.platform.srv.model.CompetencyUnit
 * @see com.sambaash.platform.srv.model.CompetencyUnitModel
 * @generated
 */
public class CompetencyUnitModelImpl extends BaseModelImpl<CompetencyUnit>
	implements CompetencyUnitModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a competency unit model instance should use the {@link com.sambaash.platform.srv.model.CompetencyUnit} interface instead.
	 */
	public static final String TABLE_NAME = "SPCompetencyUnit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spCompetencyUnitId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "countryId", Types.BIGINT },
			{ "spFrameworkId", Types.BIGINT },
			{ "competencyUnitCode", Types.VARCHAR },
			{ "competencyUnitDesc", Types.VARCHAR },
			{ "jobFamily", Types.BIGINT },
			{ "competencyLevel", Types.BIGINT },
			{ "creditValue", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPCompetencyUnit (spCompetencyUnitId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,countryId BIGINT(20),spFrameworkId BIGINT(20),competencyUnitCode VARCHAR(75) null,competencyUnitDesc LONGTEXT null,jobFamily BIGINT(20),competencyLevel BIGINT(20),creditValue BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPCompetencyUnit";
	public static final String ORDER_BY_JPQL = " ORDER BY competencyUnit.competencyUnitCode ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPCompetencyUnit.competencyUnitCode ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.CompetencyUnit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.CompetencyUnit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.CompetencyUnit"),
			true);
	public static long COMPETENCYUNITCODE_COLUMN_BITMASK = 1L;
	public static long COUNTRYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long SPFRAMEWORKID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.CompetencyUnit"));

	public CompetencyUnitModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spCompetencyUnitId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpCompetencyUnitId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spCompetencyUnitId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CompetencyUnit.class;
	}

	@Override
	public String getModelClassName() {
		return CompetencyUnit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spCompetencyUnitId", getSpCompetencyUnitId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("countryId", getCountryId());
		attributes.put("spFrameworkId", getSpFrameworkId());
		attributes.put("competencyUnitCode", getCompetencyUnitCode());
		attributes.put("competencyUnitDesc", getCompetencyUnitDesc());
		attributes.put("jobFamily", getJobFamily());
		attributes.put("competencyLevel", getCompetencyLevel());
		attributes.put("creditValue", getCreditValue());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spCompetencyUnitId = (Long)attributes.get("spCompetencyUnitId");

		if (spCompetencyUnitId != null) {
			setSpCompetencyUnitId(spCompetencyUnitId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		Long spFrameworkId = (Long)attributes.get("spFrameworkId");

		if (spFrameworkId != null) {
			setSpFrameworkId(spFrameworkId);
		}

		String competencyUnitCode = (String)attributes.get("competencyUnitCode");

		if (competencyUnitCode != null) {
			setCompetencyUnitCode(competencyUnitCode);
		}

		String competencyUnitDesc = (String)attributes.get("competencyUnitDesc");

		if (competencyUnitDesc != null) {
			setCompetencyUnitDesc(competencyUnitDesc);
		}

		Long jobFamily = (Long)attributes.get("jobFamily");

		if (jobFamily != null) {
			setJobFamily(jobFamily);
		}

		Long competencyLevel = (Long)attributes.get("competencyLevel");

		if (competencyLevel != null) {
			setCompetencyLevel(competencyLevel);
		}

		Long creditValue = (Long)attributes.get("creditValue");

		if (creditValue != null) {
			setCreditValue(creditValue);
		}
	}

	@Override
	public long getSpCompetencyUnitId() {
		return _spCompetencyUnitId;
	}

	@Override
	public void setSpCompetencyUnitId(long spCompetencyUnitId) {
		_spCompetencyUnitId = spCompetencyUnitId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCountryId() {
		return _countryId;
	}

	@Override
	public void setCountryId(long countryId) {
		_columnBitmask |= COUNTRYID_COLUMN_BITMASK;

		if (!_setOriginalCountryId) {
			_setOriginalCountryId = true;

			_originalCountryId = _countryId;
		}

		_countryId = countryId;
	}

	public long getOriginalCountryId() {
		return _originalCountryId;
	}

	@Override
	public long getSpFrameworkId() {
		return _spFrameworkId;
	}

	@Override
	public void setSpFrameworkId(long spFrameworkId) {
		_columnBitmask |= SPFRAMEWORKID_COLUMN_BITMASK;

		if (!_setOriginalSpFrameworkId) {
			_setOriginalSpFrameworkId = true;

			_originalSpFrameworkId = _spFrameworkId;
		}

		_spFrameworkId = spFrameworkId;
	}

	public long getOriginalSpFrameworkId() {
		return _originalSpFrameworkId;
	}

	@Override
	public String getCompetencyUnitCode() {
		if (_competencyUnitCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _competencyUnitCode;
		}
	}

	@Override
	public void setCompetencyUnitCode(String competencyUnitCode) {
		_columnBitmask = -1L;

		if (_originalCompetencyUnitCode == null) {
			_originalCompetencyUnitCode = _competencyUnitCode;
		}

		_competencyUnitCode = competencyUnitCode;
	}

	public String getOriginalCompetencyUnitCode() {
		return GetterUtil.getString(_originalCompetencyUnitCode);
	}

	@Override
	public String getCompetencyUnitDesc() {
		if (_competencyUnitDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _competencyUnitDesc;
		}
	}

	@Override
	public void setCompetencyUnitDesc(String competencyUnitDesc) {
		_competencyUnitDesc = competencyUnitDesc;
	}

	@Override
	public long getJobFamily() {
		return _jobFamily;
	}

	@Override
	public void setJobFamily(long jobFamily) {
		_jobFamily = jobFamily;
	}

	@Override
	public long getCompetencyLevel() {
		return _competencyLevel;
	}

	@Override
	public void setCompetencyLevel(long competencyLevel) {
		_competencyLevel = competencyLevel;
	}

	@Override
	public long getCreditValue() {
		return _creditValue;
	}

	@Override
	public void setCreditValue(long creditValue) {
		_creditValue = creditValue;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CompetencyUnit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CompetencyUnit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CompetencyUnit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompetencyUnitImpl competencyUnitImpl = new CompetencyUnitImpl();

		competencyUnitImpl.setSpCompetencyUnitId(getSpCompetencyUnitId());
		competencyUnitImpl.setGroupId(getGroupId());
		competencyUnitImpl.setCompanyId(getCompanyId());
		competencyUnitImpl.setUserId(getUserId());
		competencyUnitImpl.setUserName(getUserName());
		competencyUnitImpl.setCreateDate(getCreateDate());
		competencyUnitImpl.setModifiedDate(getModifiedDate());
		competencyUnitImpl.setCountryId(getCountryId());
		competencyUnitImpl.setSpFrameworkId(getSpFrameworkId());
		competencyUnitImpl.setCompetencyUnitCode(getCompetencyUnitCode());
		competencyUnitImpl.setCompetencyUnitDesc(getCompetencyUnitDesc());
		competencyUnitImpl.setJobFamily(getJobFamily());
		competencyUnitImpl.setCompetencyLevel(getCompetencyLevel());
		competencyUnitImpl.setCreditValue(getCreditValue());

		competencyUnitImpl.resetOriginalValues();

		return competencyUnitImpl;
	}

	@Override
	public int compareTo(CompetencyUnit competencyUnit) {
		int value = 0;

		value = getCompetencyUnitCode()
					.compareTo(competencyUnit.getCompetencyUnitCode());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CompetencyUnit)) {
			return false;
		}

		CompetencyUnit competencyUnit = (CompetencyUnit)obj;

		long primaryKey = competencyUnit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CompetencyUnitModelImpl competencyUnitModelImpl = this;

		competencyUnitModelImpl._originalGroupId = competencyUnitModelImpl._groupId;

		competencyUnitModelImpl._setOriginalGroupId = false;

		competencyUnitModelImpl._originalCountryId = competencyUnitModelImpl._countryId;

		competencyUnitModelImpl._setOriginalCountryId = false;

		competencyUnitModelImpl._originalSpFrameworkId = competencyUnitModelImpl._spFrameworkId;

		competencyUnitModelImpl._setOriginalSpFrameworkId = false;

		competencyUnitModelImpl._originalCompetencyUnitCode = competencyUnitModelImpl._competencyUnitCode;

		competencyUnitModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CompetencyUnit> toCacheModel() {
		CompetencyUnitCacheModel competencyUnitCacheModel = new CompetencyUnitCacheModel();

		competencyUnitCacheModel.spCompetencyUnitId = getSpCompetencyUnitId();

		competencyUnitCacheModel.groupId = getGroupId();

		competencyUnitCacheModel.companyId = getCompanyId();

		competencyUnitCacheModel.userId = getUserId();

		competencyUnitCacheModel.userName = getUserName();

		String userName = competencyUnitCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			competencyUnitCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			competencyUnitCacheModel.createDate = createDate.getTime();
		}
		else {
			competencyUnitCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			competencyUnitCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			competencyUnitCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		competencyUnitCacheModel.countryId = getCountryId();

		competencyUnitCacheModel.spFrameworkId = getSpFrameworkId();

		competencyUnitCacheModel.competencyUnitCode = getCompetencyUnitCode();

		String competencyUnitCode = competencyUnitCacheModel.competencyUnitCode;

		if ((competencyUnitCode != null) && (competencyUnitCode.length() == 0)) {
			competencyUnitCacheModel.competencyUnitCode = null;
		}

		competencyUnitCacheModel.competencyUnitDesc = getCompetencyUnitDesc();

		String competencyUnitDesc = competencyUnitCacheModel.competencyUnitDesc;

		if ((competencyUnitDesc != null) && (competencyUnitDesc.length() == 0)) {
			competencyUnitCacheModel.competencyUnitDesc = null;
		}

		competencyUnitCacheModel.jobFamily = getJobFamily();

		competencyUnitCacheModel.competencyLevel = getCompetencyLevel();

		competencyUnitCacheModel.creditValue = getCreditValue();

		return competencyUnitCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{spCompetencyUnitId=");
		sb.append(getSpCompetencyUnitId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", countryId=");
		sb.append(getCountryId());
		sb.append(", spFrameworkId=");
		sb.append(getSpFrameworkId());
		sb.append(", competencyUnitCode=");
		sb.append(getCompetencyUnitCode());
		sb.append(", competencyUnitDesc=");
		sb.append(getCompetencyUnitDesc());
		sb.append(", jobFamily=");
		sb.append(getJobFamily());
		sb.append(", competencyLevel=");
		sb.append(getCompetencyLevel());
		sb.append(", creditValue=");
		sb.append(getCreditValue());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.CompetencyUnit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spCompetencyUnitId</column-name><column-value><![CDATA[");
		sb.append(getSpCompetencyUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spFrameworkId</column-name><column-value><![CDATA[");
		sb.append(getSpFrameworkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>competencyUnitCode</column-name><column-value><![CDATA[");
		sb.append(getCompetencyUnitCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>competencyUnitDesc</column-name><column-value><![CDATA[");
		sb.append(getCompetencyUnitDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobFamily</column-name><column-value><![CDATA[");
		sb.append(getJobFamily());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>competencyLevel</column-name><column-value><![CDATA[");
		sb.append(getCompetencyLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creditValue</column-name><column-value><![CDATA[");
		sb.append(getCreditValue());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CompetencyUnit.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CompetencyUnit.class
		};
	private long _spCompetencyUnitId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _countryId;
	private long _originalCountryId;
	private boolean _setOriginalCountryId;
	private long _spFrameworkId;
	private long _originalSpFrameworkId;
	private boolean _setOriginalSpFrameworkId;
	private String _competencyUnitCode;
	private String _originalCompetencyUnitCode;
	private String _competencyUnitDesc;
	private long _jobFamily;
	private long _competencyLevel;
	private long _creditValue;
	private long _columnBitmask;
	private CompetencyUnit _escapedModel;
}
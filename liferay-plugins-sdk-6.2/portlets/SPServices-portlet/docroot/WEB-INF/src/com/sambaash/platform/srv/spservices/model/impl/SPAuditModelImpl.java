/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.SPAudit;
import com.sambaash.platform.srv.spservices.model.SPAuditModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPAudit service. Represents a row in the &quot;SPAudit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.SPAuditModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPAuditImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPAuditImpl
 * @see com.sambaash.platform.srv.spservices.model.SPAudit
 * @see com.sambaash.platform.srv.spservices.model.SPAuditModel
 * @generated
 */
public class SPAuditModelImpl extends BaseModelImpl<SPAudit>
	implements SPAuditModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p audit model instance should use the {@link com.sambaash.platform.srv.spservices.model.SPAudit} interface instead.
	 */
	public static final String TABLE_NAME = "SPAudit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "SPAuditId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "doneByUserId", Types.BIGINT },
			{ "entityClassNameId", Types.BIGINT },
			{ "entityId", Types.BIGINT },
			{ "action", Types.VARCHAR },
			{ "field1Str", Types.VARCHAR },
			{ "field1Long", Types.BIGINT },
			{ "field2Str", Types.VARCHAR },
			{ "field2Long", Types.BIGINT },
			{ "data1", Types.CLOB },
			{ "data2", Types.CLOB }
		};
	public static final String TABLE_SQL_CREATE = "create table SPAudit (uuid_ VARCHAR(75) null,SPAuditId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,doneByUserId BIGINT(20),entityClassNameId BIGINT(20),entityId BIGINT(20),action VARCHAR(75) null,field1Str VARCHAR(75) null,field1Long BIGINT(20),field2Str VARCHAR(75) null,field2Long BIGINT(20),data1 LONGTEXT null,data2 LONGTEXT null)";
	public static final String TABLE_SQL_DROP = "drop table SPAudit";
	public static final String ORDER_BY_JPQL = " ORDER BY spAudit.SPAuditId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPAudit.SPAuditId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.SPAudit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.SPAudit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.SPAudit"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long SPAUDITID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.SPAudit"));

	public SPAuditModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _SPAuditId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSPAuditId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _SPAuditId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPAudit.class;
	}

	@Override
	public String getModelClassName() {
		return SPAudit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("SPAuditId", getSPAuditId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("doneByUserId", getDoneByUserId());
		attributes.put("entityClassNameId", getEntityClassNameId());
		attributes.put("entityId", getEntityId());
		attributes.put("action", getAction());
		attributes.put("field1Str", getField1Str());
		attributes.put("field1Long", getField1Long());
		attributes.put("field2Str", getField2Str());
		attributes.put("field2Long", getField2Long());
		attributes.put("data1", getData1());
		attributes.put("data2", getData2());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long SPAuditId = (Long)attributes.get("SPAuditId");

		if (SPAuditId != null) {
			setSPAuditId(SPAuditId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long doneByUserId = (Long)attributes.get("doneByUserId");

		if (doneByUserId != null) {
			setDoneByUserId(doneByUserId);
		}

		Long entityClassNameId = (Long)attributes.get("entityClassNameId");

		if (entityClassNameId != null) {
			setEntityClassNameId(entityClassNameId);
		}

		Long entityId = (Long)attributes.get("entityId");

		if (entityId != null) {
			setEntityId(entityId);
		}

		String action = (String)attributes.get("action");

		if (action != null) {
			setAction(action);
		}

		String field1Str = (String)attributes.get("field1Str");

		if (field1Str != null) {
			setField1Str(field1Str);
		}

		Long field1Long = (Long)attributes.get("field1Long");

		if (field1Long != null) {
			setField1Long(field1Long);
		}

		String field2Str = (String)attributes.get("field2Str");

		if (field2Str != null) {
			setField2Str(field2Str);
		}

		Long field2Long = (Long)attributes.get("field2Long");

		if (field2Long != null) {
			setField2Long(field2Long);
		}

		String data1 = (String)attributes.get("data1");

		if (data1 != null) {
			setData1(data1);
		}

		String data2 = (String)attributes.get("data2");

		if (data2 != null) {
			setData2(data2);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSPAuditId() {
		return _SPAuditId;
	}

	@Override
	public void setSPAuditId(long SPAuditId) {
		_SPAuditId = SPAuditId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDoneByUserId() {
		return _doneByUserId;
	}

	@Override
	public void setDoneByUserId(long doneByUserId) {
		_doneByUserId = doneByUserId;
	}

	@Override
	public String getDoneByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getDoneByUserId(), "uuid",
			_doneByUserUuid);
	}

	@Override
	public void setDoneByUserUuid(String doneByUserUuid) {
		_doneByUserUuid = doneByUserUuid;
	}

	@Override
	public long getEntityClassNameId() {
		return _entityClassNameId;
	}

	@Override
	public void setEntityClassNameId(long entityClassNameId) {
		_entityClassNameId = entityClassNameId;
	}

	@Override
	public long getEntityId() {
		return _entityId;
	}

	@Override
	public void setEntityId(long entityId) {
		_entityId = entityId;
	}

	@Override
	public String getAction() {
		if (_action == null) {
			return StringPool.BLANK;
		}
		else {
			return _action;
		}
	}

	@Override
	public void setAction(String action) {
		_action = action;
	}

	@Override
	public String getField1Str() {
		if (_field1Str == null) {
			return StringPool.BLANK;
		}
		else {
			return _field1Str;
		}
	}

	@Override
	public void setField1Str(String field1Str) {
		_field1Str = field1Str;
	}

	@Override
	public long getField1Long() {
		return _field1Long;
	}

	@Override
	public void setField1Long(long field1Long) {
		_field1Long = field1Long;
	}

	@Override
	public String getField2Str() {
		if (_field2Str == null) {
			return StringPool.BLANK;
		}
		else {
			return _field2Str;
		}
	}

	@Override
	public void setField2Str(String field2Str) {
		_field2Str = field2Str;
	}

	@Override
	public long getField2Long() {
		return _field2Long;
	}

	@Override
	public void setField2Long(long field2Long) {
		_field2Long = field2Long;
	}

	@Override
	public String getData1() {
		if (_data1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _data1;
		}
	}

	@Override
	public void setData1(String data1) {
		_data1 = data1;
	}

	@Override
	public String getData2() {
		if (_data2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _data2;
		}
	}

	@Override
	public void setData2(String data2) {
		_data2 = data2;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SPAudit.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPAudit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPAudit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPAudit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPAuditImpl spAuditImpl = new SPAuditImpl();

		spAuditImpl.setUuid(getUuid());
		spAuditImpl.setSPAuditId(getSPAuditId());
		spAuditImpl.setGroupId(getGroupId());
		spAuditImpl.setCompanyId(getCompanyId());
		spAuditImpl.setUserId(getUserId());
		spAuditImpl.setUserName(getUserName());
		spAuditImpl.setCreateDate(getCreateDate());
		spAuditImpl.setModifiedDate(getModifiedDate());
		spAuditImpl.setDoneByUserId(getDoneByUserId());
		spAuditImpl.setEntityClassNameId(getEntityClassNameId());
		spAuditImpl.setEntityId(getEntityId());
		spAuditImpl.setAction(getAction());
		spAuditImpl.setField1Str(getField1Str());
		spAuditImpl.setField1Long(getField1Long());
		spAuditImpl.setField2Str(getField2Str());
		spAuditImpl.setField2Long(getField2Long());
		spAuditImpl.setData1(getData1());
		spAuditImpl.setData2(getData2());

		spAuditImpl.resetOriginalValues();

		return spAuditImpl;
	}

	@Override
	public int compareTo(SPAudit spAudit) {
		long primaryKey = spAudit.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPAudit)) {
			return false;
		}

		SPAudit spAudit = (SPAudit)obj;

		long primaryKey = spAudit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPAuditModelImpl spAuditModelImpl = this;

		spAuditModelImpl._originalUuid = spAuditModelImpl._uuid;

		spAuditModelImpl._originalGroupId = spAuditModelImpl._groupId;

		spAuditModelImpl._setOriginalGroupId = false;

		spAuditModelImpl._originalCompanyId = spAuditModelImpl._companyId;

		spAuditModelImpl._setOriginalCompanyId = false;

		spAuditModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPAudit> toCacheModel() {
		SPAuditCacheModel spAuditCacheModel = new SPAuditCacheModel();

		spAuditCacheModel.uuid = getUuid();

		String uuid = spAuditCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spAuditCacheModel.uuid = null;
		}

		spAuditCacheModel.SPAuditId = getSPAuditId();

		spAuditCacheModel.groupId = getGroupId();

		spAuditCacheModel.companyId = getCompanyId();

		spAuditCacheModel.userId = getUserId();

		spAuditCacheModel.userName = getUserName();

		String userName = spAuditCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spAuditCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spAuditCacheModel.createDate = createDate.getTime();
		}
		else {
			spAuditCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spAuditCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spAuditCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spAuditCacheModel.doneByUserId = getDoneByUserId();

		spAuditCacheModel.entityClassNameId = getEntityClassNameId();

		spAuditCacheModel.entityId = getEntityId();

		spAuditCacheModel.action = getAction();

		String action = spAuditCacheModel.action;

		if ((action != null) && (action.length() == 0)) {
			spAuditCacheModel.action = null;
		}

		spAuditCacheModel.field1Str = getField1Str();

		String field1Str = spAuditCacheModel.field1Str;

		if ((field1Str != null) && (field1Str.length() == 0)) {
			spAuditCacheModel.field1Str = null;
		}

		spAuditCacheModel.field1Long = getField1Long();

		spAuditCacheModel.field2Str = getField2Str();

		String field2Str = spAuditCacheModel.field2Str;

		if ((field2Str != null) && (field2Str.length() == 0)) {
			spAuditCacheModel.field2Str = null;
		}

		spAuditCacheModel.field2Long = getField2Long();

		spAuditCacheModel.data1 = getData1();

		String data1 = spAuditCacheModel.data1;

		if ((data1 != null) && (data1.length() == 0)) {
			spAuditCacheModel.data1 = null;
		}

		spAuditCacheModel.data2 = getData2();

		String data2 = spAuditCacheModel.data2;

		if ((data2 != null) && (data2.length() == 0)) {
			spAuditCacheModel.data2 = null;
		}

		return spAuditCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", SPAuditId=");
		sb.append(getSPAuditId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", doneByUserId=");
		sb.append(getDoneByUserId());
		sb.append(", entityClassNameId=");
		sb.append(getEntityClassNameId());
		sb.append(", entityId=");
		sb.append(getEntityId());
		sb.append(", action=");
		sb.append(getAction());
		sb.append(", field1Str=");
		sb.append(getField1Str());
		sb.append(", field1Long=");
		sb.append(getField1Long());
		sb.append(", field2Str=");
		sb.append(getField2Str());
		sb.append(", field2Long=");
		sb.append(getField2Long());
		sb.append(", data1=");
		sb.append(getData1());
		sb.append(", data2=");
		sb.append(getData2());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spservices.model.SPAudit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SPAuditId</column-name><column-value><![CDATA[");
		sb.append(getSPAuditId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doneByUserId</column-name><column-value><![CDATA[");
		sb.append(getDoneByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassNameId</column-name><column-value><![CDATA[");
		sb.append(getEntityClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityId</column-name><column-value><![CDATA[");
		sb.append(getEntityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>action</column-name><column-value><![CDATA[");
		sb.append(getAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field1Str</column-name><column-value><![CDATA[");
		sb.append(getField1Str());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field1Long</column-name><column-value><![CDATA[");
		sb.append(getField1Long());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field2Str</column-name><column-value><![CDATA[");
		sb.append(getField2Str());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>field2Long</column-name><column-value><![CDATA[");
		sb.append(getField2Long());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data1</column-name><column-value><![CDATA[");
		sb.append(getData1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data2</column-name><column-value><![CDATA[");
		sb.append(getData2());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPAudit.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPAudit.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _SPAuditId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _doneByUserId;
	private String _doneByUserUuid;
	private long _entityClassNameId;
	private long _entityId;
	private String _action;
	private String _field1Str;
	private long _field1Long;
	private String _field2Str;
	private long _field2Long;
	private String _data1;
	private String _data2;
	private long _columnBitmask;
	private SPAudit _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spshopping.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spshopping.model.SPSellingPackage;
import com.sambaash.platform.srv.spshopping.model.SPSellingPackageModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPSellingPackage service. Represents a row in the &quot;SPSellingPackage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spshopping.model.SPSellingPackageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPSellingPackageImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPSellingPackageImpl
 * @see com.sambaash.platform.srv.spshopping.model.SPSellingPackage
 * @see com.sambaash.platform.srv.spshopping.model.SPSellingPackageModel
 * @generated
 */
public class SPSellingPackageModelImpl extends BaseModelImpl<SPSellingPackage>
	implements SPSellingPackageModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p selling package model instance should use the {@link com.sambaash.platform.srv.spshopping.model.SPSellingPackage} interface instead.
	 */
	public static final String TABLE_NAME = "SPSellingPackage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spSellingPackageId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "pkgCode", Types.VARCHAR },
			{ "shortDescription", Types.VARCHAR },
			{ "longDescription", Types.VARCHAR },
			{ "currencyCode", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "notify", Types.VARCHAR },
			{ "needsPayment", Types.BOOLEAN },
			{ "orderPage", Types.VARCHAR },
			{ "orderSequence", Types.VARCHAR },
			{ "active_", Types.BOOLEAN },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSellingPackage (spSellingPackageId BIGINT(20) not null primary key,groupId BIGINT(20),title VARCHAR(500) null,pkgCode VARCHAR(75) null,shortDescription VARCHAR(500) null,longDescription LONGTEXT null,currencyCode VARCHAR(75) null,startDate DATETIME null,endDate DATETIME null,notify VARCHAR(75) null,needsPayment BOOLEAN,orderPage VARCHAR(75) null,orderSequence VARCHAR(75) null,active_ BOOLEAN,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPSellingPackage";
	public static final String ORDER_BY_JPQL = " ORDER BY spSellingPackage.spSellingPackageId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSellingPackage.spSellingPackageId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingPackage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingPackage"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingPackage"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long SPSELLINGPACKAGEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spshopping.model.SPSellingPackage"));

	public SPSellingPackageModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spSellingPackageId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpSellingPackageId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spSellingPackageId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPSellingPackage.class;
	}

	@Override
	public String getModelClassName() {
		return SPSellingPackage.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spSellingPackageId", getSpSellingPackageId());
		attributes.put("groupId", getGroupId());
		attributes.put("title", getTitle());
		attributes.put("pkgCode", getPkgCode());
		attributes.put("shortDescription", getShortDescription());
		attributes.put("longDescription", getLongDescription());
		attributes.put("currencyCode", getCurrencyCode());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("notify", getNotify());
		attributes.put("needsPayment", getNeedsPayment());
		attributes.put("orderPage", getOrderPage());
		attributes.put("orderSequence", getOrderSequence());
		attributes.put("active", getActive());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spSellingPackageId = (Long)attributes.get("spSellingPackageId");

		if (spSellingPackageId != null) {
			setSpSellingPackageId(spSellingPackageId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String pkgCode = (String)attributes.get("pkgCode");

		if (pkgCode != null) {
			setPkgCode(pkgCode);
		}

		String shortDescription = (String)attributes.get("shortDescription");

		if (shortDescription != null) {
			setShortDescription(shortDescription);
		}

		String longDescription = (String)attributes.get("longDescription");

		if (longDescription != null) {
			setLongDescription(longDescription);
		}

		String currencyCode = (String)attributes.get("currencyCode");

		if (currencyCode != null) {
			setCurrencyCode(currencyCode);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		String notify = (String)attributes.get("notify");

		if (notify != null) {
			setNotify(notify);
		}

		Boolean needsPayment = (Boolean)attributes.get("needsPayment");

		if (needsPayment != null) {
			setNeedsPayment(needsPayment);
		}

		String orderPage = (String)attributes.get("orderPage");

		if (orderPage != null) {
			setOrderPage(orderPage);
		}

		String orderSequence = (String)attributes.get("orderSequence");

		if (orderSequence != null) {
			setOrderSequence(orderSequence);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSpSellingPackageId() {
		return _spSellingPackageId;
	}

	@Override
	public void setSpSellingPackageId(long spSellingPackageId) {
		_spSellingPackageId = spSellingPackageId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getPkgCode() {
		if (_pkgCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _pkgCode;
		}
	}

	@Override
	public void setPkgCode(String pkgCode) {
		_pkgCode = pkgCode;
	}

	@Override
	public String getShortDescription() {
		if (_shortDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortDescription;
		}
	}

	@Override
	public void setShortDescription(String shortDescription) {
		_shortDescription = shortDescription;
	}

	@Override
	public String getLongDescription() {
		if (_longDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _longDescription;
		}
	}

	@Override
	public void setLongDescription(String longDescription) {
		_longDescription = longDescription;
	}

	@Override
	public String getCurrencyCode() {
		if (_currencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _currencyCode;
		}
	}

	@Override
	public void setCurrencyCode(String currencyCode) {
		_currencyCode = currencyCode;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public String getNotify() {
		if (_notify == null) {
			return StringPool.BLANK;
		}
		else {
			return _notify;
		}
	}

	@Override
	public void setNotify(String notify) {
		_notify = notify;
	}

	@Override
	public boolean getNeedsPayment() {
		return _needsPayment;
	}

	@Override
	public boolean isNeedsPayment() {
		return _needsPayment;
	}

	@Override
	public void setNeedsPayment(boolean needsPayment) {
		_needsPayment = needsPayment;
	}

	@Override
	public String getOrderPage() {
		if (_orderPage == null) {
			return StringPool.BLANK;
		}
		else {
			return _orderPage;
		}
	}

	@Override
	public void setOrderPage(String orderPage) {
		_orderPage = orderPage;
	}

	@Override
	public String getOrderSequence() {
		if (_orderSequence == null) {
			return StringPool.BLANK;
		}
		else {
			return _orderSequence;
		}
	}

	@Override
	public void setOrderSequence(String orderSequence) {
		_orderSequence = orderSequence;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPSellingPackage.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPSellingPackage toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPSellingPackage)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPSellingPackageImpl spSellingPackageImpl = new SPSellingPackageImpl();

		spSellingPackageImpl.setSpSellingPackageId(getSpSellingPackageId());
		spSellingPackageImpl.setGroupId(getGroupId());
		spSellingPackageImpl.setTitle(getTitle());
		spSellingPackageImpl.setPkgCode(getPkgCode());
		spSellingPackageImpl.setShortDescription(getShortDescription());
		spSellingPackageImpl.setLongDescription(getLongDescription());
		spSellingPackageImpl.setCurrencyCode(getCurrencyCode());
		spSellingPackageImpl.setStartDate(getStartDate());
		spSellingPackageImpl.setEndDate(getEndDate());
		spSellingPackageImpl.setNotify(getNotify());
		spSellingPackageImpl.setNeedsPayment(getNeedsPayment());
		spSellingPackageImpl.setOrderPage(getOrderPage());
		spSellingPackageImpl.setOrderSequence(getOrderSequence());
		spSellingPackageImpl.setActive(getActive());
		spSellingPackageImpl.setCompanyId(getCompanyId());
		spSellingPackageImpl.setUserId(getUserId());
		spSellingPackageImpl.setUserName(getUserName());
		spSellingPackageImpl.setCreateDate(getCreateDate());
		spSellingPackageImpl.setModifiedDate(getModifiedDate());

		spSellingPackageImpl.resetOriginalValues();

		return spSellingPackageImpl;
	}

	@Override
	public int compareTo(SPSellingPackage spSellingPackage) {
		long primaryKey = spSellingPackage.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPSellingPackage)) {
			return false;
		}

		SPSellingPackage spSellingPackage = (SPSellingPackage)obj;

		long primaryKey = spSellingPackage.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPSellingPackageModelImpl spSellingPackageModelImpl = this;

		spSellingPackageModelImpl._originalActive = spSellingPackageModelImpl._active;

		spSellingPackageModelImpl._setOriginalActive = false;

		spSellingPackageModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPSellingPackage> toCacheModel() {
		SPSellingPackageCacheModel spSellingPackageCacheModel = new SPSellingPackageCacheModel();

		spSellingPackageCacheModel.spSellingPackageId = getSpSellingPackageId();

		spSellingPackageCacheModel.groupId = getGroupId();

		spSellingPackageCacheModel.title = getTitle();

		String title = spSellingPackageCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			spSellingPackageCacheModel.title = null;
		}

		spSellingPackageCacheModel.pkgCode = getPkgCode();

		String pkgCode = spSellingPackageCacheModel.pkgCode;

		if ((pkgCode != null) && (pkgCode.length() == 0)) {
			spSellingPackageCacheModel.pkgCode = null;
		}

		spSellingPackageCacheModel.shortDescription = getShortDescription();

		String shortDescription = spSellingPackageCacheModel.shortDescription;

		if ((shortDescription != null) && (shortDescription.length() == 0)) {
			spSellingPackageCacheModel.shortDescription = null;
		}

		spSellingPackageCacheModel.longDescription = getLongDescription();

		String longDescription = spSellingPackageCacheModel.longDescription;

		if ((longDescription != null) && (longDescription.length() == 0)) {
			spSellingPackageCacheModel.longDescription = null;
		}

		spSellingPackageCacheModel.currencyCode = getCurrencyCode();

		String currencyCode = spSellingPackageCacheModel.currencyCode;

		if ((currencyCode != null) && (currencyCode.length() == 0)) {
			spSellingPackageCacheModel.currencyCode = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			spSellingPackageCacheModel.startDate = startDate.getTime();
		}
		else {
			spSellingPackageCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			spSellingPackageCacheModel.endDate = endDate.getTime();
		}
		else {
			spSellingPackageCacheModel.endDate = Long.MIN_VALUE;
		}

		spSellingPackageCacheModel.notify = getNotify();

		String notify = spSellingPackageCacheModel.notify;

		if ((notify != null) && (notify.length() == 0)) {
			spSellingPackageCacheModel.notify = null;
		}

		spSellingPackageCacheModel.needsPayment = getNeedsPayment();

		spSellingPackageCacheModel.orderPage = getOrderPage();

		String orderPage = spSellingPackageCacheModel.orderPage;

		if ((orderPage != null) && (orderPage.length() == 0)) {
			spSellingPackageCacheModel.orderPage = null;
		}

		spSellingPackageCacheModel.orderSequence = getOrderSequence();

		String orderSequence = spSellingPackageCacheModel.orderSequence;

		if ((orderSequence != null) && (orderSequence.length() == 0)) {
			spSellingPackageCacheModel.orderSequence = null;
		}

		spSellingPackageCacheModel.active = getActive();

		spSellingPackageCacheModel.companyId = getCompanyId();

		spSellingPackageCacheModel.userId = getUserId();

		spSellingPackageCacheModel.userName = getUserName();

		String userName = spSellingPackageCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spSellingPackageCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spSellingPackageCacheModel.createDate = createDate.getTime();
		}
		else {
			spSellingPackageCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spSellingPackageCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spSellingPackageCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spSellingPackageCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{spSellingPackageId=");
		sb.append(getSpSellingPackageId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", pkgCode=");
		sb.append(getPkgCode());
		sb.append(", shortDescription=");
		sb.append(getShortDescription());
		sb.append(", longDescription=");
		sb.append(getLongDescription());
		sb.append(", currencyCode=");
		sb.append(getCurrencyCode());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", notify=");
		sb.append(getNotify());
		sb.append(", needsPayment=");
		sb.append(getNeedsPayment());
		sb.append(", orderPage=");
		sb.append(getOrderPage());
		sb.append(", orderSequence=");
		sb.append(getOrderSequence());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spshopping.model.SPSellingPackage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spSellingPackageId</column-name><column-value><![CDATA[");
		sb.append(getSpSellingPackageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pkgCode</column-name><column-value><![CDATA[");
		sb.append(getPkgCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortDescription</column-name><column-value><![CDATA[");
		sb.append(getShortDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longDescription</column-name><column-value><![CDATA[");
		sb.append(getLongDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currencyCode</column-name><column-value><![CDATA[");
		sb.append(getCurrencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notify</column-name><column-value><![CDATA[");
		sb.append(getNotify());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>needsPayment</column-name><column-value><![CDATA[");
		sb.append(getNeedsPayment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orderPage</column-name><column-value><![CDATA[");
		sb.append(getOrderPage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orderSequence</column-name><column-value><![CDATA[");
		sb.append(getOrderSequence());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPSellingPackage.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPSellingPackage.class
		};
	private long _spSellingPackageId;
	private long _groupId;
	private String _title;
	private String _pkgCode;
	private String _shortDescription;
	private String _longDescription;
	private String _currencyCode;
	private Date _startDate;
	private Date _endDate;
	private String _notify;
	private boolean _needsPayment;
	private String _orderPage;
	private String _orderSequence;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private SPSellingPackage _escapedModel;
}
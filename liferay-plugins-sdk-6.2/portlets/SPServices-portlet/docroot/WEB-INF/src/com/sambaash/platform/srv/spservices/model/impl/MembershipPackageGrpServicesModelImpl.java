/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices;
import com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServicesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MembershipPackageGrpServices service. Represents a row in the &quot;SPMembershipPackageGrpServices&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServicesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MembershipPackageGrpServicesImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see MembershipPackageGrpServicesImpl
 * @see com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices
 * @see com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServicesModel
 * @generated
 */
public class MembershipPackageGrpServicesModelImpl extends BaseModelImpl<MembershipPackageGrpServices>
	implements MembershipPackageGrpServicesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a membership package grp services model instance should use the {@link com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices} interface instead.
	 */
	public static final String TABLE_NAME = "SPMembershipPackageGrpServices";
	public static final Object[][] TABLE_COLUMNS = {
			{ "mpgsscId", Types.BIGINT },
			{ "mpId", Types.BIGINT },
			{ "scorder", Types.INTEGER },
			{ "scgId", Types.VARCHAR },
			{ "scId", Types.VARCHAR },
			{ "paramType", Types.VARCHAR },
			{ "paramFrom", Types.VARCHAR },
			{ "paramUpto", Types.VARCHAR },
			{ "duration", Types.VARCHAR },
			{ "durationType", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "dateAdded", Types.TIMESTAMP },
			{ "dateModified", Types.TIMESTAMP },
			{ "createdBy", Types.VARCHAR },
			{ "modifiedBy", Types.VARCHAR },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR },
			{ "extra3", Types.VARCHAR },
			{ "extra4", Types.VARCHAR },
			{ "extra5", Types.TIMESTAMP },
			{ "extra6", Types.TIMESTAMP },
			{ "serviceCharges", Types.FLOAT },
			{ "costCurrency", Types.VARCHAR },
			{ "costPeriod", Types.VARCHAR },
			{ "costPeriodType", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMembershipPackageGrpServices (mpgsscId BIGINT(20) not null primary key,mpId BIGINT(20),scorder INTEGER,scgId VARCHAR(75) null,scId VARCHAR(75) null,paramType VARCHAR(75) null,paramFrom VARCHAR(75) null,paramUpto VARCHAR(75) null,duration VARCHAR(75) null,durationType VARCHAR(75) null,status VARCHAR(75) null,description VARCHAR(75) null,dateAdded DATETIME null,dateModified DATETIME null,createdBy VARCHAR(75) null,modifiedBy VARCHAR(75) null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,extra4 VARCHAR(75) null,extra5 DATETIME null,extra6 DATETIME null,serviceCharges DOUBLE,costCurrency VARCHAR(75) null,costPeriod VARCHAR(75) null,costPeriodType VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPMembershipPackageGrpServices";
	public static final String ORDER_BY_JPQL = " ORDER BY membershipPackageGrpServices.scgId ASC, membershipPackageGrpServices.scorder ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMembershipPackageGrpServices.scgId ASC, SPMembershipPackageGrpServices.scorder ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices"),
			true);
	public static long EXTRA2_COLUMN_BITMASK = 1L;
	public static long MPID_COLUMN_BITMASK = 2L;
	public static long SCID_COLUMN_BITMASK = 4L;
	public static long SCGID_COLUMN_BITMASK = 8L;
	public static long SCORDER_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices"));

	public MembershipPackageGrpServicesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _mpgsscId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMpgsscId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _mpgsscId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MembershipPackageGrpServices.class;
	}

	@Override
	public String getModelClassName() {
		return MembershipPackageGrpServices.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("mpgsscId", getMpgsscId());
		attributes.put("mpId", getMpId());
		attributes.put("scorder", getScorder());
		attributes.put("scgId", getScgId());
		attributes.put("scId", getScId());
		attributes.put("paramType", getParamType());
		attributes.put("paramFrom", getParamFrom());
		attributes.put("paramUpto", getParamUpto());
		attributes.put("duration", getDuration());
		attributes.put("durationType", getDurationType());
		attributes.put("status", getStatus());
		attributes.put("description", getDescription());
		attributes.put("dateAdded", getDateAdded());
		attributes.put("dateModified", getDateModified());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());
		attributes.put("extra3", getExtra3());
		attributes.put("extra4", getExtra4());
		attributes.put("extra5", getExtra5());
		attributes.put("extra6", getExtra6());
		attributes.put("serviceCharges", getServiceCharges());
		attributes.put("costCurrency", getCostCurrency());
		attributes.put("costPeriod", getCostPeriod());
		attributes.put("costPeriodType", getCostPeriodType());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long mpgsscId = (Long)attributes.get("mpgsscId");

		if (mpgsscId != null) {
			setMpgsscId(mpgsscId);
		}

		Long mpId = (Long)attributes.get("mpId");

		if (mpId != null) {
			setMpId(mpId);
		}

		Integer scorder = (Integer)attributes.get("scorder");

		if (scorder != null) {
			setScorder(scorder);
		}

		String scgId = (String)attributes.get("scgId");

		if (scgId != null) {
			setScgId(scgId);
		}

		String scId = (String)attributes.get("scId");

		if (scId != null) {
			setScId(scId);
		}

		String paramType = (String)attributes.get("paramType");

		if (paramType != null) {
			setParamType(paramType);
		}

		String paramFrom = (String)attributes.get("paramFrom");

		if (paramFrom != null) {
			setParamFrom(paramFrom);
		}

		String paramUpto = (String)attributes.get("paramUpto");

		if (paramUpto != null) {
			setParamUpto(paramUpto);
		}

		String duration = (String)attributes.get("duration");

		if (duration != null) {
			setDuration(duration);
		}

		String durationType = (String)attributes.get("durationType");

		if (durationType != null) {
			setDurationType(durationType);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Date dateAdded = (Date)attributes.get("dateAdded");

		if (dateAdded != null) {
			setDateAdded(dateAdded);
		}

		Date dateModified = (Date)attributes.get("dateModified");

		if (dateModified != null) {
			setDateModified(dateModified);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}

		String extra3 = (String)attributes.get("extra3");

		if (extra3 != null) {
			setExtra3(extra3);
		}

		String extra4 = (String)attributes.get("extra4");

		if (extra4 != null) {
			setExtra4(extra4);
		}

		Date extra5 = (Date)attributes.get("extra5");

		if (extra5 != null) {
			setExtra5(extra5);
		}

		Date extra6 = (Date)attributes.get("extra6");

		if (extra6 != null) {
			setExtra6(extra6);
		}

		Float serviceCharges = (Float)attributes.get("serviceCharges");

		if (serviceCharges != null) {
			setServiceCharges(serviceCharges);
		}

		String costCurrency = (String)attributes.get("costCurrency");

		if (costCurrency != null) {
			setCostCurrency(costCurrency);
		}

		String costPeriod = (String)attributes.get("costPeriod");

		if (costPeriod != null) {
			setCostPeriod(costPeriod);
		}

		String costPeriodType = (String)attributes.get("costPeriodType");

		if (costPeriodType != null) {
			setCostPeriodType(costPeriodType);
		}
	}

	@Override
	public long getMpgsscId() {
		return _mpgsscId;
	}

	@Override
	public void setMpgsscId(long mpgsscId) {
		_mpgsscId = mpgsscId;
	}

	@Override
	public long getMpId() {
		return _mpId;
	}

	@Override
	public void setMpId(long mpId) {
		_columnBitmask |= MPID_COLUMN_BITMASK;

		if (!_setOriginalMpId) {
			_setOriginalMpId = true;

			_originalMpId = _mpId;
		}

		_mpId = mpId;
	}

	public long getOriginalMpId() {
		return _originalMpId;
	}

	@Override
	public int getScorder() {
		return _scorder;
	}

	@Override
	public void setScorder(int scorder) {
		_columnBitmask = -1L;

		_scorder = scorder;
	}

	@Override
	public String getScgId() {
		if (_scgId == null) {
			return StringPool.BLANK;
		}
		else {
			return _scgId;
		}
	}

	@Override
	public void setScgId(String scgId) {
		_columnBitmask = -1L;

		if (_originalScgId == null) {
			_originalScgId = _scgId;
		}

		_scgId = scgId;
	}

	public String getOriginalScgId() {
		return GetterUtil.getString(_originalScgId);
	}

	@Override
	public String getScId() {
		if (_scId == null) {
			return StringPool.BLANK;
		}
		else {
			return _scId;
		}
	}

	@Override
	public void setScId(String scId) {
		_columnBitmask |= SCID_COLUMN_BITMASK;

		if (_originalScId == null) {
			_originalScId = _scId;
		}

		_scId = scId;
	}

	public String getOriginalScId() {
		return GetterUtil.getString(_originalScId);
	}

	@Override
	public String getParamType() {
		if (_paramType == null) {
			return StringPool.BLANK;
		}
		else {
			return _paramType;
		}
	}

	@Override
	public void setParamType(String paramType) {
		_paramType = paramType;
	}

	@Override
	public String getParamFrom() {
		if (_paramFrom == null) {
			return StringPool.BLANK;
		}
		else {
			return _paramFrom;
		}
	}

	@Override
	public void setParamFrom(String paramFrom) {
		_paramFrom = paramFrom;
	}

	@Override
	public String getParamUpto() {
		if (_paramUpto == null) {
			return StringPool.BLANK;
		}
		else {
			return _paramUpto;
		}
	}

	@Override
	public void setParamUpto(String paramUpto) {
		_paramUpto = paramUpto;
	}

	@Override
	public String getDuration() {
		if (_duration == null) {
			return StringPool.BLANK;
		}
		else {
			return _duration;
		}
	}

	@Override
	public void setDuration(String duration) {
		_duration = duration;
	}

	@Override
	public String getDurationType() {
		if (_durationType == null) {
			return StringPool.BLANK;
		}
		else {
			return _durationType;
		}
	}

	@Override
	public void setDurationType(String durationType) {
		_durationType = durationType;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public Date getDateAdded() {
		return _dateAdded;
	}

	@Override
	public void setDateAdded(Date dateAdded) {
		_dateAdded = dateAdded;
	}

	@Override
	public Date getDateModified() {
		return _dateModified;
	}

	@Override
	public void setDateModified(Date dateModified) {
		_dateModified = dateModified;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_columnBitmask |= EXTRA2_COLUMN_BITMASK;

		if (_originalExtra2 == null) {
			_originalExtra2 = _extra2;
		}

		_extra2 = extra2;
	}

	public String getOriginalExtra2() {
		return GetterUtil.getString(_originalExtra2);
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public String getExtra4() {
		if (_extra4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra4;
		}
	}

	@Override
	public void setExtra4(String extra4) {
		_extra4 = extra4;
	}

	@Override
	public Date getExtra5() {
		return _extra5;
	}

	@Override
	public void setExtra5(Date extra5) {
		_extra5 = extra5;
	}

	@Override
	public Date getExtra6() {
		return _extra6;
	}

	@Override
	public void setExtra6(Date extra6) {
		_extra6 = extra6;
	}

	@Override
	public float getServiceCharges() {
		return _serviceCharges;
	}

	@Override
	public void setServiceCharges(float serviceCharges) {
		_serviceCharges = serviceCharges;
	}

	@Override
	public String getCostCurrency() {
		if (_costCurrency == null) {
			return StringPool.BLANK;
		}
		else {
			return _costCurrency;
		}
	}

	@Override
	public void setCostCurrency(String costCurrency) {
		_costCurrency = costCurrency;
	}

	@Override
	public String getCostPeriod() {
		if (_costPeriod == null) {
			return StringPool.BLANK;
		}
		else {
			return _costPeriod;
		}
	}

	@Override
	public void setCostPeriod(String costPeriod) {
		_costPeriod = costPeriod;
	}

	@Override
	public String getCostPeriodType() {
		if (_costPeriodType == null) {
			return StringPool.BLANK;
		}
		else {
			return _costPeriodType;
		}
	}

	@Override
	public void setCostPeriodType(String costPeriodType) {
		_costPeriodType = costPeriodType;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MembershipPackageGrpServices.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MembershipPackageGrpServices toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MembershipPackageGrpServices)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MembershipPackageGrpServicesImpl membershipPackageGrpServicesImpl = new MembershipPackageGrpServicesImpl();

		membershipPackageGrpServicesImpl.setMpgsscId(getMpgsscId());
		membershipPackageGrpServicesImpl.setMpId(getMpId());
		membershipPackageGrpServicesImpl.setScorder(getScorder());
		membershipPackageGrpServicesImpl.setScgId(getScgId());
		membershipPackageGrpServicesImpl.setScId(getScId());
		membershipPackageGrpServicesImpl.setParamType(getParamType());
		membershipPackageGrpServicesImpl.setParamFrom(getParamFrom());
		membershipPackageGrpServicesImpl.setParamUpto(getParamUpto());
		membershipPackageGrpServicesImpl.setDuration(getDuration());
		membershipPackageGrpServicesImpl.setDurationType(getDurationType());
		membershipPackageGrpServicesImpl.setStatus(getStatus());
		membershipPackageGrpServicesImpl.setDescription(getDescription());
		membershipPackageGrpServicesImpl.setDateAdded(getDateAdded());
		membershipPackageGrpServicesImpl.setDateModified(getDateModified());
		membershipPackageGrpServicesImpl.setCreatedBy(getCreatedBy());
		membershipPackageGrpServicesImpl.setModifiedBy(getModifiedBy());
		membershipPackageGrpServicesImpl.setExtra1(getExtra1());
		membershipPackageGrpServicesImpl.setExtra2(getExtra2());
		membershipPackageGrpServicesImpl.setExtra3(getExtra3());
		membershipPackageGrpServicesImpl.setExtra4(getExtra4());
		membershipPackageGrpServicesImpl.setExtra5(getExtra5());
		membershipPackageGrpServicesImpl.setExtra6(getExtra6());
		membershipPackageGrpServicesImpl.setServiceCharges(getServiceCharges());
		membershipPackageGrpServicesImpl.setCostCurrency(getCostCurrency());
		membershipPackageGrpServicesImpl.setCostPeriod(getCostPeriod());
		membershipPackageGrpServicesImpl.setCostPeriodType(getCostPeriodType());

		membershipPackageGrpServicesImpl.resetOriginalValues();

		return membershipPackageGrpServicesImpl;
	}

	@Override
	public int compareTo(
		MembershipPackageGrpServices membershipPackageGrpServices) {
		int value = 0;

		value = getScgId().compareTo(membershipPackageGrpServices.getScgId());

		if (value != 0) {
			return value;
		}

		if (getScorder() < membershipPackageGrpServices.getScorder()) {
			value = -1;
		}
		else if (getScorder() > membershipPackageGrpServices.getScorder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MembershipPackageGrpServices)) {
			return false;
		}

		MembershipPackageGrpServices membershipPackageGrpServices = (MembershipPackageGrpServices)obj;

		long primaryKey = membershipPackageGrpServices.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MembershipPackageGrpServicesModelImpl membershipPackageGrpServicesModelImpl =
			this;

		membershipPackageGrpServicesModelImpl._originalMpId = membershipPackageGrpServicesModelImpl._mpId;

		membershipPackageGrpServicesModelImpl._setOriginalMpId = false;

		membershipPackageGrpServicesModelImpl._originalScgId = membershipPackageGrpServicesModelImpl._scgId;

		membershipPackageGrpServicesModelImpl._originalScId = membershipPackageGrpServicesModelImpl._scId;

		membershipPackageGrpServicesModelImpl._originalExtra2 = membershipPackageGrpServicesModelImpl._extra2;

		membershipPackageGrpServicesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MembershipPackageGrpServices> toCacheModel() {
		MembershipPackageGrpServicesCacheModel membershipPackageGrpServicesCacheModel =
			new MembershipPackageGrpServicesCacheModel();

		membershipPackageGrpServicesCacheModel.mpgsscId = getMpgsscId();

		membershipPackageGrpServicesCacheModel.mpId = getMpId();

		membershipPackageGrpServicesCacheModel.scorder = getScorder();

		membershipPackageGrpServicesCacheModel.scgId = getScgId();

		String scgId = membershipPackageGrpServicesCacheModel.scgId;

		if ((scgId != null) && (scgId.length() == 0)) {
			membershipPackageGrpServicesCacheModel.scgId = null;
		}

		membershipPackageGrpServicesCacheModel.scId = getScId();

		String scId = membershipPackageGrpServicesCacheModel.scId;

		if ((scId != null) && (scId.length() == 0)) {
			membershipPackageGrpServicesCacheModel.scId = null;
		}

		membershipPackageGrpServicesCacheModel.paramType = getParamType();

		String paramType = membershipPackageGrpServicesCacheModel.paramType;

		if ((paramType != null) && (paramType.length() == 0)) {
			membershipPackageGrpServicesCacheModel.paramType = null;
		}

		membershipPackageGrpServicesCacheModel.paramFrom = getParamFrom();

		String paramFrom = membershipPackageGrpServicesCacheModel.paramFrom;

		if ((paramFrom != null) && (paramFrom.length() == 0)) {
			membershipPackageGrpServicesCacheModel.paramFrom = null;
		}

		membershipPackageGrpServicesCacheModel.paramUpto = getParamUpto();

		String paramUpto = membershipPackageGrpServicesCacheModel.paramUpto;

		if ((paramUpto != null) && (paramUpto.length() == 0)) {
			membershipPackageGrpServicesCacheModel.paramUpto = null;
		}

		membershipPackageGrpServicesCacheModel.duration = getDuration();

		String duration = membershipPackageGrpServicesCacheModel.duration;

		if ((duration != null) && (duration.length() == 0)) {
			membershipPackageGrpServicesCacheModel.duration = null;
		}

		membershipPackageGrpServicesCacheModel.durationType = getDurationType();

		String durationType = membershipPackageGrpServicesCacheModel.durationType;

		if ((durationType != null) && (durationType.length() == 0)) {
			membershipPackageGrpServicesCacheModel.durationType = null;
		}

		membershipPackageGrpServicesCacheModel.status = getStatus();

		String status = membershipPackageGrpServicesCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			membershipPackageGrpServicesCacheModel.status = null;
		}

		membershipPackageGrpServicesCacheModel.description = getDescription();

		String description = membershipPackageGrpServicesCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			membershipPackageGrpServicesCacheModel.description = null;
		}

		Date dateAdded = getDateAdded();

		if (dateAdded != null) {
			membershipPackageGrpServicesCacheModel.dateAdded = dateAdded.getTime();
		}
		else {
			membershipPackageGrpServicesCacheModel.dateAdded = Long.MIN_VALUE;
		}

		Date dateModified = getDateModified();

		if (dateModified != null) {
			membershipPackageGrpServicesCacheModel.dateModified = dateModified.getTime();
		}
		else {
			membershipPackageGrpServicesCacheModel.dateModified = Long.MIN_VALUE;
		}

		membershipPackageGrpServicesCacheModel.createdBy = getCreatedBy();

		String createdBy = membershipPackageGrpServicesCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			membershipPackageGrpServicesCacheModel.createdBy = null;
		}

		membershipPackageGrpServicesCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = membershipPackageGrpServicesCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			membershipPackageGrpServicesCacheModel.modifiedBy = null;
		}

		membershipPackageGrpServicesCacheModel.extra1 = getExtra1();

		String extra1 = membershipPackageGrpServicesCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			membershipPackageGrpServicesCacheModel.extra1 = null;
		}

		membershipPackageGrpServicesCacheModel.extra2 = getExtra2();

		String extra2 = membershipPackageGrpServicesCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			membershipPackageGrpServicesCacheModel.extra2 = null;
		}

		membershipPackageGrpServicesCacheModel.extra3 = getExtra3();

		String extra3 = membershipPackageGrpServicesCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			membershipPackageGrpServicesCacheModel.extra3 = null;
		}

		membershipPackageGrpServicesCacheModel.extra4 = getExtra4();

		String extra4 = membershipPackageGrpServicesCacheModel.extra4;

		if ((extra4 != null) && (extra4.length() == 0)) {
			membershipPackageGrpServicesCacheModel.extra4 = null;
		}

		Date extra5 = getExtra5();

		if (extra5 != null) {
			membershipPackageGrpServicesCacheModel.extra5 = extra5.getTime();
		}
		else {
			membershipPackageGrpServicesCacheModel.extra5 = Long.MIN_VALUE;
		}

		Date extra6 = getExtra6();

		if (extra6 != null) {
			membershipPackageGrpServicesCacheModel.extra6 = extra6.getTime();
		}
		else {
			membershipPackageGrpServicesCacheModel.extra6 = Long.MIN_VALUE;
		}

		membershipPackageGrpServicesCacheModel.serviceCharges = getServiceCharges();

		membershipPackageGrpServicesCacheModel.costCurrency = getCostCurrency();

		String costCurrency = membershipPackageGrpServicesCacheModel.costCurrency;

		if ((costCurrency != null) && (costCurrency.length() == 0)) {
			membershipPackageGrpServicesCacheModel.costCurrency = null;
		}

		membershipPackageGrpServicesCacheModel.costPeriod = getCostPeriod();

		String costPeriod = membershipPackageGrpServicesCacheModel.costPeriod;

		if ((costPeriod != null) && (costPeriod.length() == 0)) {
			membershipPackageGrpServicesCacheModel.costPeriod = null;
		}

		membershipPackageGrpServicesCacheModel.costPeriodType = getCostPeriodType();

		String costPeriodType = membershipPackageGrpServicesCacheModel.costPeriodType;

		if ((costPeriodType != null) && (costPeriodType.length() == 0)) {
			membershipPackageGrpServicesCacheModel.costPeriodType = null;
		}

		return membershipPackageGrpServicesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(53);

		sb.append("{mpgsscId=");
		sb.append(getMpgsscId());
		sb.append(", mpId=");
		sb.append(getMpId());
		sb.append(", scorder=");
		sb.append(getScorder());
		sb.append(", scgId=");
		sb.append(getScgId());
		sb.append(", scId=");
		sb.append(getScId());
		sb.append(", paramType=");
		sb.append(getParamType());
		sb.append(", paramFrom=");
		sb.append(getParamFrom());
		sb.append(", paramUpto=");
		sb.append(getParamUpto());
		sb.append(", duration=");
		sb.append(getDuration());
		sb.append(", durationType=");
		sb.append(getDurationType());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", dateAdded=");
		sb.append(getDateAdded());
		sb.append(", dateModified=");
		sb.append(getDateModified());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append(", extra3=");
		sb.append(getExtra3());
		sb.append(", extra4=");
		sb.append(getExtra4());
		sb.append(", extra5=");
		sb.append(getExtra5());
		sb.append(", extra6=");
		sb.append(getExtra6());
		sb.append(", serviceCharges=");
		sb.append(getServiceCharges());
		sb.append(", costCurrency=");
		sb.append(getCostCurrency());
		sb.append(", costPeriod=");
		sb.append(getCostPeriod());
		sb.append(", costPeriodType=");
		sb.append(getCostPeriodType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(82);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spservices.model.MembershipPackageGrpServices");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>mpgsscId</column-name><column-value><![CDATA[");
		sb.append(getMpgsscId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpId</column-name><column-value><![CDATA[");
		sb.append(getMpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scorder</column-name><column-value><![CDATA[");
		sb.append(getScorder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scgId</column-name><column-value><![CDATA[");
		sb.append(getScgId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scId</column-name><column-value><![CDATA[");
		sb.append(getScId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paramType</column-name><column-value><![CDATA[");
		sb.append(getParamType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paramFrom</column-name><column-value><![CDATA[");
		sb.append(getParamFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paramUpto</column-name><column-value><![CDATA[");
		sb.append(getParamUpto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duration</column-name><column-value><![CDATA[");
		sb.append(getDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>durationType</column-name><column-value><![CDATA[");
		sb.append(getDurationType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateAdded</column-name><column-value><![CDATA[");
		sb.append(getDateAdded());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateModified</column-name><column-value><![CDATA[");
		sb.append(getDateModified());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra3</column-name><column-value><![CDATA[");
		sb.append(getExtra3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra4</column-name><column-value><![CDATA[");
		sb.append(getExtra4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra5</column-name><column-value><![CDATA[");
		sb.append(getExtra5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra6</column-name><column-value><![CDATA[");
		sb.append(getExtra6());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCharges</column-name><column-value><![CDATA[");
		sb.append(getServiceCharges());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costCurrency</column-name><column-value><![CDATA[");
		sb.append(getCostCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costPeriod</column-name><column-value><![CDATA[");
		sb.append(getCostPeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costPeriodType</column-name><column-value><![CDATA[");
		sb.append(getCostPeriodType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MembershipPackageGrpServices.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MembershipPackageGrpServices.class
		};
	private long _mpgsscId;
	private long _mpId;
	private long _originalMpId;
	private boolean _setOriginalMpId;
	private int _scorder;
	private String _scgId;
	private String _originalScgId;
	private String _scId;
	private String _originalScId;
	private String _paramType;
	private String _paramFrom;
	private String _paramUpto;
	private String _duration;
	private String _durationType;
	private String _status;
	private String _description;
	private Date _dateAdded;
	private Date _dateModified;
	private String _createdBy;
	private String _modifiedBy;
	private String _extra1;
	private String _extra2;
	private String _originalExtra2;
	private String _extra3;
	private String _extra4;
	private Date _extra5;
	private Date _extra6;
	private float _serviceCharges;
	private String _costCurrency;
	private String _costPeriod;
	private String _costPeriodType;
	private long _columnBitmask;
	private MembershipPackageGrpServices _escapedModel;
}
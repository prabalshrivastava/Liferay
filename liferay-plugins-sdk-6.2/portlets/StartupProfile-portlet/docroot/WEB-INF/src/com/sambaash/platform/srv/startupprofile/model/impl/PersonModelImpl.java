/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.startupprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.startupprofile.model.Person;
import com.sambaash.platform.srv.startupprofile.model.PersonModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Person service. Represents a row in the &quot;SPPerson&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.startupprofile.model.PersonModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PersonImpl}.
 * </p>
 *
 * @author pradeep
 * @see PersonImpl
 * @see com.sambaash.platform.srv.startupprofile.model.Person
 * @see com.sambaash.platform.srv.startupprofile.model.PersonModel
 * @generated
 */
public class PersonModelImpl extends BaseModelImpl<Person>
	implements PersonModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a person model instance should use the {@link com.sambaash.platform.srv.startupprofile.model.Person} interface instead.
	 */
	public static final String TABLE_NAME = "SPPerson";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "personId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "apiPath", Types.VARCHAR },
			{ "emailId", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "imageUrl", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "skype", Types.VARCHAR },
			{ "memberUserId", Types.BIGINT },
			{ "extras", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "active_", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table SPPerson (uuid_ VARCHAR(75) null,personId BIGINT(20) not null primary key,name VARCHAR(200) null,title VARCHAR(100) null,apiPath VARCHAR(120) null,emailId VARCHAR(100) null,description LONGTEXT null,imageUrl VARCHAR(200) null,mobile VARCHAR(25) null,skype VARCHAR(50) null,memberUserId BIGINT(20),extras LONGTEXT null,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,active_ BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table SPPerson";
	public static final String ORDER_BY_JPQL = " ORDER BY person.personId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPPerson.personId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.startupprofile.model.Person"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.startupprofile.model.Person"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.startupprofile.model.Person"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long PERSONID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.startupprofile.model.Person"));

	public PersonModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _personId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPersonId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _personId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Person.class;
	}

	@Override
	public String getModelClassName() {
		return Person.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("personId", getPersonId());
		attributes.put("name", getName());
		attributes.put("title", getTitle());
		attributes.put("apiPath", getApiPath());
		attributes.put("emailId", getEmailId());
		attributes.put("description", getDescription());
		attributes.put("imageUrl", getImageUrl());
		attributes.put("mobile", getMobile());
		attributes.put("skype", getSkype());
		attributes.put("memberUserId", getMemberUserId());
		attributes.put("extras", getExtras());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("active", getActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long personId = (Long)attributes.get("personId");

		if (personId != null) {
			setPersonId(personId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String apiPath = (String)attributes.get("apiPath");

		if (apiPath != null) {
			setApiPath(apiPath);
		}

		String emailId = (String)attributes.get("emailId");

		if (emailId != null) {
			setEmailId(emailId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String imageUrl = (String)attributes.get("imageUrl");

		if (imageUrl != null) {
			setImageUrl(imageUrl);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String skype = (String)attributes.get("skype");

		if (skype != null) {
			setSkype(skype);
		}

		Long memberUserId = (Long)attributes.get("memberUserId");

		if (memberUserId != null) {
			setMemberUserId(memberUserId);
		}

		String extras = (String)attributes.get("extras");

		if (extras != null) {
			setExtras(extras);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getPersonId() {
		return _personId;
	}

	@Override
	public void setPersonId(long personId) {
		_personId = personId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getApiPath() {
		if (_apiPath == null) {
			return StringPool.BLANK;
		}
		else {
			return _apiPath;
		}
	}

	@Override
	public void setApiPath(String apiPath) {
		_apiPath = apiPath;
	}

	@Override
	public String getEmailId() {
		if (_emailId == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailId;
		}
	}

	@Override
	public void setEmailId(String emailId) {
		_emailId = emailId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getImageUrl() {
		if (_imageUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _imageUrl;
		}
	}

	@Override
	public void setImageUrl(String imageUrl) {
		_imageUrl = imageUrl;
	}

	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@Override
	public String getSkype() {
		if (_skype == null) {
			return StringPool.BLANK;
		}
		else {
			return _skype;
		}
	}

	@Override
	public void setSkype(String skype) {
		_skype = skype;
	}

	@Override
	public long getMemberUserId() {
		return _memberUserId;
	}

	@Override
	public void setMemberUserId(long memberUserId) {
		_memberUserId = memberUserId;
	}

	@Override
	public String getMemberUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getMemberUserId(), "uuid",
			_memberUserUuid);
	}

	@Override
	public void setMemberUserUuid(String memberUserUuid) {
		_memberUserUuid = memberUserUuid;
	}

	@Override
	public String getExtras() {
		if (_extras == null) {
			return StringPool.BLANK;
		}
		else {
			return _extras;
		}
	}

	@Override
	public void setExtras(String extras) {
		_extras = extras;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_active = active;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Person.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Person.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Person toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Person)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PersonImpl personImpl = new PersonImpl();

		personImpl.setUuid(getUuid());
		personImpl.setPersonId(getPersonId());
		personImpl.setName(getName());
		personImpl.setTitle(getTitle());
		personImpl.setApiPath(getApiPath());
		personImpl.setEmailId(getEmailId());
		personImpl.setDescription(getDescription());
		personImpl.setImageUrl(getImageUrl());
		personImpl.setMobile(getMobile());
		personImpl.setSkype(getSkype());
		personImpl.setMemberUserId(getMemberUserId());
		personImpl.setExtras(getExtras());
		personImpl.setGroupId(getGroupId());
		personImpl.setCompanyId(getCompanyId());
		personImpl.setUserId(getUserId());
		personImpl.setUserName(getUserName());
		personImpl.setCreateDate(getCreateDate());
		personImpl.setModifiedDate(getModifiedDate());
		personImpl.setActive(getActive());

		personImpl.resetOriginalValues();

		return personImpl;
	}

	@Override
	public int compareTo(Person person) {
		long primaryKey = person.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Person)) {
			return false;
		}

		Person person = (Person)obj;

		long primaryKey = person.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PersonModelImpl personModelImpl = this;

		personModelImpl._originalUuid = personModelImpl._uuid;

		personModelImpl._originalGroupId = personModelImpl._groupId;

		personModelImpl._setOriginalGroupId = false;

		personModelImpl._originalCompanyId = personModelImpl._companyId;

		personModelImpl._setOriginalCompanyId = false;

		personModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Person> toCacheModel() {
		PersonCacheModel personCacheModel = new PersonCacheModel();

		personCacheModel.uuid = getUuid();

		String uuid = personCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			personCacheModel.uuid = null;
		}

		personCacheModel.personId = getPersonId();

		personCacheModel.name = getName();

		String name = personCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			personCacheModel.name = null;
		}

		personCacheModel.title = getTitle();

		String title = personCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			personCacheModel.title = null;
		}

		personCacheModel.apiPath = getApiPath();

		String apiPath = personCacheModel.apiPath;

		if ((apiPath != null) && (apiPath.length() == 0)) {
			personCacheModel.apiPath = null;
		}

		personCacheModel.emailId = getEmailId();

		String emailId = personCacheModel.emailId;

		if ((emailId != null) && (emailId.length() == 0)) {
			personCacheModel.emailId = null;
		}

		personCacheModel.description = getDescription();

		String description = personCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			personCacheModel.description = null;
		}

		personCacheModel.imageUrl = getImageUrl();

		String imageUrl = personCacheModel.imageUrl;

		if ((imageUrl != null) && (imageUrl.length() == 0)) {
			personCacheModel.imageUrl = null;
		}

		personCacheModel.mobile = getMobile();

		String mobile = personCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			personCacheModel.mobile = null;
		}

		personCacheModel.skype = getSkype();

		String skype = personCacheModel.skype;

		if ((skype != null) && (skype.length() == 0)) {
			personCacheModel.skype = null;
		}

		personCacheModel.memberUserId = getMemberUserId();

		personCacheModel.extras = getExtras();

		String extras = personCacheModel.extras;

		if ((extras != null) && (extras.length() == 0)) {
			personCacheModel.extras = null;
		}

		personCacheModel.groupId = getGroupId();

		personCacheModel.companyId = getCompanyId();

		personCacheModel.userId = getUserId();

		personCacheModel.userName = getUserName();

		String userName = personCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			personCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			personCacheModel.createDate = createDate.getTime();
		}
		else {
			personCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			personCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			personCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		personCacheModel.active = getActive();

		return personCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", personId=");
		sb.append(getPersonId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", apiPath=");
		sb.append(getApiPath());
		sb.append(", emailId=");
		sb.append(getEmailId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", imageUrl=");
		sb.append(getImageUrl());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", skype=");
		sb.append(getSkype());
		sb.append(", memberUserId=");
		sb.append(getMemberUserId());
		sb.append(", extras=");
		sb.append(getExtras());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", active=");
		sb.append(getActive());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.startupprofile.model.Person");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>personId</column-name><column-value><![CDATA[");
		sb.append(getPersonId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>apiPath</column-name><column-value><![CDATA[");
		sb.append(getApiPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailId</column-name><column-value><![CDATA[");
		sb.append(getEmailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageUrl</column-name><column-value><![CDATA[");
		sb.append(getImageUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>skype</column-name><column-value><![CDATA[");
		sb.append(getSkype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>memberUserId</column-name><column-value><![CDATA[");
		sb.append(getMemberUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extras</column-name><column-value><![CDATA[");
		sb.append(getExtras());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Person.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Person.class };
	private String _uuid;
	private String _originalUuid;
	private long _personId;
	private String _name;
	private String _title;
	private String _apiPath;
	private String _emailId;
	private String _description;
	private String _imageUrl;
	private String _mobile;
	private String _skype;
	private long _memberUserId;
	private String _memberUserUuid;
	private String _extras;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _active;
	private long _columnBitmask;
	private Person _escapedModel;
}
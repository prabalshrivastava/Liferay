/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.mail.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.mail.model.SPMailLinkTracking;
import com.sambaash.platform.srv.mail.model.SPMailLinkTrackingModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPMailLinkTracking service. Represents a row in the &quot;SPMailLinkTracking&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.mail.model.SPMailLinkTrackingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPMailLinkTrackingImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPMailLinkTrackingImpl
 * @see com.sambaash.platform.srv.mail.model.SPMailLinkTracking
 * @see com.sambaash.platform.srv.mail.model.SPMailLinkTrackingModel
 * @generated
 */
public class SPMailLinkTrackingModelImpl extends BaseModelImpl<SPMailLinkTracking>
	implements SPMailLinkTrackingModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p mail link tracking model instance should use the {@link com.sambaash.platform.srv.mail.model.SPMailLinkTracking} interface instead.
	 */
	public static final String TABLE_NAME = "SPMailLinkTracking";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spMailLinkTrackingId", Types.BIGINT },
			{ "spMailCampaignId", Types.BIGINT },
			{ "spMailCampaignEDMId", Types.BIGINT },
			{ "spMailCampaignSubscribersId", Types.BIGINT },
			{ "label", Types.VARCHAR },
			{ "link", Types.VARCHAR },
			{ "encryptedlink", Types.VARCHAR },
			{ "status", Types.BOOLEAN },
			{ "openedDate", Types.TIMESTAMP },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMailLinkTracking (spMailLinkTrackingId BIGINT(20) not null primary key,spMailCampaignId BIGINT(20),spMailCampaignEDMId BIGINT(20),spMailCampaignSubscribersId BIGINT(20),label VARCHAR(75) null,link VARCHAR(2000) null,encryptedlink VARCHAR(2000) null,status BOOLEAN,openedDate DATETIME null,createDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPMailLinkTracking";
	public static final String ORDER_BY_JPQL = " ORDER BY spMailLinkTracking.spMailLinkTrackingId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMailLinkTracking.spMailLinkTrackingId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailLinkTracking"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailLinkTracking"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.mail.model.SPMailLinkTracking"),
			true);
	public static long SPMAILCAMPAIGNID_COLUMN_BITMASK = 1L;
	public static long SPMAILCAMPAIGNSUBSCRIBERSID_COLUMN_BITMASK = 2L;
	public static long SPMAILLINKTRACKINGID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.mail.model.SPMailLinkTracking"));

	public SPMailLinkTrackingModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spMailLinkTrackingId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpMailLinkTrackingId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spMailLinkTrackingId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPMailLinkTracking.class;
	}

	@Override
	public String getModelClassName() {
		return SPMailLinkTracking.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spMailLinkTrackingId", getSpMailLinkTrackingId());
		attributes.put("spMailCampaignId", getSpMailCampaignId());
		attributes.put("spMailCampaignEDMId", getSpMailCampaignEDMId());
		attributes.put("spMailCampaignSubscribersId",
			getSpMailCampaignSubscribersId());
		attributes.put("label", getLabel());
		attributes.put("link", getLink());
		attributes.put("encryptedlink", getEncryptedlink());
		attributes.put("status", getStatus());
		attributes.put("openedDate", getOpenedDate());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spMailLinkTrackingId = (Long)attributes.get("spMailLinkTrackingId");

		if (spMailLinkTrackingId != null) {
			setSpMailLinkTrackingId(spMailLinkTrackingId);
		}

		Long spMailCampaignId = (Long)attributes.get("spMailCampaignId");

		if (spMailCampaignId != null) {
			setSpMailCampaignId(spMailCampaignId);
		}

		Long spMailCampaignEDMId = (Long)attributes.get("spMailCampaignEDMId");

		if (spMailCampaignEDMId != null) {
			setSpMailCampaignEDMId(spMailCampaignEDMId);
		}

		Long spMailCampaignSubscribersId = (Long)attributes.get(
				"spMailCampaignSubscribersId");

		if (spMailCampaignSubscribersId != null) {
			setSpMailCampaignSubscribersId(spMailCampaignSubscribersId);
		}

		String label = (String)attributes.get("label");

		if (label != null) {
			setLabel(label);
		}

		String link = (String)attributes.get("link");

		if (link != null) {
			setLink(link);
		}

		String encryptedlink = (String)attributes.get("encryptedlink");

		if (encryptedlink != null) {
			setEncryptedlink(encryptedlink);
		}

		Boolean status = (Boolean)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Date openedDate = (Date)attributes.get("openedDate");

		if (openedDate != null) {
			setOpenedDate(openedDate);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@Override
	public long getSpMailLinkTrackingId() {
		return _spMailLinkTrackingId;
	}

	@Override
	public void setSpMailLinkTrackingId(long spMailLinkTrackingId) {
		_spMailLinkTrackingId = spMailLinkTrackingId;
	}

	@Override
	public long getSpMailCampaignId() {
		return _spMailCampaignId;
	}

	@Override
	public void setSpMailCampaignId(long spMailCampaignId) {
		_columnBitmask |= SPMAILCAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalSpMailCampaignId) {
			_setOriginalSpMailCampaignId = true;

			_originalSpMailCampaignId = _spMailCampaignId;
		}

		_spMailCampaignId = spMailCampaignId;
	}

	public long getOriginalSpMailCampaignId() {
		return _originalSpMailCampaignId;
	}

	@Override
	public long getSpMailCampaignEDMId() {
		return _spMailCampaignEDMId;
	}

	@Override
	public void setSpMailCampaignEDMId(long spMailCampaignEDMId) {
		_spMailCampaignEDMId = spMailCampaignEDMId;
	}

	@Override
	public long getSpMailCampaignSubscribersId() {
		return _spMailCampaignSubscribersId;
	}

	@Override
	public void setSpMailCampaignSubscribersId(long spMailCampaignSubscribersId) {
		_columnBitmask |= SPMAILCAMPAIGNSUBSCRIBERSID_COLUMN_BITMASK;

		if (!_setOriginalSpMailCampaignSubscribersId) {
			_setOriginalSpMailCampaignSubscribersId = true;

			_originalSpMailCampaignSubscribersId = _spMailCampaignSubscribersId;
		}

		_spMailCampaignSubscribersId = spMailCampaignSubscribersId;
	}

	public long getOriginalSpMailCampaignSubscribersId() {
		return _originalSpMailCampaignSubscribersId;
	}

	@Override
	public String getLabel() {
		if (_label == null) {
			return StringPool.BLANK;
		}
		else {
			return _label;
		}
	}

	@Override
	public void setLabel(String label) {
		_label = label;
	}

	@Override
	public String getLink() {
		if (_link == null) {
			return StringPool.BLANK;
		}
		else {
			return _link;
		}
	}

	@Override
	public void setLink(String link) {
		_link = link;
	}

	@Override
	public String getEncryptedlink() {
		if (_encryptedlink == null) {
			return StringPool.BLANK;
		}
		else {
			return _encryptedlink;
		}
	}

	@Override
	public void setEncryptedlink(String encryptedlink) {
		_encryptedlink = encryptedlink;
	}

	@Override
	public boolean getStatus() {
		return _status;
	}

	@Override
	public boolean isStatus() {
		return _status;
	}

	@Override
	public void setStatus(boolean status) {
		_status = status;
	}

	@Override
	public Date getOpenedDate() {
		return _openedDate;
	}

	@Override
	public void setOpenedDate(Date openedDate) {
		_openedDate = openedDate;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SPMailLinkTracking.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPMailLinkTracking toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPMailLinkTracking)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPMailLinkTrackingImpl spMailLinkTrackingImpl = new SPMailLinkTrackingImpl();

		spMailLinkTrackingImpl.setSpMailLinkTrackingId(getSpMailLinkTrackingId());
		spMailLinkTrackingImpl.setSpMailCampaignId(getSpMailCampaignId());
		spMailLinkTrackingImpl.setSpMailCampaignEDMId(getSpMailCampaignEDMId());
		spMailLinkTrackingImpl.setSpMailCampaignSubscribersId(getSpMailCampaignSubscribersId());
		spMailLinkTrackingImpl.setLabel(getLabel());
		spMailLinkTrackingImpl.setLink(getLink());
		spMailLinkTrackingImpl.setEncryptedlink(getEncryptedlink());
		spMailLinkTrackingImpl.setStatus(getStatus());
		spMailLinkTrackingImpl.setOpenedDate(getOpenedDate());
		spMailLinkTrackingImpl.setCreateDate(getCreateDate());

		spMailLinkTrackingImpl.resetOriginalValues();

		return spMailLinkTrackingImpl;
	}

	@Override
	public int compareTo(SPMailLinkTracking spMailLinkTracking) {
		long primaryKey = spMailLinkTracking.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPMailLinkTracking)) {
			return false;
		}

		SPMailLinkTracking spMailLinkTracking = (SPMailLinkTracking)obj;

		long primaryKey = spMailLinkTracking.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPMailLinkTrackingModelImpl spMailLinkTrackingModelImpl = this;

		spMailLinkTrackingModelImpl._originalSpMailCampaignId = spMailLinkTrackingModelImpl._spMailCampaignId;

		spMailLinkTrackingModelImpl._setOriginalSpMailCampaignId = false;

		spMailLinkTrackingModelImpl._originalSpMailCampaignSubscribersId = spMailLinkTrackingModelImpl._spMailCampaignSubscribersId;

		spMailLinkTrackingModelImpl._setOriginalSpMailCampaignSubscribersId = false;

		spMailLinkTrackingModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPMailLinkTracking> toCacheModel() {
		SPMailLinkTrackingCacheModel spMailLinkTrackingCacheModel = new SPMailLinkTrackingCacheModel();

		spMailLinkTrackingCacheModel.spMailLinkTrackingId = getSpMailLinkTrackingId();

		spMailLinkTrackingCacheModel.spMailCampaignId = getSpMailCampaignId();

		spMailLinkTrackingCacheModel.spMailCampaignEDMId = getSpMailCampaignEDMId();

		spMailLinkTrackingCacheModel.spMailCampaignSubscribersId = getSpMailCampaignSubscribersId();

		spMailLinkTrackingCacheModel.label = getLabel();

		String label = spMailLinkTrackingCacheModel.label;

		if ((label != null) && (label.length() == 0)) {
			spMailLinkTrackingCacheModel.label = null;
		}

		spMailLinkTrackingCacheModel.link = getLink();

		String link = spMailLinkTrackingCacheModel.link;

		if ((link != null) && (link.length() == 0)) {
			spMailLinkTrackingCacheModel.link = null;
		}

		spMailLinkTrackingCacheModel.encryptedlink = getEncryptedlink();

		String encryptedlink = spMailLinkTrackingCacheModel.encryptedlink;

		if ((encryptedlink != null) && (encryptedlink.length() == 0)) {
			spMailLinkTrackingCacheModel.encryptedlink = null;
		}

		spMailLinkTrackingCacheModel.status = getStatus();

		Date openedDate = getOpenedDate();

		if (openedDate != null) {
			spMailLinkTrackingCacheModel.openedDate = openedDate.getTime();
		}
		else {
			spMailLinkTrackingCacheModel.openedDate = Long.MIN_VALUE;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spMailLinkTrackingCacheModel.createDate = createDate.getTime();
		}
		else {
			spMailLinkTrackingCacheModel.createDate = Long.MIN_VALUE;
		}

		return spMailLinkTrackingCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{spMailLinkTrackingId=");
		sb.append(getSpMailLinkTrackingId());
		sb.append(", spMailCampaignId=");
		sb.append(getSpMailCampaignId());
		sb.append(", spMailCampaignEDMId=");
		sb.append(getSpMailCampaignEDMId());
		sb.append(", spMailCampaignSubscribersId=");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append(", label=");
		sb.append(getLabel());
		sb.append(", link=");
		sb.append(getLink());
		sb.append(", encryptedlink=");
		sb.append(getEncryptedlink());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", openedDate=");
		sb.append(getOpenedDate());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.mail.model.SPMailLinkTracking");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spMailLinkTrackingId</column-name><column-value><![CDATA[");
		sb.append(getSpMailLinkTrackingId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignEDMId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignEDMId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignSubscribersId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>label</column-name><column-value><![CDATA[");
		sb.append(getLabel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>link</column-name><column-value><![CDATA[");
		sb.append(getLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>encryptedlink</column-name><column-value><![CDATA[");
		sb.append(getEncryptedlink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>openedDate</column-name><column-value><![CDATA[");
		sb.append(getOpenedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPMailLinkTracking.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPMailLinkTracking.class
		};
	private long _spMailLinkTrackingId;
	private long _spMailCampaignId;
	private long _originalSpMailCampaignId;
	private boolean _setOriginalSpMailCampaignId;
	private long _spMailCampaignEDMId;
	private long _spMailCampaignSubscribersId;
	private long _originalSpMailCampaignSubscribersId;
	private boolean _setOriginalSpMailCampaignSubscribersId;
	private String _label;
	private String _link;
	private String _encryptedlink;
	private boolean _status;
	private Date _openedDate;
	private Date _createDate;
	private long _columnBitmask;
	private SPMailLinkTracking _escapedModel;
}
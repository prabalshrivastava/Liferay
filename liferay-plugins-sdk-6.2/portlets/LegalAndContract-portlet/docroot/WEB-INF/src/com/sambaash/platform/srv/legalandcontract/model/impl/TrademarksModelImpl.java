/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.legalandcontract.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.legalandcontract.model.Trademarks;
import com.sambaash.platform.srv.legalandcontract.model.TrademarksModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Trademarks service. Represents a row in the &quot;SPTrademarksMaster&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.legalandcontract.model.TrademarksModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TrademarksImpl}.
 * </p>
 *
 * @author nareshchebolu
 * @see TrademarksImpl
 * @see com.sambaash.platform.srv.legalandcontract.model.Trademarks
 * @see com.sambaash.platform.srv.legalandcontract.model.TrademarksModel
 * @generated
 */
public class TrademarksModelImpl extends BaseModelImpl<Trademarks>
	implements TrademarksModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a trademarks model instance should use the {@link com.sambaash.platform.srv.legalandcontract.model.Trademarks} interface instead.
	 */
	public static final String TABLE_NAME = "SPTrademarksMaster";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spTrademarksId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "registrationNumber", Types.VARCHAR },
			{ "applicationNo", Types.VARCHAR },
			{ "country", Types.VARCHAR },
			{ "trademark", Types.VARCHAR },
			{ "trademarkLocalized", Types.VARCHAR },
			{ "registeredOwner", Types.VARCHAR },
			{ "applicationDate", Types.TIMESTAMP },
			{ "firstRegistrationDate", Types.TIMESTAMP },
			{ "renewalDate", Types.TIMESTAMP },
			{ "goodsServices", Types.CLOB },
			{ "pendingComments", Types.CLOB },
			{ "spAgencyId", Types.BIGINT },
			{ "classDescription", Types.CLOB },
			{ "legalConfRemarks", Types.CLOB },
			{ "workflowStatus", Types.BIGINT },
			{ "customField1", Types.CLOB },
			{ "customField2", Types.VARCHAR },
			{ "customField3", Types.CLOB },
			{ "customDate1", Types.TIMESTAMP },
			{ "customDate2", Types.TIMESTAMP },
			{ "customDate3", Types.TIMESTAMP },
			{ "classCodes", Types.CLOB },
			{ "version", Types.VARCHAR },
			{ "trademarkType", Types.VARCHAR },
			{ "rootSpTrademarksId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPTrademarksMaster (uuid_ VARCHAR(75) null,spTrademarksId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,registrationNumber VARCHAR(200) null,applicationNo VARCHAR(200) null,country VARCHAR(200) null,trademark VARCHAR(200) null,trademarkLocalized VARCHAR(200) null,registeredOwner VARCHAR(200) null,applicationDate DATETIME null,firstRegistrationDate DATETIME null,renewalDate DATETIME null,goodsServices LONGTEXT null,pendingComments LONGTEXT null,spAgencyId BIGINT(20),classDescription LONGTEXT null,legalConfRemarks LONGTEXT null,workflowStatus BIGINT(20),customField1 LONGTEXT null,customField2 VARCHAR(200) null,customField3 LONGTEXT null,customDate1 DATETIME null,customDate2 DATETIME null,customDate3 DATETIME null,classCodes LONGTEXT null,version VARCHAR(75) null,trademarkType VARCHAR(200) null,rootSpTrademarksId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPTrademarksMaster";
	public static final String ORDER_BY_JPQL = " ORDER BY trademarks.spTrademarksId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPTrademarksMaster.spTrademarksId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.legalandcontract.model.Trademarks"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.legalandcontract.model.Trademarks"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.legalandcontract.model.Trademarks"),
			true);
	public static long APPLICATIONNO_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long COUNTRY_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long REGISTRATIONNUMBER_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long VERSION_COLUMN_BITMASK = 64L;
	public static long SPTRADEMARKSID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.legalandcontract.model.Trademarks"));

	public TrademarksModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spTrademarksId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpTrademarksId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spTrademarksId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Trademarks.class;
	}

	@Override
	public String getModelClassName() {
		return Trademarks.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spTrademarksId", getSpTrademarksId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("registrationNumber", getRegistrationNumber());
		attributes.put("applicationNo", getApplicationNo());
		attributes.put("country", getCountry());
		attributes.put("trademark", getTrademark());
		attributes.put("trademarkLocalized", getTrademarkLocalized());
		attributes.put("registeredOwner", getRegisteredOwner());
		attributes.put("applicationDate", getApplicationDate());
		attributes.put("firstRegistrationDate", getFirstRegistrationDate());
		attributes.put("renewalDate", getRenewalDate());
		attributes.put("goodsServices", getGoodsServices());
		attributes.put("pendingComments", getPendingComments());
		attributes.put("spAgencyId", getSpAgencyId());
		attributes.put("classDescription", getClassDescription());
		attributes.put("legalConfRemarks", getLegalConfRemarks());
		attributes.put("workflowStatus", getWorkflowStatus());
		attributes.put("customField1", getCustomField1());
		attributes.put("customField2", getCustomField2());
		attributes.put("customField3", getCustomField3());
		attributes.put("customDate1", getCustomDate1());
		attributes.put("customDate2", getCustomDate2());
		attributes.put("customDate3", getCustomDate3());
		attributes.put("classCodes", getClassCodes());
		attributes.put("version", getVersion());
		attributes.put("trademarkType", getTrademarkType());
		attributes.put("rootSpTrademarksId", getRootSpTrademarksId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spTrademarksId = (Long)attributes.get("spTrademarksId");

		if (spTrademarksId != null) {
			setSpTrademarksId(spTrademarksId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String registrationNumber = (String)attributes.get("registrationNumber");

		if (registrationNumber != null) {
			setRegistrationNumber(registrationNumber);
		}

		String applicationNo = (String)attributes.get("applicationNo");

		if (applicationNo != null) {
			setApplicationNo(applicationNo);
		}

		String country = (String)attributes.get("country");

		if (country != null) {
			setCountry(country);
		}

		String trademark = (String)attributes.get("trademark");

		if (trademark != null) {
			setTrademark(trademark);
		}

		String trademarkLocalized = (String)attributes.get("trademarkLocalized");

		if (trademarkLocalized != null) {
			setTrademarkLocalized(trademarkLocalized);
		}

		String registeredOwner = (String)attributes.get("registeredOwner");

		if (registeredOwner != null) {
			setRegisteredOwner(registeredOwner);
		}

		Date applicationDate = (Date)attributes.get("applicationDate");

		if (applicationDate != null) {
			setApplicationDate(applicationDate);
		}

		Date firstRegistrationDate = (Date)attributes.get(
				"firstRegistrationDate");

		if (firstRegistrationDate != null) {
			setFirstRegistrationDate(firstRegistrationDate);
		}

		Date renewalDate = (Date)attributes.get("renewalDate");

		if (renewalDate != null) {
			setRenewalDate(renewalDate);
		}

		String goodsServices = (String)attributes.get("goodsServices");

		if (goodsServices != null) {
			setGoodsServices(goodsServices);
		}

		String pendingComments = (String)attributes.get("pendingComments");

		if (pendingComments != null) {
			setPendingComments(pendingComments);
		}

		Long spAgencyId = (Long)attributes.get("spAgencyId");

		if (spAgencyId != null) {
			setSpAgencyId(spAgencyId);
		}

		String classDescription = (String)attributes.get("classDescription");

		if (classDescription != null) {
			setClassDescription(classDescription);
		}

		String legalConfRemarks = (String)attributes.get("legalConfRemarks");

		if (legalConfRemarks != null) {
			setLegalConfRemarks(legalConfRemarks);
		}

		Long workflowStatus = (Long)attributes.get("workflowStatus");

		if (workflowStatus != null) {
			setWorkflowStatus(workflowStatus);
		}

		String customField1 = (String)attributes.get("customField1");

		if (customField1 != null) {
			setCustomField1(customField1);
		}

		String customField2 = (String)attributes.get("customField2");

		if (customField2 != null) {
			setCustomField2(customField2);
		}

		String customField3 = (String)attributes.get("customField3");

		if (customField3 != null) {
			setCustomField3(customField3);
		}

		Date customDate1 = (Date)attributes.get("customDate1");

		if (customDate1 != null) {
			setCustomDate1(customDate1);
		}

		Date customDate2 = (Date)attributes.get("customDate2");

		if (customDate2 != null) {
			setCustomDate2(customDate2);
		}

		Date customDate3 = (Date)attributes.get("customDate3");

		if (customDate3 != null) {
			setCustomDate3(customDate3);
		}

		String classCodes = (String)attributes.get("classCodes");

		if (classCodes != null) {
			setClassCodes(classCodes);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		String trademarkType = (String)attributes.get("trademarkType");

		if (trademarkType != null) {
			setTrademarkType(trademarkType);
		}

		Long rootSpTrademarksId = (Long)attributes.get("rootSpTrademarksId");

		if (rootSpTrademarksId != null) {
			setRootSpTrademarksId(rootSpTrademarksId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpTrademarksId() {
		return _spTrademarksId;
	}

	@Override
	public void setSpTrademarksId(long spTrademarksId) {
		_spTrademarksId = spTrademarksId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getRegistrationNumber() {
		if (_registrationNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _registrationNumber;
		}
	}

	@Override
	public void setRegistrationNumber(String registrationNumber) {
		_columnBitmask |= REGISTRATIONNUMBER_COLUMN_BITMASK;

		if (_originalRegistrationNumber == null) {
			_originalRegistrationNumber = _registrationNumber;
		}

		_registrationNumber = registrationNumber;
	}

	public String getOriginalRegistrationNumber() {
		return GetterUtil.getString(_originalRegistrationNumber);
	}

	@Override
	public String getApplicationNo() {
		if (_applicationNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicationNo;
		}
	}

	@Override
	public void setApplicationNo(String applicationNo) {
		_columnBitmask |= APPLICATIONNO_COLUMN_BITMASK;

		if (_originalApplicationNo == null) {
			_originalApplicationNo = _applicationNo;
		}

		_applicationNo = applicationNo;
	}

	public String getOriginalApplicationNo() {
		return GetterUtil.getString(_originalApplicationNo);
	}

	@Override
	public String getCountry() {
		if (_country == null) {
			return StringPool.BLANK;
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		_columnBitmask |= COUNTRY_COLUMN_BITMASK;

		if (_originalCountry == null) {
			_originalCountry = _country;
		}

		_country = country;
	}

	public String getOriginalCountry() {
		return GetterUtil.getString(_originalCountry);
	}

	@Override
	public String getTrademark() {
		if (_trademark == null) {
			return StringPool.BLANK;
		}
		else {
			return _trademark;
		}
	}

	@Override
	public void setTrademark(String trademark) {
		_trademark = trademark;
	}

	@Override
	public String getTrademarkLocalized() {
		if (_trademarkLocalized == null) {
			return StringPool.BLANK;
		}
		else {
			return _trademarkLocalized;
		}
	}

	@Override
	public void setTrademarkLocalized(String trademarkLocalized) {
		_trademarkLocalized = trademarkLocalized;
	}

	@Override
	public String getRegisteredOwner() {
		if (_registeredOwner == null) {
			return StringPool.BLANK;
		}
		else {
			return _registeredOwner;
		}
	}

	@Override
	public void setRegisteredOwner(String registeredOwner) {
		_registeredOwner = registeredOwner;
	}

	@Override
	public Date getApplicationDate() {
		return _applicationDate;
	}

	@Override
	public void setApplicationDate(Date applicationDate) {
		_applicationDate = applicationDate;
	}

	@Override
	public Date getFirstRegistrationDate() {
		return _firstRegistrationDate;
	}

	@Override
	public void setFirstRegistrationDate(Date firstRegistrationDate) {
		_firstRegistrationDate = firstRegistrationDate;
	}

	@Override
	public Date getRenewalDate() {
		return _renewalDate;
	}

	@Override
	public void setRenewalDate(Date renewalDate) {
		_renewalDate = renewalDate;
	}

	@Override
	public String getGoodsServices() {
		if (_goodsServices == null) {
			return StringPool.BLANK;
		}
		else {
			return _goodsServices;
		}
	}

	@Override
	public void setGoodsServices(String goodsServices) {
		_goodsServices = goodsServices;
	}

	@Override
	public String getPendingComments() {
		if (_pendingComments == null) {
			return StringPool.BLANK;
		}
		else {
			return _pendingComments;
		}
	}

	@Override
	public void setPendingComments(String pendingComments) {
		_pendingComments = pendingComments;
	}

	@Override
	public long getSpAgencyId() {
		return _spAgencyId;
	}

	@Override
	public void setSpAgencyId(long spAgencyId) {
		_spAgencyId = spAgencyId;
	}

	@Override
	public String getClassDescription() {
		if (_classDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _classDescription;
		}
	}

	@Override
	public void setClassDescription(String classDescription) {
		_classDescription = classDescription;
	}

	@Override
	public String getLegalConfRemarks() {
		if (_legalConfRemarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _legalConfRemarks;
		}
	}

	@Override
	public void setLegalConfRemarks(String legalConfRemarks) {
		_legalConfRemarks = legalConfRemarks;
	}

	@Override
	public long getWorkflowStatus() {
		return _workflowStatus;
	}

	@Override
	public void setWorkflowStatus(long workflowStatus) {
		_workflowStatus = workflowStatus;
	}

	@Override
	public String getCustomField1() {
		if (_customField1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField1;
		}
	}

	@Override
	public void setCustomField1(String customField1) {
		_customField1 = customField1;
	}

	@Override
	public String getCustomField2() {
		if (_customField2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField2;
		}
	}

	@Override
	public void setCustomField2(String customField2) {
		_customField2 = customField2;
	}

	@Override
	public String getCustomField3() {
		if (_customField3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField3;
		}
	}

	@Override
	public void setCustomField3(String customField3) {
		_customField3 = customField3;
	}

	@Override
	public Date getCustomDate1() {
		return _customDate1;
	}

	@Override
	public void setCustomDate1(Date customDate1) {
		_customDate1 = customDate1;
	}

	@Override
	public Date getCustomDate2() {
		return _customDate2;
	}

	@Override
	public void setCustomDate2(Date customDate2) {
		_customDate2 = customDate2;
	}

	@Override
	public Date getCustomDate3() {
		return _customDate3;
	}

	@Override
	public void setCustomDate3(Date customDate3) {
		_customDate3 = customDate3;
	}

	@Override
	public String getClassCodes() {
		if (_classCodes == null) {
			return StringPool.BLANK;
		}
		else {
			return _classCodes;
		}
	}

	@Override
	public void setClassCodes(String classCodes) {
		_classCodes = classCodes;
	}

	@Override
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_columnBitmask |= VERSION_COLUMN_BITMASK;

		if (_originalVersion == null) {
			_originalVersion = _version;
		}

		_version = version;
	}

	public String getOriginalVersion() {
		return GetterUtil.getString(_originalVersion);
	}

	@Override
	public String getTrademarkType() {
		if (_trademarkType == null) {
			return StringPool.BLANK;
		}
		else {
			return _trademarkType;
		}
	}

	@Override
	public void setTrademarkType(String trademarkType) {
		_trademarkType = trademarkType;
	}

	@Override
	public long getRootSpTrademarksId() {
		return _rootSpTrademarksId;
	}

	@Override
	public void setRootSpTrademarksId(long rootSpTrademarksId) {
		_rootSpTrademarksId = rootSpTrademarksId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Trademarks.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Trademarks.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Trademarks toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Trademarks)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TrademarksImpl trademarksImpl = new TrademarksImpl();

		trademarksImpl.setUuid(getUuid());
		trademarksImpl.setSpTrademarksId(getSpTrademarksId());
		trademarksImpl.setGroupId(getGroupId());
		trademarksImpl.setCompanyId(getCompanyId());
		trademarksImpl.setUserId(getUserId());
		trademarksImpl.setUserName(getUserName());
		trademarksImpl.setCreateDate(getCreateDate());
		trademarksImpl.setModifiedDate(getModifiedDate());
		trademarksImpl.setRegistrationNumber(getRegistrationNumber());
		trademarksImpl.setApplicationNo(getApplicationNo());
		trademarksImpl.setCountry(getCountry());
		trademarksImpl.setTrademark(getTrademark());
		trademarksImpl.setTrademarkLocalized(getTrademarkLocalized());
		trademarksImpl.setRegisteredOwner(getRegisteredOwner());
		trademarksImpl.setApplicationDate(getApplicationDate());
		trademarksImpl.setFirstRegistrationDate(getFirstRegistrationDate());
		trademarksImpl.setRenewalDate(getRenewalDate());
		trademarksImpl.setGoodsServices(getGoodsServices());
		trademarksImpl.setPendingComments(getPendingComments());
		trademarksImpl.setSpAgencyId(getSpAgencyId());
		trademarksImpl.setClassDescription(getClassDescription());
		trademarksImpl.setLegalConfRemarks(getLegalConfRemarks());
		trademarksImpl.setWorkflowStatus(getWorkflowStatus());
		trademarksImpl.setCustomField1(getCustomField1());
		trademarksImpl.setCustomField2(getCustomField2());
		trademarksImpl.setCustomField3(getCustomField3());
		trademarksImpl.setCustomDate1(getCustomDate1());
		trademarksImpl.setCustomDate2(getCustomDate2());
		trademarksImpl.setCustomDate3(getCustomDate3());
		trademarksImpl.setClassCodes(getClassCodes());
		trademarksImpl.setVersion(getVersion());
		trademarksImpl.setTrademarkType(getTrademarkType());
		trademarksImpl.setRootSpTrademarksId(getRootSpTrademarksId());

		trademarksImpl.resetOriginalValues();

		return trademarksImpl;
	}

	@Override
	public int compareTo(Trademarks trademarks) {
		long primaryKey = trademarks.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Trademarks)) {
			return false;
		}

		Trademarks trademarks = (Trademarks)obj;

		long primaryKey = trademarks.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TrademarksModelImpl trademarksModelImpl = this;

		trademarksModelImpl._originalUuid = trademarksModelImpl._uuid;

		trademarksModelImpl._originalGroupId = trademarksModelImpl._groupId;

		trademarksModelImpl._setOriginalGroupId = false;

		trademarksModelImpl._originalCompanyId = trademarksModelImpl._companyId;

		trademarksModelImpl._setOriginalCompanyId = false;

		trademarksModelImpl._originalRegistrationNumber = trademarksModelImpl._registrationNumber;

		trademarksModelImpl._originalApplicationNo = trademarksModelImpl._applicationNo;

		trademarksModelImpl._originalCountry = trademarksModelImpl._country;

		trademarksModelImpl._originalVersion = trademarksModelImpl._version;

		trademarksModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Trademarks> toCacheModel() {
		TrademarksCacheModel trademarksCacheModel = new TrademarksCacheModel();

		trademarksCacheModel.uuid = getUuid();

		String uuid = trademarksCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			trademarksCacheModel.uuid = null;
		}

		trademarksCacheModel.spTrademarksId = getSpTrademarksId();

		trademarksCacheModel.groupId = getGroupId();

		trademarksCacheModel.companyId = getCompanyId();

		trademarksCacheModel.userId = getUserId();

		trademarksCacheModel.userName = getUserName();

		String userName = trademarksCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			trademarksCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			trademarksCacheModel.createDate = createDate.getTime();
		}
		else {
			trademarksCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			trademarksCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			trademarksCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		trademarksCacheModel.registrationNumber = getRegistrationNumber();

		String registrationNumber = trademarksCacheModel.registrationNumber;

		if ((registrationNumber != null) && (registrationNumber.length() == 0)) {
			trademarksCacheModel.registrationNumber = null;
		}

		trademarksCacheModel.applicationNo = getApplicationNo();

		String applicationNo = trademarksCacheModel.applicationNo;

		if ((applicationNo != null) && (applicationNo.length() == 0)) {
			trademarksCacheModel.applicationNo = null;
		}

		trademarksCacheModel.country = getCountry();

		String country = trademarksCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			trademarksCacheModel.country = null;
		}

		trademarksCacheModel.trademark = getTrademark();

		String trademark = trademarksCacheModel.trademark;

		if ((trademark != null) && (trademark.length() == 0)) {
			trademarksCacheModel.trademark = null;
		}

		trademarksCacheModel.trademarkLocalized = getTrademarkLocalized();

		String trademarkLocalized = trademarksCacheModel.trademarkLocalized;

		if ((trademarkLocalized != null) && (trademarkLocalized.length() == 0)) {
			trademarksCacheModel.trademarkLocalized = null;
		}

		trademarksCacheModel.registeredOwner = getRegisteredOwner();

		String registeredOwner = trademarksCacheModel.registeredOwner;

		if ((registeredOwner != null) && (registeredOwner.length() == 0)) {
			trademarksCacheModel.registeredOwner = null;
		}

		Date applicationDate = getApplicationDate();

		if (applicationDate != null) {
			trademarksCacheModel.applicationDate = applicationDate.getTime();
		}
		else {
			trademarksCacheModel.applicationDate = Long.MIN_VALUE;
		}

		Date firstRegistrationDate = getFirstRegistrationDate();

		if (firstRegistrationDate != null) {
			trademarksCacheModel.firstRegistrationDate = firstRegistrationDate.getTime();
		}
		else {
			trademarksCacheModel.firstRegistrationDate = Long.MIN_VALUE;
		}

		Date renewalDate = getRenewalDate();

		if (renewalDate != null) {
			trademarksCacheModel.renewalDate = renewalDate.getTime();
		}
		else {
			trademarksCacheModel.renewalDate = Long.MIN_VALUE;
		}

		trademarksCacheModel.goodsServices = getGoodsServices();

		String goodsServices = trademarksCacheModel.goodsServices;

		if ((goodsServices != null) && (goodsServices.length() == 0)) {
			trademarksCacheModel.goodsServices = null;
		}

		trademarksCacheModel.pendingComments = getPendingComments();

		String pendingComments = trademarksCacheModel.pendingComments;

		if ((pendingComments != null) && (pendingComments.length() == 0)) {
			trademarksCacheModel.pendingComments = null;
		}

		trademarksCacheModel.spAgencyId = getSpAgencyId();

		trademarksCacheModel.classDescription = getClassDescription();

		String classDescription = trademarksCacheModel.classDescription;

		if ((classDescription != null) && (classDescription.length() == 0)) {
			trademarksCacheModel.classDescription = null;
		}

		trademarksCacheModel.legalConfRemarks = getLegalConfRemarks();

		String legalConfRemarks = trademarksCacheModel.legalConfRemarks;

		if ((legalConfRemarks != null) && (legalConfRemarks.length() == 0)) {
			trademarksCacheModel.legalConfRemarks = null;
		}

		trademarksCacheModel.workflowStatus = getWorkflowStatus();

		trademarksCacheModel.customField1 = getCustomField1();

		String customField1 = trademarksCacheModel.customField1;

		if ((customField1 != null) && (customField1.length() == 0)) {
			trademarksCacheModel.customField1 = null;
		}

		trademarksCacheModel.customField2 = getCustomField2();

		String customField2 = trademarksCacheModel.customField2;

		if ((customField2 != null) && (customField2.length() == 0)) {
			trademarksCacheModel.customField2 = null;
		}

		trademarksCacheModel.customField3 = getCustomField3();

		String customField3 = trademarksCacheModel.customField3;

		if ((customField3 != null) && (customField3.length() == 0)) {
			trademarksCacheModel.customField3 = null;
		}

		Date customDate1 = getCustomDate1();

		if (customDate1 != null) {
			trademarksCacheModel.customDate1 = customDate1.getTime();
		}
		else {
			trademarksCacheModel.customDate1 = Long.MIN_VALUE;
		}

		Date customDate2 = getCustomDate2();

		if (customDate2 != null) {
			trademarksCacheModel.customDate2 = customDate2.getTime();
		}
		else {
			trademarksCacheModel.customDate2 = Long.MIN_VALUE;
		}

		Date customDate3 = getCustomDate3();

		if (customDate3 != null) {
			trademarksCacheModel.customDate3 = customDate3.getTime();
		}
		else {
			trademarksCacheModel.customDate3 = Long.MIN_VALUE;
		}

		trademarksCacheModel.classCodes = getClassCodes();

		String classCodes = trademarksCacheModel.classCodes;

		if ((classCodes != null) && (classCodes.length() == 0)) {
			trademarksCacheModel.classCodes = null;
		}

		trademarksCacheModel.version = getVersion();

		String version = trademarksCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			trademarksCacheModel.version = null;
		}

		trademarksCacheModel.trademarkType = getTrademarkType();

		String trademarkType = trademarksCacheModel.trademarkType;

		if ((trademarkType != null) && (trademarkType.length() == 0)) {
			trademarksCacheModel.trademarkType = null;
		}

		trademarksCacheModel.rootSpTrademarksId = getRootSpTrademarksId();

		return trademarksCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(67);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spTrademarksId=");
		sb.append(getSpTrademarksId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", registrationNumber=");
		sb.append(getRegistrationNumber());
		sb.append(", applicationNo=");
		sb.append(getApplicationNo());
		sb.append(", country=");
		sb.append(getCountry());
		sb.append(", trademark=");
		sb.append(getTrademark());
		sb.append(", trademarkLocalized=");
		sb.append(getTrademarkLocalized());
		sb.append(", registeredOwner=");
		sb.append(getRegisteredOwner());
		sb.append(", applicationDate=");
		sb.append(getApplicationDate());
		sb.append(", firstRegistrationDate=");
		sb.append(getFirstRegistrationDate());
		sb.append(", renewalDate=");
		sb.append(getRenewalDate());
		sb.append(", goodsServices=");
		sb.append(getGoodsServices());
		sb.append(", pendingComments=");
		sb.append(getPendingComments());
		sb.append(", spAgencyId=");
		sb.append(getSpAgencyId());
		sb.append(", classDescription=");
		sb.append(getClassDescription());
		sb.append(", legalConfRemarks=");
		sb.append(getLegalConfRemarks());
		sb.append(", workflowStatus=");
		sb.append(getWorkflowStatus());
		sb.append(", customField1=");
		sb.append(getCustomField1());
		sb.append(", customField2=");
		sb.append(getCustomField2());
		sb.append(", customField3=");
		sb.append(getCustomField3());
		sb.append(", customDate1=");
		sb.append(getCustomDate1());
		sb.append(", customDate2=");
		sb.append(getCustomDate2());
		sb.append(", customDate3=");
		sb.append(getCustomDate3());
		sb.append(", classCodes=");
		sb.append(getClassCodes());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", trademarkType=");
		sb.append(getTrademarkType());
		sb.append(", rootSpTrademarksId=");
		sb.append(getRootSpTrademarksId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(103);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.legalandcontract.model.Trademarks");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spTrademarksId</column-name><column-value><![CDATA[");
		sb.append(getSpTrademarksId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationNumber</column-name><column-value><![CDATA[");
		sb.append(getRegistrationNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationNo</column-name><column-value><![CDATA[");
		sb.append(getApplicationNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>country</column-name><column-value><![CDATA[");
		sb.append(getCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trademark</column-name><column-value><![CDATA[");
		sb.append(getTrademark());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trademarkLocalized</column-name><column-value><![CDATA[");
		sb.append(getTrademarkLocalized());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registeredOwner</column-name><column-value><![CDATA[");
		sb.append(getRegisteredOwner());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationDate</column-name><column-value><![CDATA[");
		sb.append(getApplicationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstRegistrationDate</column-name><column-value><![CDATA[");
		sb.append(getFirstRegistrationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>renewalDate</column-name><column-value><![CDATA[");
		sb.append(getRenewalDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>goodsServices</column-name><column-value><![CDATA[");
		sb.append(getGoodsServices());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pendingComments</column-name><column-value><![CDATA[");
		sb.append(getPendingComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spAgencyId</column-name><column-value><![CDATA[");
		sb.append(getSpAgencyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classDescription</column-name><column-value><![CDATA[");
		sb.append(getClassDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>legalConfRemarks</column-name><column-value><![CDATA[");
		sb.append(getLegalConfRemarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowStatus</column-name><column-value><![CDATA[");
		sb.append(getWorkflowStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField1</column-name><column-value><![CDATA[");
		sb.append(getCustomField1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField2</column-name><column-value><![CDATA[");
		sb.append(getCustomField2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField3</column-name><column-value><![CDATA[");
		sb.append(getCustomField3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate1</column-name><column-value><![CDATA[");
		sb.append(getCustomDate1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate2</column-name><column-value><![CDATA[");
		sb.append(getCustomDate2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate3</column-name><column-value><![CDATA[");
		sb.append(getCustomDate3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classCodes</column-name><column-value><![CDATA[");
		sb.append(getClassCodes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trademarkType</column-name><column-value><![CDATA[");
		sb.append(getTrademarkType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rootSpTrademarksId</column-name><column-value><![CDATA[");
		sb.append(getRootSpTrademarksId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Trademarks.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Trademarks.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spTrademarksId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _registrationNumber;
	private String _originalRegistrationNumber;
	private String _applicationNo;
	private String _originalApplicationNo;
	private String _country;
	private String _originalCountry;
	private String _trademark;
	private String _trademarkLocalized;
	private String _registeredOwner;
	private Date _applicationDate;
	private Date _firstRegistrationDate;
	private Date _renewalDate;
	private String _goodsServices;
	private String _pendingComments;
	private long _spAgencyId;
	private String _classDescription;
	private String _legalConfRemarks;
	private long _workflowStatus;
	private String _customField1;
	private String _customField2;
	private String _customField3;
	private Date _customDate1;
	private Date _customDate2;
	private Date _customDate3;
	private String _classCodes;
	private String _version;
	private String _originalVersion;
	private String _trademarkType;
	private long _rootSpTrademarksId;
	private long _columnBitmask;
	private Trademarks _escapedModel;
}
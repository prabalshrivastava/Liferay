/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.Outcome;
import com.sambaash.platform.srv.model.OutcomeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Outcome service. Represents a row in the &quot;SPOutcome&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.OutcomeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OutcomeImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see OutcomeImpl
 * @see com.sambaash.platform.srv.model.Outcome
 * @see com.sambaash.platform.srv.model.OutcomeModel
 * @generated
 */
public class OutcomeModelImpl extends BaseModelImpl<Outcome>
	implements OutcomeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a outcome model instance should use the {@link com.sambaash.platform.srv.model.Outcome} interface instead.
	 */
	public static final String TABLE_NAME = "SPOutcome";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spOutcomeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "countryId", Types.BIGINT },
			{ "outcomeCode", Types.VARCHAR },
			{ "outcomeDesc", Types.VARCHAR },
			{ "outcomeType", Types.BIGINT },
			{ "outcomeFolderId", Types.BIGINT },
			{ "spCompetencyUnitId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPOutcome (spOutcomeId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,countryId BIGINT(20),outcomeCode VARCHAR(75) null,outcomeDesc LONGTEXT null,outcomeType BIGINT(20),outcomeFolderId BIGINT(20),spCompetencyUnitId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPOutcome";
	public static final String ORDER_BY_JPQL = " ORDER BY outcome.outcomeCode ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPOutcome.outcomeCode ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.Outcome"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.Outcome"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.Outcome"),
			true);
	public static long COUNTRYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long SPCOMPETENCYUNITID_COLUMN_BITMASK = 4L;
	public static long OUTCOMECODE_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.Outcome"));

	public OutcomeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spOutcomeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpOutcomeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spOutcomeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Outcome.class;
	}

	@Override
	public String getModelClassName() {
		return Outcome.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spOutcomeId", getSpOutcomeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("countryId", getCountryId());
		attributes.put("outcomeCode", getOutcomeCode());
		attributes.put("outcomeDesc", getOutcomeDesc());
		attributes.put("outcomeType", getOutcomeType());
		attributes.put("outcomeFolderId", getOutcomeFolderId());
		attributes.put("spCompetencyUnitId", getSpCompetencyUnitId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spOutcomeId = (Long)attributes.get("spOutcomeId");

		if (spOutcomeId != null) {
			setSpOutcomeId(spOutcomeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		String outcomeCode = (String)attributes.get("outcomeCode");

		if (outcomeCode != null) {
			setOutcomeCode(outcomeCode);
		}

		String outcomeDesc = (String)attributes.get("outcomeDesc");

		if (outcomeDesc != null) {
			setOutcomeDesc(outcomeDesc);
		}

		Long outcomeType = (Long)attributes.get("outcomeType");

		if (outcomeType != null) {
			setOutcomeType(outcomeType);
		}

		Long outcomeFolderId = (Long)attributes.get("outcomeFolderId");

		if (outcomeFolderId != null) {
			setOutcomeFolderId(outcomeFolderId);
		}

		Long spCompetencyUnitId = (Long)attributes.get("spCompetencyUnitId");

		if (spCompetencyUnitId != null) {
			setSpCompetencyUnitId(spCompetencyUnitId);
		}
	}

	@Override
	public long getSpOutcomeId() {
		return _spOutcomeId;
	}

	@Override
	public void setSpOutcomeId(long spOutcomeId) {
		_spOutcomeId = spOutcomeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCountryId() {
		return _countryId;
	}

	@Override
	public void setCountryId(long countryId) {
		_columnBitmask |= COUNTRYID_COLUMN_BITMASK;

		if (!_setOriginalCountryId) {
			_setOriginalCountryId = true;

			_originalCountryId = _countryId;
		}

		_countryId = countryId;
	}

	public long getOriginalCountryId() {
		return _originalCountryId;
	}

	@Override
	public String getOutcomeCode() {
		if (_outcomeCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _outcomeCode;
		}
	}

	@Override
	public void setOutcomeCode(String outcomeCode) {
		_columnBitmask = -1L;

		_outcomeCode = outcomeCode;
	}

	@Override
	public String getOutcomeDesc() {
		if (_outcomeDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _outcomeDesc;
		}
	}

	@Override
	public void setOutcomeDesc(String outcomeDesc) {
		_outcomeDesc = outcomeDesc;
	}

	@Override
	public long getOutcomeType() {
		return _outcomeType;
	}

	@Override
	public void setOutcomeType(long outcomeType) {
		_outcomeType = outcomeType;
	}

	@Override
	public long getOutcomeFolderId() {
		return _outcomeFolderId;
	}

	@Override
	public void setOutcomeFolderId(long outcomeFolderId) {
		_outcomeFolderId = outcomeFolderId;
	}

	@Override
	public long getSpCompetencyUnitId() {
		return _spCompetencyUnitId;
	}

	@Override
	public void setSpCompetencyUnitId(long spCompetencyUnitId) {
		_columnBitmask |= SPCOMPETENCYUNITID_COLUMN_BITMASK;

		if (!_setOriginalSpCompetencyUnitId) {
			_setOriginalSpCompetencyUnitId = true;

			_originalSpCompetencyUnitId = _spCompetencyUnitId;
		}

		_spCompetencyUnitId = spCompetencyUnitId;
	}

	public long getOriginalSpCompetencyUnitId() {
		return _originalSpCompetencyUnitId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Outcome.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Outcome toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Outcome)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OutcomeImpl outcomeImpl = new OutcomeImpl();

		outcomeImpl.setSpOutcomeId(getSpOutcomeId());
		outcomeImpl.setGroupId(getGroupId());
		outcomeImpl.setCompanyId(getCompanyId());
		outcomeImpl.setUserId(getUserId());
		outcomeImpl.setUserName(getUserName());
		outcomeImpl.setCreateDate(getCreateDate());
		outcomeImpl.setModifiedDate(getModifiedDate());
		outcomeImpl.setCountryId(getCountryId());
		outcomeImpl.setOutcomeCode(getOutcomeCode());
		outcomeImpl.setOutcomeDesc(getOutcomeDesc());
		outcomeImpl.setOutcomeType(getOutcomeType());
		outcomeImpl.setOutcomeFolderId(getOutcomeFolderId());
		outcomeImpl.setSpCompetencyUnitId(getSpCompetencyUnitId());

		outcomeImpl.resetOriginalValues();

		return outcomeImpl;
	}

	@Override
	public int compareTo(Outcome outcome) {
		int value = 0;

		value = getOutcomeCode().compareTo(outcome.getOutcomeCode());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Outcome)) {
			return false;
		}

		Outcome outcome = (Outcome)obj;

		long primaryKey = outcome.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OutcomeModelImpl outcomeModelImpl = this;

		outcomeModelImpl._originalGroupId = outcomeModelImpl._groupId;

		outcomeModelImpl._setOriginalGroupId = false;

		outcomeModelImpl._originalCountryId = outcomeModelImpl._countryId;

		outcomeModelImpl._setOriginalCountryId = false;

		outcomeModelImpl._originalSpCompetencyUnitId = outcomeModelImpl._spCompetencyUnitId;

		outcomeModelImpl._setOriginalSpCompetencyUnitId = false;

		outcomeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Outcome> toCacheModel() {
		OutcomeCacheModel outcomeCacheModel = new OutcomeCacheModel();

		outcomeCacheModel.spOutcomeId = getSpOutcomeId();

		outcomeCacheModel.groupId = getGroupId();

		outcomeCacheModel.companyId = getCompanyId();

		outcomeCacheModel.userId = getUserId();

		outcomeCacheModel.userName = getUserName();

		String userName = outcomeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			outcomeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			outcomeCacheModel.createDate = createDate.getTime();
		}
		else {
			outcomeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			outcomeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			outcomeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		outcomeCacheModel.countryId = getCountryId();

		outcomeCacheModel.outcomeCode = getOutcomeCode();

		String outcomeCode = outcomeCacheModel.outcomeCode;

		if ((outcomeCode != null) && (outcomeCode.length() == 0)) {
			outcomeCacheModel.outcomeCode = null;
		}

		outcomeCacheModel.outcomeDesc = getOutcomeDesc();

		String outcomeDesc = outcomeCacheModel.outcomeDesc;

		if ((outcomeDesc != null) && (outcomeDesc.length() == 0)) {
			outcomeCacheModel.outcomeDesc = null;
		}

		outcomeCacheModel.outcomeType = getOutcomeType();

		outcomeCacheModel.outcomeFolderId = getOutcomeFolderId();

		outcomeCacheModel.spCompetencyUnitId = getSpCompetencyUnitId();

		return outcomeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{spOutcomeId=");
		sb.append(getSpOutcomeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", countryId=");
		sb.append(getCountryId());
		sb.append(", outcomeCode=");
		sb.append(getOutcomeCode());
		sb.append(", outcomeDesc=");
		sb.append(getOutcomeDesc());
		sb.append(", outcomeType=");
		sb.append(getOutcomeType());
		sb.append(", outcomeFolderId=");
		sb.append(getOutcomeFolderId());
		sb.append(", spCompetencyUnitId=");
		sb.append(getSpCompetencyUnitId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.Outcome");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spOutcomeId</column-name><column-value><![CDATA[");
		sb.append(getSpOutcomeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outcomeCode</column-name><column-value><![CDATA[");
		sb.append(getOutcomeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outcomeDesc</column-name><column-value><![CDATA[");
		sb.append(getOutcomeDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outcomeType</column-name><column-value><![CDATA[");
		sb.append(getOutcomeType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outcomeFolderId</column-name><column-value><![CDATA[");
		sb.append(getOutcomeFolderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCompetencyUnitId</column-name><column-value><![CDATA[");
		sb.append(getSpCompetencyUnitId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Outcome.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Outcome.class
		};
	private long _spOutcomeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _countryId;
	private long _originalCountryId;
	private boolean _setOriginalCountryId;
	private String _outcomeCode;
	private String _outcomeDesc;
	private long _outcomeType;
	private long _outcomeFolderId;
	private long _spCompetencyUnitId;
	private long _originalSpCompetencyUnitId;
	private boolean _setOriginalSpCompetencyUnitId;
	private long _columnBitmask;
	private Outcome _escapedModel;
}
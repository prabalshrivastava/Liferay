/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.Assessment;
import com.sambaash.platform.srv.model.AssessmentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Assessment service. Represents a row in the &quot;SPAssessment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.AssessmentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AssessmentImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see AssessmentImpl
 * @see com.sambaash.platform.srv.model.Assessment
 * @see com.sambaash.platform.srv.model.AssessmentModel
 * @generated
 */
public class AssessmentModelImpl extends BaseModelImpl<Assessment>
	implements AssessmentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a assessment model instance should use the {@link com.sambaash.platform.srv.model.Assessment} interface instead.
	 */
	public static final String TABLE_NAME = "SPAssessment";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spAssessmentId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spModuleId", Types.BIGINT },
			{ "assessmentDesc", Types.VARCHAR },
			{ "assessmentType", Types.BIGINT },
			{ "assessmentMethod", Types.BIGINT },
			{ "assessmentMode", Types.BIGINT },
			{ "locationType", Types.BIGINT },
			{ "eligibility", Types.VARCHAR },
			{ "gradingType", Types.BIGINT },
			{ "maximumMarks", Types.VARCHAR },
			{ "passingMarks", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPAssessment (spAssessmentId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spModuleId BIGINT(20),assessmentDesc LONGTEXT null,assessmentType BIGINT(20),assessmentMethod BIGINT(20),assessmentMode BIGINT(20),locationType BIGINT(20),eligibility VARCHAR(75) null,gradingType BIGINT(20),maximumMarks VARCHAR(75) null,passingMarks VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPAssessment";
	public static final String ORDER_BY_JPQL = " ORDER BY assessment.assessmentDesc ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPAssessment.assessmentDesc ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.Assessment"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.Assessment"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.Assessment"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long SPMODULEID_COLUMN_BITMASK = 2L;
	public static long ASSESSMENTDESC_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.Assessment"));

	public AssessmentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spAssessmentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpAssessmentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spAssessmentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Assessment.class;
	}

	@Override
	public String getModelClassName() {
		return Assessment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spAssessmentId", getSpAssessmentId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("spModuleId", getSpModuleId());
		attributes.put("assessmentDesc", getAssessmentDesc());
		attributes.put("assessmentType", getAssessmentType());
		attributes.put("assessmentMethod", getAssessmentMethod());
		attributes.put("assessmentMode", getAssessmentMode());
		attributes.put("locationType", getLocationType());
		attributes.put("eligibility", getEligibility());
		attributes.put("gradingType", getGradingType());
		attributes.put("maximumMarks", getMaximumMarks());
		attributes.put("passingMarks", getPassingMarks());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spAssessmentId = (Long)attributes.get("spAssessmentId");

		if (spAssessmentId != null) {
			setSpAssessmentId(spAssessmentId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long spModuleId = (Long)attributes.get("spModuleId");

		if (spModuleId != null) {
			setSpModuleId(spModuleId);
		}

		String assessmentDesc = (String)attributes.get("assessmentDesc");

		if (assessmentDesc != null) {
			setAssessmentDesc(assessmentDesc);
		}

		Long assessmentType = (Long)attributes.get("assessmentType");

		if (assessmentType != null) {
			setAssessmentType(assessmentType);
		}

		Long assessmentMethod = (Long)attributes.get("assessmentMethod");

		if (assessmentMethod != null) {
			setAssessmentMethod(assessmentMethod);
		}

		Long assessmentMode = (Long)attributes.get("assessmentMode");

		if (assessmentMode != null) {
			setAssessmentMode(assessmentMode);
		}

		Long locationType = (Long)attributes.get("locationType");

		if (locationType != null) {
			setLocationType(locationType);
		}

		String eligibility = (String)attributes.get("eligibility");

		if (eligibility != null) {
			setEligibility(eligibility);
		}

		Long gradingType = (Long)attributes.get("gradingType");

		if (gradingType != null) {
			setGradingType(gradingType);
		}

		String maximumMarks = (String)attributes.get("maximumMarks");

		if (maximumMarks != null) {
			setMaximumMarks(maximumMarks);
		}

		String passingMarks = (String)attributes.get("passingMarks");

		if (passingMarks != null) {
			setPassingMarks(passingMarks);
		}
	}

	@Override
	public long getSpAssessmentId() {
		return _spAssessmentId;
	}

	@Override
	public void setSpAssessmentId(long spAssessmentId) {
		_spAssessmentId = spAssessmentId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSpModuleId() {
		return _spModuleId;
	}

	@Override
	public void setSpModuleId(long spModuleId) {
		_columnBitmask |= SPMODULEID_COLUMN_BITMASK;

		if (!_setOriginalSpModuleId) {
			_setOriginalSpModuleId = true;

			_originalSpModuleId = _spModuleId;
		}

		_spModuleId = spModuleId;
	}

	public long getOriginalSpModuleId() {
		return _originalSpModuleId;
	}

	@Override
	public String getAssessmentDesc() {
		if (_assessmentDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _assessmentDesc;
		}
	}

	@Override
	public void setAssessmentDesc(String assessmentDesc) {
		_columnBitmask = -1L;

		_assessmentDesc = assessmentDesc;
	}

	@Override
	public long getAssessmentType() {
		return _assessmentType;
	}

	@Override
	public void setAssessmentType(long assessmentType) {
		_assessmentType = assessmentType;
	}

	@Override
	public long getAssessmentMethod() {
		return _assessmentMethod;
	}

	@Override
	public void setAssessmentMethod(long assessmentMethod) {
		_assessmentMethod = assessmentMethod;
	}

	@Override
	public long getAssessmentMode() {
		return _assessmentMode;
	}

	@Override
	public void setAssessmentMode(long assessmentMode) {
		_assessmentMode = assessmentMode;
	}

	@Override
	public long getLocationType() {
		return _locationType;
	}

	@Override
	public void setLocationType(long locationType) {
		_locationType = locationType;
	}

	@Override
	public String getEligibility() {
		if (_eligibility == null) {
			return StringPool.BLANK;
		}
		else {
			return _eligibility;
		}
	}

	@Override
	public void setEligibility(String eligibility) {
		_eligibility = eligibility;
	}

	@Override
	public long getGradingType() {
		return _gradingType;
	}

	@Override
	public void setGradingType(long gradingType) {
		_gradingType = gradingType;
	}

	@Override
	public String getMaximumMarks() {
		if (_maximumMarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _maximumMarks;
		}
	}

	@Override
	public void setMaximumMarks(String maximumMarks) {
		_maximumMarks = maximumMarks;
	}

	@Override
	public String getPassingMarks() {
		if (_passingMarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _passingMarks;
		}
	}

	@Override
	public void setPassingMarks(String passingMarks) {
		_passingMarks = passingMarks;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Assessment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Assessment toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Assessment)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AssessmentImpl assessmentImpl = new AssessmentImpl();

		assessmentImpl.setSpAssessmentId(getSpAssessmentId());
		assessmentImpl.setGroupId(getGroupId());
		assessmentImpl.setCompanyId(getCompanyId());
		assessmentImpl.setUserId(getUserId());
		assessmentImpl.setUserName(getUserName());
		assessmentImpl.setCreateDate(getCreateDate());
		assessmentImpl.setModifiedDate(getModifiedDate());
		assessmentImpl.setSpModuleId(getSpModuleId());
		assessmentImpl.setAssessmentDesc(getAssessmentDesc());
		assessmentImpl.setAssessmentType(getAssessmentType());
		assessmentImpl.setAssessmentMethod(getAssessmentMethod());
		assessmentImpl.setAssessmentMode(getAssessmentMode());
		assessmentImpl.setLocationType(getLocationType());
		assessmentImpl.setEligibility(getEligibility());
		assessmentImpl.setGradingType(getGradingType());
		assessmentImpl.setMaximumMarks(getMaximumMarks());
		assessmentImpl.setPassingMarks(getPassingMarks());

		assessmentImpl.resetOriginalValues();

		return assessmentImpl;
	}

	@Override
	public int compareTo(Assessment assessment) {
		int value = 0;

		value = getAssessmentDesc().compareTo(assessment.getAssessmentDesc());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Assessment)) {
			return false;
		}

		Assessment assessment = (Assessment)obj;

		long primaryKey = assessment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AssessmentModelImpl assessmentModelImpl = this;

		assessmentModelImpl._originalGroupId = assessmentModelImpl._groupId;

		assessmentModelImpl._setOriginalGroupId = false;

		assessmentModelImpl._originalSpModuleId = assessmentModelImpl._spModuleId;

		assessmentModelImpl._setOriginalSpModuleId = false;

		assessmentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Assessment> toCacheModel() {
		AssessmentCacheModel assessmentCacheModel = new AssessmentCacheModel();

		assessmentCacheModel.spAssessmentId = getSpAssessmentId();

		assessmentCacheModel.groupId = getGroupId();

		assessmentCacheModel.companyId = getCompanyId();

		assessmentCacheModel.userId = getUserId();

		assessmentCacheModel.userName = getUserName();

		String userName = assessmentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			assessmentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			assessmentCacheModel.createDate = createDate.getTime();
		}
		else {
			assessmentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			assessmentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			assessmentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		assessmentCacheModel.spModuleId = getSpModuleId();

		assessmentCacheModel.assessmentDesc = getAssessmentDesc();

		String assessmentDesc = assessmentCacheModel.assessmentDesc;

		if ((assessmentDesc != null) && (assessmentDesc.length() == 0)) {
			assessmentCacheModel.assessmentDesc = null;
		}

		assessmentCacheModel.assessmentType = getAssessmentType();

		assessmentCacheModel.assessmentMethod = getAssessmentMethod();

		assessmentCacheModel.assessmentMode = getAssessmentMode();

		assessmentCacheModel.locationType = getLocationType();

		assessmentCacheModel.eligibility = getEligibility();

		String eligibility = assessmentCacheModel.eligibility;

		if ((eligibility != null) && (eligibility.length() == 0)) {
			assessmentCacheModel.eligibility = null;
		}

		assessmentCacheModel.gradingType = getGradingType();

		assessmentCacheModel.maximumMarks = getMaximumMarks();

		String maximumMarks = assessmentCacheModel.maximumMarks;

		if ((maximumMarks != null) && (maximumMarks.length() == 0)) {
			assessmentCacheModel.maximumMarks = null;
		}

		assessmentCacheModel.passingMarks = getPassingMarks();

		String passingMarks = assessmentCacheModel.passingMarks;

		if ((passingMarks != null) && (passingMarks.length() == 0)) {
			assessmentCacheModel.passingMarks = null;
		}

		return assessmentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{spAssessmentId=");
		sb.append(getSpAssessmentId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", spModuleId=");
		sb.append(getSpModuleId());
		sb.append(", assessmentDesc=");
		sb.append(getAssessmentDesc());
		sb.append(", assessmentType=");
		sb.append(getAssessmentType());
		sb.append(", assessmentMethod=");
		sb.append(getAssessmentMethod());
		sb.append(", assessmentMode=");
		sb.append(getAssessmentMode());
		sb.append(", locationType=");
		sb.append(getLocationType());
		sb.append(", eligibility=");
		sb.append(getEligibility());
		sb.append(", gradingType=");
		sb.append(getGradingType());
		sb.append(", maximumMarks=");
		sb.append(getMaximumMarks());
		sb.append(", passingMarks=");
		sb.append(getPassingMarks());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.Assessment");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spAssessmentId</column-name><column-value><![CDATA[");
		sb.append(getSpAssessmentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spModuleId</column-name><column-value><![CDATA[");
		sb.append(getSpModuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessmentDesc</column-name><column-value><![CDATA[");
		sb.append(getAssessmentDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessmentType</column-name><column-value><![CDATA[");
		sb.append(getAssessmentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessmentMethod</column-name><column-value><![CDATA[");
		sb.append(getAssessmentMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessmentMode</column-name><column-value><![CDATA[");
		sb.append(getAssessmentMode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>locationType</column-name><column-value><![CDATA[");
		sb.append(getLocationType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eligibility</column-name><column-value><![CDATA[");
		sb.append(getEligibility());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gradingType</column-name><column-value><![CDATA[");
		sb.append(getGradingType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maximumMarks</column-name><column-value><![CDATA[");
		sb.append(getMaximumMarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passingMarks</column-name><column-value><![CDATA[");
		sb.append(getPassingMarks());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Assessment.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Assessment.class
		};
	private long _spAssessmentId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _spModuleId;
	private long _originalSpModuleId;
	private boolean _setOriginalSpModuleId;
	private String _assessmentDesc;
	private long _assessmentType;
	private long _assessmentMethod;
	private long _assessmentMode;
	private long _locationType;
	private String _eligibility;
	private long _gradingType;
	private String _maximumMarks;
	private String _passingMarks;
	private long _columnBitmask;
	private Assessment _escapedModel;
}
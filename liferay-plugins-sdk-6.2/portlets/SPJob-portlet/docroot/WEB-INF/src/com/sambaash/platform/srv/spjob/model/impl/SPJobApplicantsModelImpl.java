/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spjob.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spjob.model.SPJobApplicants;
import com.sambaash.platform.srv.spjob.model.SPJobApplicantsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPJobApplicants service. Represents a row in the &quot;SPJobApplicants&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spjob.model.SPJobApplicantsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPJobApplicantsImpl}.
 * </p>
 *
 * @author harini
 * @see SPJobApplicantsImpl
 * @see com.sambaash.platform.srv.spjob.model.SPJobApplicants
 * @see com.sambaash.platform.srv.spjob.model.SPJobApplicantsModel
 * @generated
 */
public class SPJobApplicantsModelImpl extends BaseModelImpl<SPJobApplicants>
	implements SPJobApplicantsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p job applicants model instance should use the {@link com.sambaash.platform.srv.spjob.model.SPJobApplicants} interface instead.
	 */
	public static final String TABLE_NAME = "SPJobApplicants";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spJobApplicantsId", Types.BIGINT },
			{ "jobId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "updatedBy", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "contactNumber", Types.VARCHAR },
			{ "experience", Types.VARCHAR },
			{ "resume", Types.VARCHAR },
			{ "coverLetter", Types.VARCHAR },
			{ "briefInfos", Types.VARCHAR },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR },
			{ "extra3", Types.VARCHAR },
			{ "extra4", Types.VARCHAR },
			{ "extra5", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPJobApplicants (spJobApplicantsId BIGINT(20) not null primary key,jobId BIGINT(20),groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),createdBy BIGINT(20),updatedBy BIGINT(20),createDate DATETIME null,modifiedDate DATETIME null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,emailAddress VARCHAR(75) null,contactNumber VARCHAR(75) null,experience VARCHAR(75) null,resume VARCHAR(75) null,coverLetter VARCHAR(75) null,briefInfos VARCHAR(75) null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,extra4 VARCHAR(75) null,extra5 VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPJobApplicants";
	public static final String ORDER_BY_JPQL = " ORDER BY spJobApplicants.spJobApplicantsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPJobApplicants.spJobApplicantsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicants"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicants"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spjob.model.SPJobApplicants"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long JOBID_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long SPJOBAPPLICANTSID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spjob.model.SPJobApplicants"));

	public SPJobApplicantsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spJobApplicantsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpJobApplicantsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spJobApplicantsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPJobApplicants.class;
	}

	@Override
	public String getModelClassName() {
		return SPJobApplicants.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spJobApplicantsId", getSpJobApplicantsId());
		attributes.put("jobId", getJobId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("yearsOfExperience", getYearsOfExperience());
		attributes.put("resume", getResume());
		attributes.put("coverLetter", getCoverLetter());
		attributes.put("briefInfos", getBriefInfos());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());
		attributes.put("extra3", getExtra3());
		attributes.put("extra4", getExtra4());
		attributes.put("extra5", getExtra5());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spJobApplicantsId = (Long)attributes.get("spJobApplicantsId");

		if (spJobApplicantsId != null) {
			setSpJobApplicantsId(spJobApplicantsId);
		}

		Long jobId = (Long)attributes.get("jobId");

		if (jobId != null) {
			setJobId(jobId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Long updatedBy = (Long)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String contactNumber = (String)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		String yearsOfExperience = (String)attributes.get("yearsOfExperience");

		if (yearsOfExperience != null) {
			setYearsOfExperience(yearsOfExperience);
		}

		String resume = (String)attributes.get("resume");

		if (resume != null) {
			setResume(resume);
		}

		String coverLetter = (String)attributes.get("coverLetter");

		if (coverLetter != null) {
			setCoverLetter(coverLetter);
		}

		String briefInfos = (String)attributes.get("briefInfos");

		if (briefInfos != null) {
			setBriefInfos(briefInfos);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}

		String extra3 = (String)attributes.get("extra3");

		if (extra3 != null) {
			setExtra3(extra3);
		}

		String extra4 = (String)attributes.get("extra4");

		if (extra4 != null) {
			setExtra4(extra4);
		}

		String extra5 = (String)attributes.get("extra5");

		if (extra5 != null) {
			setExtra5(extra5);
		}
	}

	@Override
	public long getSpJobApplicantsId() {
		return _spJobApplicantsId;
	}

	@Override
	public void setSpJobApplicantsId(long spJobApplicantsId) {
		_spJobApplicantsId = spJobApplicantsId;
	}

	@Override
	public long getJobId() {
		return _jobId;
	}

	@Override
	public void setJobId(long jobId) {
		_columnBitmask |= JOBID_COLUMN_BITMASK;

		if (!_setOriginalJobId) {
			_setOriginalJobId = true;

			_originalJobId = _jobId;
		}

		_jobId = jobId;
	}

	public long getOriginalJobId() {
		return _originalJobId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public long getUpdatedBy() {
		return _updatedBy;
	}

	@Override
	public void setUpdatedBy(long updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public String getContactNumber() {
		if (_contactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactNumber;
		}
	}

	@Override
	public void setContactNumber(String contactNumber) {
		_contactNumber = contactNumber;
	}

	@Override
	public String getYearsOfExperience() {
		if (_yearsOfExperience == null) {
			return StringPool.BLANK;
		}
		else {
			return _yearsOfExperience;
		}
	}

	@Override
	public void setYearsOfExperience(String yearsOfExperience) {
		_yearsOfExperience = yearsOfExperience;
	}

	@Override
	public String getResume() {
		if (_resume == null) {
			return StringPool.BLANK;
		}
		else {
			return _resume;
		}
	}

	@Override
	public void setResume(String resume) {
		_resume = resume;
	}

	@Override
	public String getCoverLetter() {
		if (_coverLetter == null) {
			return StringPool.BLANK;
		}
		else {
			return _coverLetter;
		}
	}

	@Override
	public void setCoverLetter(String coverLetter) {
		_coverLetter = coverLetter;
	}

	@Override
	public String getBriefInfos() {
		if (_briefInfos == null) {
			return StringPool.BLANK;
		}
		else {
			return _briefInfos;
		}
	}

	@Override
	public void setBriefInfos(String briefInfos) {
		_briefInfos = briefInfos;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public String getExtra4() {
		if (_extra4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra4;
		}
	}

	@Override
	public void setExtra4(String extra4) {
		_extra4 = extra4;
	}

	@Override
	public String getExtra5() {
		if (_extra5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra5;
		}
	}

	@Override
	public void setExtra5(String extra5) {
		_extra5 = extra5;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPJobApplicants.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPJobApplicants toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPJobApplicants)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPJobApplicantsImpl spJobApplicantsImpl = new SPJobApplicantsImpl();

		spJobApplicantsImpl.setSpJobApplicantsId(getSpJobApplicantsId());
		spJobApplicantsImpl.setJobId(getJobId());
		spJobApplicantsImpl.setGroupId(getGroupId());
		spJobApplicantsImpl.setCompanyId(getCompanyId());
		spJobApplicantsImpl.setUserId(getUserId());
		spJobApplicantsImpl.setCreatedBy(getCreatedBy());
		spJobApplicantsImpl.setUpdatedBy(getUpdatedBy());
		spJobApplicantsImpl.setCreateDate(getCreateDate());
		spJobApplicantsImpl.setModifiedDate(getModifiedDate());
		spJobApplicantsImpl.setFirstName(getFirstName());
		spJobApplicantsImpl.setLastName(getLastName());
		spJobApplicantsImpl.setEmailAddress(getEmailAddress());
		spJobApplicantsImpl.setContactNumber(getContactNumber());
		spJobApplicantsImpl.setYearsOfExperience(getYearsOfExperience());
		spJobApplicantsImpl.setResume(getResume());
		spJobApplicantsImpl.setCoverLetter(getCoverLetter());
		spJobApplicantsImpl.setBriefInfos(getBriefInfos());
		spJobApplicantsImpl.setExtra1(getExtra1());
		spJobApplicantsImpl.setExtra2(getExtra2());
		spJobApplicantsImpl.setExtra3(getExtra3());
		spJobApplicantsImpl.setExtra4(getExtra4());
		spJobApplicantsImpl.setExtra5(getExtra5());

		spJobApplicantsImpl.resetOriginalValues();

		return spJobApplicantsImpl;
	}

	@Override
	public int compareTo(SPJobApplicants spJobApplicants) {
		long primaryKey = spJobApplicants.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPJobApplicants)) {
			return false;
		}

		SPJobApplicants spJobApplicants = (SPJobApplicants)obj;

		long primaryKey = spJobApplicants.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPJobApplicantsModelImpl spJobApplicantsModelImpl = this;

		spJobApplicantsModelImpl._originalJobId = spJobApplicantsModelImpl._jobId;

		spJobApplicantsModelImpl._setOriginalJobId = false;

		spJobApplicantsModelImpl._originalGroupId = spJobApplicantsModelImpl._groupId;

		spJobApplicantsModelImpl._setOriginalGroupId = false;

		spJobApplicantsModelImpl._originalUserId = spJobApplicantsModelImpl._userId;

		spJobApplicantsModelImpl._setOriginalUserId = false;

		spJobApplicantsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPJobApplicants> toCacheModel() {
		SPJobApplicantsCacheModel spJobApplicantsCacheModel = new SPJobApplicantsCacheModel();

		spJobApplicantsCacheModel.spJobApplicantsId = getSpJobApplicantsId();

		spJobApplicantsCacheModel.jobId = getJobId();

		spJobApplicantsCacheModel.groupId = getGroupId();

		spJobApplicantsCacheModel.companyId = getCompanyId();

		spJobApplicantsCacheModel.userId = getUserId();

		spJobApplicantsCacheModel.createdBy = getCreatedBy();

		spJobApplicantsCacheModel.updatedBy = getUpdatedBy();

		Date createDate = getCreateDate();

		if (createDate != null) {
			spJobApplicantsCacheModel.createDate = createDate.getTime();
		}
		else {
			spJobApplicantsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spJobApplicantsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spJobApplicantsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spJobApplicantsCacheModel.firstName = getFirstName();

		String firstName = spJobApplicantsCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			spJobApplicantsCacheModel.firstName = null;
		}

		spJobApplicantsCacheModel.lastName = getLastName();

		String lastName = spJobApplicantsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			spJobApplicantsCacheModel.lastName = null;
		}

		spJobApplicantsCacheModel.emailAddress = getEmailAddress();

		String emailAddress = spJobApplicantsCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			spJobApplicantsCacheModel.emailAddress = null;
		}

		spJobApplicantsCacheModel.contactNumber = getContactNumber();

		String contactNumber = spJobApplicantsCacheModel.contactNumber;

		if ((contactNumber != null) && (contactNumber.length() == 0)) {
			spJobApplicantsCacheModel.contactNumber = null;
		}

		spJobApplicantsCacheModel.yearsOfExperience = getYearsOfExperience();

		String yearsOfExperience = spJobApplicantsCacheModel.yearsOfExperience;

		if ((yearsOfExperience != null) && (yearsOfExperience.length() == 0)) {
			spJobApplicantsCacheModel.yearsOfExperience = null;
		}

		spJobApplicantsCacheModel.resume = getResume();

		String resume = spJobApplicantsCacheModel.resume;

		if ((resume != null) && (resume.length() == 0)) {
			spJobApplicantsCacheModel.resume = null;
		}

		spJobApplicantsCacheModel.coverLetter = getCoverLetter();

		String coverLetter = spJobApplicantsCacheModel.coverLetter;

		if ((coverLetter != null) && (coverLetter.length() == 0)) {
			spJobApplicantsCacheModel.coverLetter = null;
		}

		spJobApplicantsCacheModel.briefInfos = getBriefInfos();

		String briefInfos = spJobApplicantsCacheModel.briefInfos;

		if ((briefInfos != null) && (briefInfos.length() == 0)) {
			spJobApplicantsCacheModel.briefInfos = null;
		}

		spJobApplicantsCacheModel.extra1 = getExtra1();

		String extra1 = spJobApplicantsCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			spJobApplicantsCacheModel.extra1 = null;
		}

		spJobApplicantsCacheModel.extra2 = getExtra2();

		String extra2 = spJobApplicantsCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			spJobApplicantsCacheModel.extra2 = null;
		}

		spJobApplicantsCacheModel.extra3 = getExtra3();

		String extra3 = spJobApplicantsCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			spJobApplicantsCacheModel.extra3 = null;
		}

		spJobApplicantsCacheModel.extra4 = getExtra4();

		String extra4 = spJobApplicantsCacheModel.extra4;

		if ((extra4 != null) && (extra4.length() == 0)) {
			spJobApplicantsCacheModel.extra4 = null;
		}

		spJobApplicantsCacheModel.extra5 = getExtra5();

		String extra5 = spJobApplicantsCacheModel.extra5;

		if ((extra5 != null) && (extra5.length() == 0)) {
			spJobApplicantsCacheModel.extra5 = null;
		}

		return spJobApplicantsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{spJobApplicantsId=");
		sb.append(getSpJobApplicantsId());
		sb.append(", jobId=");
		sb.append(getJobId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", yearsOfExperience=");
		sb.append(getYearsOfExperience());
		sb.append(", resume=");
		sb.append(getResume());
		sb.append(", coverLetter=");
		sb.append(getCoverLetter());
		sb.append(", briefInfos=");
		sb.append(getBriefInfos());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append(", extra3=");
		sb.append(getExtra3());
		sb.append(", extra4=");
		sb.append(getExtra4());
		sb.append(", extra5=");
		sb.append(getExtra5());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spjob.model.SPJobApplicants");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spJobApplicantsId</column-name><column-value><![CDATA[");
		sb.append(getSpJobApplicantsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobId</column-name><column-value><![CDATA[");
		sb.append(getJobId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yearsOfExperience</column-name><column-value><![CDATA[");
		sb.append(getYearsOfExperience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resume</column-name><column-value><![CDATA[");
		sb.append(getResume());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coverLetter</column-name><column-value><![CDATA[");
		sb.append(getCoverLetter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>briefInfos</column-name><column-value><![CDATA[");
		sb.append(getBriefInfos());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra3</column-name><column-value><![CDATA[");
		sb.append(getExtra3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra4</column-name><column-value><![CDATA[");
		sb.append(getExtra4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra5</column-name><column-value><![CDATA[");
		sb.append(getExtra5());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPJobApplicants.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPJobApplicants.class
		};
	private long _spJobApplicantsId;
	private long _jobId;
	private long _originalJobId;
	private boolean _setOriginalJobId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _createdBy;
	private long _updatedBy;
	private Date _createDate;
	private Date _modifiedDate;
	private String _firstName;
	private String _lastName;
	private String _emailAddress;
	private String _contactNumber;
	private String _yearsOfExperience;
	private String _resume;
	private String _coverLetter;
	private String _briefInfos;
	private String _extra1;
	private String _extra2;
	private String _extra3;
	private String _extra4;
	private String _extra5;
	private long _columnBitmask;
	private SPJobApplicants _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spshopping.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spshopping.model.SPSellingItem;
import com.sambaash.platform.srv.spshopping.model.SPSellingItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPSellingItem service. Represents a row in the &quot;SPSellingItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spshopping.model.SPSellingItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPSellingItemImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPSellingItemImpl
 * @see com.sambaash.platform.srv.spshopping.model.SPSellingItem
 * @see com.sambaash.platform.srv.spshopping.model.SPSellingItemModel
 * @generated
 */
public class SPSellingItemModelImpl extends BaseModelImpl<SPSellingItem>
	implements SPSellingItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p selling item model instance should use the {@link com.sambaash.platform.srv.spshopping.model.SPSellingItem} interface instead.
	 */
	public static final String TABLE_NAME = "SPSellingItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spSellingItemId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "itemCode", Types.VARCHAR },
			{ "entityClassPk", Types.BIGINT },
			{ "entityClassNameId", Types.BIGINT },
			{ "entityClassName", Types.VARCHAR },
			{ "shortDescription", Types.VARCHAR },
			{ "longDescription", Types.VARCHAR },
			{ "active_", Types.BOOLEAN },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSellingItem (spSellingItemId BIGINT(20) not null primary key,groupId BIGINT(20),title VARCHAR(500) null,itemCode VARCHAR(75) null,entityClassPk BIGINT(20),entityClassNameId BIGINT(20),entityClassName VARCHAR(75) null,shortDescription VARCHAR(500) null,longDescription LONGTEXT null,active_ BOOLEAN,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPSellingItem";
	public static final String ORDER_BY_JPQL = " ORDER BY spSellingItem.spSellingItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSellingItem.spSellingItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spshopping.model.SPSellingItem"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long ENTITYCLASSNAMEID_COLUMN_BITMASK = 2L;
	public static long ENTITYCLASSPK_COLUMN_BITMASK = 4L;
	public static long SPSELLINGITEMID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spshopping.model.SPSellingItem"));

	public SPSellingItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spSellingItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpSellingItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spSellingItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPSellingItem.class;
	}

	@Override
	public String getModelClassName() {
		return SPSellingItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spSellingItemId", getSpSellingItemId());
		attributes.put("groupId", getGroupId());
		attributes.put("title", getTitle());
		attributes.put("itemCode", getItemCode());
		attributes.put("entityClassPk", getEntityClassPk());
		attributes.put("entityClassNameId", getEntityClassNameId());
		attributes.put("entityClassName", getEntityClassName());
		attributes.put("shortDescription", getShortDescription());
		attributes.put("longDescription", getLongDescription());
		attributes.put("active", getActive());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spSellingItemId = (Long)attributes.get("spSellingItemId");

		if (spSellingItemId != null) {
			setSpSellingItemId(spSellingItemId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String itemCode = (String)attributes.get("itemCode");

		if (itemCode != null) {
			setItemCode(itemCode);
		}

		Long entityClassPk = (Long)attributes.get("entityClassPk");

		if (entityClassPk != null) {
			setEntityClassPk(entityClassPk);
		}

		Long entityClassNameId = (Long)attributes.get("entityClassNameId");

		if (entityClassNameId != null) {
			setEntityClassNameId(entityClassNameId);
		}

		String entityClassName = (String)attributes.get("entityClassName");

		if (entityClassName != null) {
			setEntityClassName(entityClassName);
		}

		String shortDescription = (String)attributes.get("shortDescription");

		if (shortDescription != null) {
			setShortDescription(shortDescription);
		}

		String longDescription = (String)attributes.get("longDescription");

		if (longDescription != null) {
			setLongDescription(longDescription);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSpSellingItemId() {
		return _spSellingItemId;
	}

	@Override
	public void setSpSellingItemId(long spSellingItemId) {
		_spSellingItemId = spSellingItemId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getItemCode() {
		if (_itemCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemCode;
		}
	}

	@Override
	public void setItemCode(String itemCode) {
		_itemCode = itemCode;
	}

	@Override
	public long getEntityClassPk() {
		return _entityClassPk;
	}

	@Override
	public void setEntityClassPk(long entityClassPk) {
		_columnBitmask |= ENTITYCLASSPK_COLUMN_BITMASK;

		if (!_setOriginalEntityClassPk) {
			_setOriginalEntityClassPk = true;

			_originalEntityClassPk = _entityClassPk;
		}

		_entityClassPk = entityClassPk;
	}

	public long getOriginalEntityClassPk() {
		return _originalEntityClassPk;
	}

	@Override
	public long getEntityClassNameId() {
		return _entityClassNameId;
	}

	@Override
	public void setEntityClassNameId(long entityClassNameId) {
		_columnBitmask |= ENTITYCLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalEntityClassNameId) {
			_setOriginalEntityClassNameId = true;

			_originalEntityClassNameId = _entityClassNameId;
		}

		_entityClassNameId = entityClassNameId;
	}

	public long getOriginalEntityClassNameId() {
		return _originalEntityClassNameId;
	}

	@Override
	public String getEntityClassName() {
		if (_entityClassName == null) {
			return StringPool.BLANK;
		}
		else {
			return _entityClassName;
		}
	}

	@Override
	public void setEntityClassName(String entityClassName) {
		_entityClassName = entityClassName;
	}

	@Override
	public String getShortDescription() {
		if (_shortDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortDescription;
		}
	}

	@Override
	public void setShortDescription(String shortDescription) {
		_shortDescription = shortDescription;
	}

	@Override
	public String getLongDescription() {
		if (_longDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _longDescription;
		}
	}

	@Override
	public void setLongDescription(String longDescription) {
		_longDescription = longDescription;
	}

	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPSellingItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPSellingItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPSellingItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPSellingItemImpl spSellingItemImpl = new SPSellingItemImpl();

		spSellingItemImpl.setSpSellingItemId(getSpSellingItemId());
		spSellingItemImpl.setGroupId(getGroupId());
		spSellingItemImpl.setTitle(getTitle());
		spSellingItemImpl.setItemCode(getItemCode());
		spSellingItemImpl.setEntityClassPk(getEntityClassPk());
		spSellingItemImpl.setEntityClassNameId(getEntityClassNameId());
		spSellingItemImpl.setEntityClassName(getEntityClassName());
		spSellingItemImpl.setShortDescription(getShortDescription());
		spSellingItemImpl.setLongDescription(getLongDescription());
		spSellingItemImpl.setActive(getActive());
		spSellingItemImpl.setCompanyId(getCompanyId());
		spSellingItemImpl.setUserId(getUserId());
		spSellingItemImpl.setUserName(getUserName());
		spSellingItemImpl.setCreateDate(getCreateDate());
		spSellingItemImpl.setModifiedDate(getModifiedDate());

		spSellingItemImpl.resetOriginalValues();

		return spSellingItemImpl;
	}

	@Override
	public int compareTo(SPSellingItem spSellingItem) {
		long primaryKey = spSellingItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPSellingItem)) {
			return false;
		}

		SPSellingItem spSellingItem = (SPSellingItem)obj;

		long primaryKey = spSellingItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPSellingItemModelImpl spSellingItemModelImpl = this;

		spSellingItemModelImpl._originalEntityClassPk = spSellingItemModelImpl._entityClassPk;

		spSellingItemModelImpl._setOriginalEntityClassPk = false;

		spSellingItemModelImpl._originalEntityClassNameId = spSellingItemModelImpl._entityClassNameId;

		spSellingItemModelImpl._setOriginalEntityClassNameId = false;

		spSellingItemModelImpl._originalActive = spSellingItemModelImpl._active;

		spSellingItemModelImpl._setOriginalActive = false;

		spSellingItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPSellingItem> toCacheModel() {
		SPSellingItemCacheModel spSellingItemCacheModel = new SPSellingItemCacheModel();

		spSellingItemCacheModel.spSellingItemId = getSpSellingItemId();

		spSellingItemCacheModel.groupId = getGroupId();

		spSellingItemCacheModel.title = getTitle();

		String title = spSellingItemCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			spSellingItemCacheModel.title = null;
		}

		spSellingItemCacheModel.itemCode = getItemCode();

		String itemCode = spSellingItemCacheModel.itemCode;

		if ((itemCode != null) && (itemCode.length() == 0)) {
			spSellingItemCacheModel.itemCode = null;
		}

		spSellingItemCacheModel.entityClassPk = getEntityClassPk();

		spSellingItemCacheModel.entityClassNameId = getEntityClassNameId();

		spSellingItemCacheModel.entityClassName = getEntityClassName();

		String entityClassName = spSellingItemCacheModel.entityClassName;

		if ((entityClassName != null) && (entityClassName.length() == 0)) {
			spSellingItemCacheModel.entityClassName = null;
		}

		spSellingItemCacheModel.shortDescription = getShortDescription();

		String shortDescription = spSellingItemCacheModel.shortDescription;

		if ((shortDescription != null) && (shortDescription.length() == 0)) {
			spSellingItemCacheModel.shortDescription = null;
		}

		spSellingItemCacheModel.longDescription = getLongDescription();

		String longDescription = spSellingItemCacheModel.longDescription;

		if ((longDescription != null) && (longDescription.length() == 0)) {
			spSellingItemCacheModel.longDescription = null;
		}

		spSellingItemCacheModel.active = getActive();

		spSellingItemCacheModel.companyId = getCompanyId();

		spSellingItemCacheModel.userId = getUserId();

		spSellingItemCacheModel.userName = getUserName();

		String userName = spSellingItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spSellingItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spSellingItemCacheModel.createDate = createDate.getTime();
		}
		else {
			spSellingItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spSellingItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spSellingItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spSellingItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{spSellingItemId=");
		sb.append(getSpSellingItemId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", itemCode=");
		sb.append(getItemCode());
		sb.append(", entityClassPk=");
		sb.append(getEntityClassPk());
		sb.append(", entityClassNameId=");
		sb.append(getEntityClassNameId());
		sb.append(", entityClassName=");
		sb.append(getEntityClassName());
		sb.append(", shortDescription=");
		sb.append(getShortDescription());
		sb.append(", longDescription=");
		sb.append(getLongDescription());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spshopping.model.SPSellingItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spSellingItemId</column-name><column-value><![CDATA[");
		sb.append(getSpSellingItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemCode</column-name><column-value><![CDATA[");
		sb.append(getItemCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassPk</column-name><column-value><![CDATA[");
		sb.append(getEntityClassPk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassNameId</column-name><column-value><![CDATA[");
		sb.append(getEntityClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassName</column-name><column-value><![CDATA[");
		sb.append(getEntityClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortDescription</column-name><column-value><![CDATA[");
		sb.append(getShortDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longDescription</column-name><column-value><![CDATA[");
		sb.append(getLongDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPSellingItem.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPSellingItem.class
		};
	private long _spSellingItemId;
	private long _groupId;
	private String _title;
	private String _itemCode;
	private long _entityClassPk;
	private long _originalEntityClassPk;
	private boolean _setOriginalEntityClassPk;
	private long _entityClassNameId;
	private long _originalEntityClassNameId;
	private boolean _setOriginalEntityClassNameId;
	private String _entityClassName;
	private String _shortDescription;
	private String _longDescription;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private SPSellingItem _escapedModel;
}
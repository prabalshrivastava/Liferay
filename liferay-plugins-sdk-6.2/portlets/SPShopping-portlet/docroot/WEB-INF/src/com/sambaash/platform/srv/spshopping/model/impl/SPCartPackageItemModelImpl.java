/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spshopping.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spshopping.model.SPCartPackageItem;
import com.sambaash.platform.srv.spshopping.model.SPCartPackageItemModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPCartPackageItem service. Represents a row in the &quot;SPCartPackageItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spshopping.model.SPCartPackageItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPCartPackageItemImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPCartPackageItemImpl
 * @see com.sambaash.platform.srv.spshopping.model.SPCartPackageItem
 * @see com.sambaash.platform.srv.spshopping.model.SPCartPackageItemModel
 * @generated
 */
public class SPCartPackageItemModelImpl extends BaseModelImpl<SPCartPackageItem>
	implements SPCartPackageItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p cart package item model instance should use the {@link com.sambaash.platform.srv.spshopping.model.SPCartPackageItem} interface instead.
	 */
	public static final String TABLE_NAME = "SPCartPackageItem";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spCartPackageItemId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "spCartPackageId", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "itemCode", Types.VARCHAR },
			{ "quantity", Types.INTEGER },
			{ "entityClassPk", Types.BIGINT },
			{ "entityClassName", Types.VARCHAR },
			{ "totalPrice", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPCartPackageItem (spCartPackageItemId BIGINT(20) not null primary key,groupId BIGINT(20),spCartPackageId BIGINT(20),title VARCHAR(75) null,itemCode VARCHAR(75) null,quantity INTEGER,entityClassPk BIGINT(20),entityClassName VARCHAR(75) null,totalPrice VARCHAR(75) null,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPCartPackageItem";
	public static final String ORDER_BY_JPQL = " ORDER BY spCartPackageItem.spCartPackageItemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPCartPackageItem.spCartPackageItemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPCartPackageItem"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spshopping.model.SPCartPackageItem"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spshopping.model.SPCartPackageItem"),
			true);
	public static long SPCARTPACKAGEID_COLUMN_BITMASK = 1L;
	public static long SPCARTPACKAGEITEMID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spshopping.model.SPCartPackageItem"));

	public SPCartPackageItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spCartPackageItemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpCartPackageItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spCartPackageItemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPCartPackageItem.class;
	}

	@Override
	public String getModelClassName() {
		return SPCartPackageItem.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spCartPackageItemId", getSpCartPackageItemId());
		attributes.put("groupId", getGroupId());
		attributes.put("spCartPackageId", getSpCartPackageId());
		attributes.put("title", getTitle());
		attributes.put("itemCode", getItemCode());
		attributes.put("quantity", getQuantity());
		attributes.put("entityClassPk", getEntityClassPk());
		attributes.put("entityClassName", getEntityClassName());
		attributes.put("totalPrice", getTotalPrice());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spCartPackageItemId = (Long)attributes.get("spCartPackageItemId");

		if (spCartPackageItemId != null) {
			setSpCartPackageItemId(spCartPackageItemId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long spCartPackageId = (Long)attributes.get("spCartPackageId");

		if (spCartPackageId != null) {
			setSpCartPackageId(spCartPackageId);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String itemCode = (String)attributes.get("itemCode");

		if (itemCode != null) {
			setItemCode(itemCode);
		}

		Integer quantity = (Integer)attributes.get("quantity");

		if (quantity != null) {
			setQuantity(quantity);
		}

		Long entityClassPk = (Long)attributes.get("entityClassPk");

		if (entityClassPk != null) {
			setEntityClassPk(entityClassPk);
		}

		String entityClassName = (String)attributes.get("entityClassName");

		if (entityClassName != null) {
			setEntityClassName(entityClassName);
		}

		String totalPrice = (String)attributes.get("totalPrice");

		if (totalPrice != null) {
			setTotalPrice(totalPrice);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSpCartPackageItemId() {
		return _spCartPackageItemId;
	}

	@Override
	public void setSpCartPackageItemId(long spCartPackageItemId) {
		_spCartPackageItemId = spCartPackageItemId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getSpCartPackageId() {
		return _spCartPackageId;
	}

	@Override
	public void setSpCartPackageId(long spCartPackageId) {
		_columnBitmask |= SPCARTPACKAGEID_COLUMN_BITMASK;

		if (!_setOriginalSpCartPackageId) {
			_setOriginalSpCartPackageId = true;

			_originalSpCartPackageId = _spCartPackageId;
		}

		_spCartPackageId = spCartPackageId;
	}

	public long getOriginalSpCartPackageId() {
		return _originalSpCartPackageId;
	}

	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@Override
	public String getItemCode() {
		if (_itemCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemCode;
		}
	}

	@Override
	public void setItemCode(String itemCode) {
		_itemCode = itemCode;
	}

	@Override
	public int getQuantity() {
		return _quantity;
	}

	@Override
	public void setQuantity(int quantity) {
		_quantity = quantity;
	}

	@Override
	public long getEntityClassPk() {
		return _entityClassPk;
	}

	@Override
	public void setEntityClassPk(long entityClassPk) {
		_entityClassPk = entityClassPk;
	}

	@Override
	public String getEntityClassName() {
		if (_entityClassName == null) {
			return StringPool.BLANK;
		}
		else {
			return _entityClassName;
		}
	}

	@Override
	public void setEntityClassName(String entityClassName) {
		_entityClassName = entityClassName;
	}

	@Override
	public String getTotalPrice() {
		if (_totalPrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _totalPrice;
		}
	}

	@Override
	public void setTotalPrice(String totalPrice) {
		_totalPrice = totalPrice;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPCartPackageItem.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPCartPackageItem toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPCartPackageItem)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPCartPackageItemImpl spCartPackageItemImpl = new SPCartPackageItemImpl();

		spCartPackageItemImpl.setSpCartPackageItemId(getSpCartPackageItemId());
		spCartPackageItemImpl.setGroupId(getGroupId());
		spCartPackageItemImpl.setSpCartPackageId(getSpCartPackageId());
		spCartPackageItemImpl.setTitle(getTitle());
		spCartPackageItemImpl.setItemCode(getItemCode());
		spCartPackageItemImpl.setQuantity(getQuantity());
		spCartPackageItemImpl.setEntityClassPk(getEntityClassPk());
		spCartPackageItemImpl.setEntityClassName(getEntityClassName());
		spCartPackageItemImpl.setTotalPrice(getTotalPrice());
		spCartPackageItemImpl.setCompanyId(getCompanyId());
		spCartPackageItemImpl.setUserId(getUserId());
		spCartPackageItemImpl.setUserName(getUserName());
		spCartPackageItemImpl.setCreateDate(getCreateDate());
		spCartPackageItemImpl.setModifiedDate(getModifiedDate());

		spCartPackageItemImpl.resetOriginalValues();

		return spCartPackageItemImpl;
	}

	@Override
	public int compareTo(SPCartPackageItem spCartPackageItem) {
		long primaryKey = spCartPackageItem.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPCartPackageItem)) {
			return false;
		}

		SPCartPackageItem spCartPackageItem = (SPCartPackageItem)obj;

		long primaryKey = spCartPackageItem.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPCartPackageItemModelImpl spCartPackageItemModelImpl = this;

		spCartPackageItemModelImpl._originalSpCartPackageId = spCartPackageItemModelImpl._spCartPackageId;

		spCartPackageItemModelImpl._setOriginalSpCartPackageId = false;

		spCartPackageItemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPCartPackageItem> toCacheModel() {
		SPCartPackageItemCacheModel spCartPackageItemCacheModel = new SPCartPackageItemCacheModel();

		spCartPackageItemCacheModel.spCartPackageItemId = getSpCartPackageItemId();

		spCartPackageItemCacheModel.groupId = getGroupId();

		spCartPackageItemCacheModel.spCartPackageId = getSpCartPackageId();

		spCartPackageItemCacheModel.title = getTitle();

		String title = spCartPackageItemCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			spCartPackageItemCacheModel.title = null;
		}

		spCartPackageItemCacheModel.itemCode = getItemCode();

		String itemCode = spCartPackageItemCacheModel.itemCode;

		if ((itemCode != null) && (itemCode.length() == 0)) {
			spCartPackageItemCacheModel.itemCode = null;
		}

		spCartPackageItemCacheModel.quantity = getQuantity();

		spCartPackageItemCacheModel.entityClassPk = getEntityClassPk();

		spCartPackageItemCacheModel.entityClassName = getEntityClassName();

		String entityClassName = spCartPackageItemCacheModel.entityClassName;

		if ((entityClassName != null) && (entityClassName.length() == 0)) {
			spCartPackageItemCacheModel.entityClassName = null;
		}

		spCartPackageItemCacheModel.totalPrice = getTotalPrice();

		String totalPrice = spCartPackageItemCacheModel.totalPrice;

		if ((totalPrice != null) && (totalPrice.length() == 0)) {
			spCartPackageItemCacheModel.totalPrice = null;
		}

		spCartPackageItemCacheModel.companyId = getCompanyId();

		spCartPackageItemCacheModel.userId = getUserId();

		spCartPackageItemCacheModel.userName = getUserName();

		String userName = spCartPackageItemCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spCartPackageItemCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spCartPackageItemCacheModel.createDate = createDate.getTime();
		}
		else {
			spCartPackageItemCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spCartPackageItemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spCartPackageItemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spCartPackageItemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{spCartPackageItemId=");
		sb.append(getSpCartPackageItemId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", spCartPackageId=");
		sb.append(getSpCartPackageId());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", itemCode=");
		sb.append(getItemCode());
		sb.append(", quantity=");
		sb.append(getQuantity());
		sb.append(", entityClassPk=");
		sb.append(getEntityClassPk());
		sb.append(", entityClassName=");
		sb.append(getEntityClassName());
		sb.append(", totalPrice=");
		sb.append(getTotalPrice());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spshopping.model.SPCartPackageItem");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spCartPackageItemId</column-name><column-value><![CDATA[");
		sb.append(getSpCartPackageItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCartPackageId</column-name><column-value><![CDATA[");
		sb.append(getSpCartPackageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemCode</column-name><column-value><![CDATA[");
		sb.append(getItemCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantity</column-name><column-value><![CDATA[");
		sb.append(getQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassPk</column-name><column-value><![CDATA[");
		sb.append(getEntityClassPk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassName</column-name><column-value><![CDATA[");
		sb.append(getEntityClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalPrice</column-name><column-value><![CDATA[");
		sb.append(getTotalPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPCartPackageItem.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPCartPackageItem.class
		};
	private long _spCartPackageItemId;
	private long _groupId;
	private long _spCartPackageId;
	private long _originalSpCartPackageId;
	private boolean _setOriginalSpCartPackageId;
	private String _title;
	private String _itemCode;
	private int _quantity;
	private long _entityClassPk;
	private String _entityClassName;
	private String _totalPrice;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private SPCartPackageItem _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.ServiceComponents;
import com.sambaash.platform.srv.spservices.model.ServiceComponentsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ServiceComponents service. Represents a row in the &quot;SPServiceComponents&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.ServiceComponentsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServiceComponentsImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see ServiceComponentsImpl
 * @see com.sambaash.platform.srv.spservices.model.ServiceComponents
 * @see com.sambaash.platform.srv.spservices.model.ServiceComponentsModel
 * @generated
 */
public class ServiceComponentsModelImpl extends BaseModelImpl<ServiceComponents>
	implements ServiceComponentsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service components model instance should use the {@link com.sambaash.platform.srv.spservices.model.ServiceComponents} interface instead.
	 */
	public static final String TABLE_NAME = "SPServiceComponents";
	public static final Object[][] TABLE_COLUMNS = {
			{ "scId", Types.BIGINT },
			{ "scgId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "technologyComponent", Types.VARCHAR },
			{ "phase", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "version", Types.VARCHAR },
			{ "serviceType", Types.VARCHAR },
			{ "ServiceExposureType", Types.VARCHAR },
			{ "userType", Types.VARCHAR },
			{ "platformType", Types.VARCHAR },
			{ "islaCarteService", Types.BOOLEAN },
			{ "isExternal", Types.BOOLEAN },
			{ "tag", Types.VARCHAR },
			{ "webserviceURL", Types.VARCHAR },
			{ "deploymentCluster", Types.VARCHAR },
			{ "deploymentLocation", Types.VARCHAR },
			{ "channelID", Types.VARCHAR },
			{ "testPlan", Types.VARCHAR },
			{ "performanceProfile", Types.VARCHAR },
			{ "usageStatistics", Types.VARCHAR },
			{ "dateAdded", Types.TIMESTAMP },
			{ "dateModified", Types.TIMESTAMP },
			{ "author", Types.VARCHAR },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR },
			{ "extra3", Types.VARCHAR },
			{ "extra4", Types.VARCHAR },
			{ "extra5", Types.TIMESTAMP },
			{ "extra6", Types.TIMESTAMP },
			{ "serviceCharges", Types.FLOAT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPServiceComponents (scId BIGINT(20) not null primary key,scgId BIGINT(20),name VARCHAR(75) null,description VARCHAR(75) null,technologyComponent VARCHAR(75) null,phase VARCHAR(75) null,status VARCHAR(75) null,version VARCHAR(75) null,serviceType VARCHAR(75) null,ServiceExposureType VARCHAR(75) null,userType VARCHAR(75) null,platformType VARCHAR(75) null,islaCarteService BOOLEAN,isExternal BOOLEAN,tag VARCHAR(75) null,webserviceURL VARCHAR(75) null,deploymentCluster VARCHAR(75) null,deploymentLocation VARCHAR(75) null,channelID VARCHAR(75) null,testPlan VARCHAR(75) null,performanceProfile VARCHAR(75) null,usageStatistics VARCHAR(75) null,dateAdded DATETIME null,dateModified DATETIME null,author VARCHAR(75) null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,extra4 VARCHAR(75) null,extra5 DATETIME null,extra6 DATETIME null,serviceCharges DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table SPServiceComponents";
	public static final String ORDER_BY_JPQL = " ORDER BY serviceComponents.scgId ASC, serviceComponents.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPServiceComponents.scgId ASC, SPServiceComponents.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.ServiceComponents"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.ServiceComponents"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.ServiceComponents"),
			true);
	public static long NAME_COLUMN_BITMASK = 1L;
	public static long SCGID_COLUMN_BITMASK = 2L;
	public static long TECHNOLOGYCOMPONENT_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.ServiceComponents"));

	public ServiceComponentsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _scId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setScId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _scId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ServiceComponents.class;
	}

	@Override
	public String getModelClassName() {
		return ServiceComponents.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("scId", getScId());
		attributes.put("scgId", getScgId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("technologyComponent", getTechnologyComponent());
		attributes.put("phase", getPhase());
		attributes.put("status", getStatus());
		attributes.put("version", getVersion());
		attributes.put("serviceType", getServiceType());
		attributes.put("ServiceExposureType", getServiceExposureType());
		attributes.put("userType", getUserType());
		attributes.put("platformType", getPlatformType());
		attributes.put("islaCarteService", getIslaCarteService());
		attributes.put("isExternal", getIsExternal());
		attributes.put("tag", getTag());
		attributes.put("webserviceURL", getWebserviceURL());
		attributes.put("deploymentCluster", getDeploymentCluster());
		attributes.put("deploymentLocation", getDeploymentLocation());
		attributes.put("channelID", getChannelID());
		attributes.put("testPlan", getTestPlan());
		attributes.put("performanceProfile", getPerformanceProfile());
		attributes.put("usageStatistics", getUsageStatistics());
		attributes.put("dateAdded", getDateAdded());
		attributes.put("dateModified", getDateModified());
		attributes.put("author", getAuthor());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());
		attributes.put("extra3", getExtra3());
		attributes.put("extra4", getExtra4());
		attributes.put("extra5", getExtra5());
		attributes.put("extra6", getExtra6());
		attributes.put("serviceCharges", getServiceCharges());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long scId = (Long)attributes.get("scId");

		if (scId != null) {
			setScId(scId);
		}

		Long scgId = (Long)attributes.get("scgId");

		if (scgId != null) {
			setScgId(scgId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String technologyComponent = (String)attributes.get(
				"technologyComponent");

		if (technologyComponent != null) {
			setTechnologyComponent(technologyComponent);
		}

		String phase = (String)attributes.get("phase");

		if (phase != null) {
			setPhase(phase);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		String serviceType = (String)attributes.get("serviceType");

		if (serviceType != null) {
			setServiceType(serviceType);
		}

		String ServiceExposureType = (String)attributes.get(
				"ServiceExposureType");

		if (ServiceExposureType != null) {
			setServiceExposureType(ServiceExposureType);
		}

		String userType = (String)attributes.get("userType");

		if (userType != null) {
			setUserType(userType);
		}

		String platformType = (String)attributes.get("platformType");

		if (platformType != null) {
			setPlatformType(platformType);
		}

		Boolean islaCarteService = (Boolean)attributes.get("islaCarteService");

		if (islaCarteService != null) {
			setIslaCarteService(islaCarteService);
		}

		Boolean isExternal = (Boolean)attributes.get("isExternal");

		if (isExternal != null) {
			setIsExternal(isExternal);
		}

		String tag = (String)attributes.get("tag");

		if (tag != null) {
			setTag(tag);
		}

		String webserviceURL = (String)attributes.get("webserviceURL");

		if (webserviceURL != null) {
			setWebserviceURL(webserviceURL);
		}

		String deploymentCluster = (String)attributes.get("deploymentCluster");

		if (deploymentCluster != null) {
			setDeploymentCluster(deploymentCluster);
		}

		String deploymentLocation = (String)attributes.get("deploymentLocation");

		if (deploymentLocation != null) {
			setDeploymentLocation(deploymentLocation);
		}

		String channelID = (String)attributes.get("channelID");

		if (channelID != null) {
			setChannelID(channelID);
		}

		String testPlan = (String)attributes.get("testPlan");

		if (testPlan != null) {
			setTestPlan(testPlan);
		}

		String performanceProfile = (String)attributes.get("performanceProfile");

		if (performanceProfile != null) {
			setPerformanceProfile(performanceProfile);
		}

		String usageStatistics = (String)attributes.get("usageStatistics");

		if (usageStatistics != null) {
			setUsageStatistics(usageStatistics);
		}

		Date dateAdded = (Date)attributes.get("dateAdded");

		if (dateAdded != null) {
			setDateAdded(dateAdded);
		}

		Date dateModified = (Date)attributes.get("dateModified");

		if (dateModified != null) {
			setDateModified(dateModified);
		}

		String author = (String)attributes.get("author");

		if (author != null) {
			setAuthor(author);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}

		String extra3 = (String)attributes.get("extra3");

		if (extra3 != null) {
			setExtra3(extra3);
		}

		String extra4 = (String)attributes.get("extra4");

		if (extra4 != null) {
			setExtra4(extra4);
		}

		Date extra5 = (Date)attributes.get("extra5");

		if (extra5 != null) {
			setExtra5(extra5);
		}

		Date extra6 = (Date)attributes.get("extra6");

		if (extra6 != null) {
			setExtra6(extra6);
		}

		Float serviceCharges = (Float)attributes.get("serviceCharges");

		if (serviceCharges != null) {
			setServiceCharges(serviceCharges);
		}
	}

	@Override
	public long getScId() {
		return _scId;
	}

	@Override
	public void setScId(long scId) {
		_scId = scId;
	}

	@Override
	public long getScgId() {
		return _scgId;
	}

	@Override
	public void setScgId(long scgId) {
		_columnBitmask = -1L;

		if (!_setOriginalScgId) {
			_setOriginalScgId = true;

			_originalScgId = _scgId;
		}

		_scgId = scgId;
	}

	public long getOriginalScgId() {
		return _originalScgId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getTechnologyComponent() {
		if (_technologyComponent == null) {
			return StringPool.BLANK;
		}
		else {
			return _technologyComponent;
		}
	}

	@Override
	public void setTechnologyComponent(String technologyComponent) {
		_columnBitmask |= TECHNOLOGYCOMPONENT_COLUMN_BITMASK;

		if (_originalTechnologyComponent == null) {
			_originalTechnologyComponent = _technologyComponent;
		}

		_technologyComponent = technologyComponent;
	}

	public String getOriginalTechnologyComponent() {
		return GetterUtil.getString(_originalTechnologyComponent);
	}

	@Override
	public String getPhase() {
		if (_phase == null) {
			return StringPool.BLANK;
		}
		else {
			return _phase;
		}
	}

	@Override
	public void setPhase(String phase) {
		_phase = phase;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_version = version;
	}

	@Override
	public String getServiceType() {
		if (_serviceType == null) {
			return StringPool.BLANK;
		}
		else {
			return _serviceType;
		}
	}

	@Override
	public void setServiceType(String serviceType) {
		_serviceType = serviceType;
	}

	@Override
	public String getServiceExposureType() {
		if (_ServiceExposureType == null) {
			return StringPool.BLANK;
		}
		else {
			return _ServiceExposureType;
		}
	}

	@Override
	public void setServiceExposureType(String ServiceExposureType) {
		_ServiceExposureType = ServiceExposureType;
	}

	@Override
	public String getUserType() {
		if (_userType == null) {
			return StringPool.BLANK;
		}
		else {
			return _userType;
		}
	}

	@Override
	public void setUserType(String userType) {
		_userType = userType;
	}

	@Override
	public String getPlatformType() {
		if (_platformType == null) {
			return StringPool.BLANK;
		}
		else {
			return _platformType;
		}
	}

	@Override
	public void setPlatformType(String platformType) {
		_platformType = platformType;
	}

	@Override
	public boolean getIslaCarteService() {
		return _islaCarteService;
	}

	@Override
	public boolean isIslaCarteService() {
		return _islaCarteService;
	}

	@Override
	public void setIslaCarteService(boolean islaCarteService) {
		_islaCarteService = islaCarteService;
	}

	@Override
	public boolean getIsExternal() {
		return _isExternal;
	}

	@Override
	public boolean isIsExternal() {
		return _isExternal;
	}

	@Override
	public void setIsExternal(boolean isExternal) {
		_isExternal = isExternal;
	}

	@Override
	public String getTag() {
		if (_tag == null) {
			return StringPool.BLANK;
		}
		else {
			return _tag;
		}
	}

	@Override
	public void setTag(String tag) {
		_tag = tag;
	}

	@Override
	public String getWebserviceURL() {
		if (_webserviceURL == null) {
			return StringPool.BLANK;
		}
		else {
			return _webserviceURL;
		}
	}

	@Override
	public void setWebserviceURL(String webserviceURL) {
		_webserviceURL = webserviceURL;
	}

	@Override
	public String getDeploymentCluster() {
		if (_deploymentCluster == null) {
			return StringPool.BLANK;
		}
		else {
			return _deploymentCluster;
		}
	}

	@Override
	public void setDeploymentCluster(String deploymentCluster) {
		_deploymentCluster = deploymentCluster;
	}

	@Override
	public String getDeploymentLocation() {
		if (_deploymentLocation == null) {
			return StringPool.BLANK;
		}
		else {
			return _deploymentLocation;
		}
	}

	@Override
	public void setDeploymentLocation(String deploymentLocation) {
		_deploymentLocation = deploymentLocation;
	}

	@Override
	public String getChannelID() {
		if (_channelID == null) {
			return StringPool.BLANK;
		}
		else {
			return _channelID;
		}
	}

	@Override
	public void setChannelID(String channelID) {
		_channelID = channelID;
	}

	@Override
	public String getTestPlan() {
		if (_testPlan == null) {
			return StringPool.BLANK;
		}
		else {
			return _testPlan;
		}
	}

	@Override
	public void setTestPlan(String testPlan) {
		_testPlan = testPlan;
	}

	@Override
	public String getPerformanceProfile() {
		if (_performanceProfile == null) {
			return StringPool.BLANK;
		}
		else {
			return _performanceProfile;
		}
	}

	@Override
	public void setPerformanceProfile(String performanceProfile) {
		_performanceProfile = performanceProfile;
	}

	@Override
	public String getUsageStatistics() {
		if (_usageStatistics == null) {
			return StringPool.BLANK;
		}
		else {
			return _usageStatistics;
		}
	}

	@Override
	public void setUsageStatistics(String usageStatistics) {
		_usageStatistics = usageStatistics;
	}

	@Override
	public Date getDateAdded() {
		return _dateAdded;
	}

	@Override
	public void setDateAdded(Date dateAdded) {
		_dateAdded = dateAdded;
	}

	@Override
	public Date getDateModified() {
		return _dateModified;
	}

	@Override
	public void setDateModified(Date dateModified) {
		_dateModified = dateModified;
	}

	@Override
	public String getAuthor() {
		if (_author == null) {
			return StringPool.BLANK;
		}
		else {
			return _author;
		}
	}

	@Override
	public void setAuthor(String author) {
		_author = author;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public String getExtra4() {
		if (_extra4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra4;
		}
	}

	@Override
	public void setExtra4(String extra4) {
		_extra4 = extra4;
	}

	@Override
	public Date getExtra5() {
		return _extra5;
	}

	@Override
	public void setExtra5(Date extra5) {
		_extra5 = extra5;
	}

	@Override
	public Date getExtra6() {
		return _extra6;
	}

	@Override
	public void setExtra6(Date extra6) {
		_extra6 = extra6;
	}

	@Override
	public float getServiceCharges() {
		return _serviceCharges;
	}

	@Override
	public void setServiceCharges(float serviceCharges) {
		_serviceCharges = serviceCharges;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ServiceComponents.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ServiceComponents toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ServiceComponents)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServiceComponentsImpl serviceComponentsImpl = new ServiceComponentsImpl();

		serviceComponentsImpl.setScId(getScId());
		serviceComponentsImpl.setScgId(getScgId());
		serviceComponentsImpl.setName(getName());
		serviceComponentsImpl.setDescription(getDescription());
		serviceComponentsImpl.setTechnologyComponent(getTechnologyComponent());
		serviceComponentsImpl.setPhase(getPhase());
		serviceComponentsImpl.setStatus(getStatus());
		serviceComponentsImpl.setVersion(getVersion());
		serviceComponentsImpl.setServiceType(getServiceType());
		serviceComponentsImpl.setServiceExposureType(getServiceExposureType());
		serviceComponentsImpl.setUserType(getUserType());
		serviceComponentsImpl.setPlatformType(getPlatformType());
		serviceComponentsImpl.setIslaCarteService(getIslaCarteService());
		serviceComponentsImpl.setIsExternal(getIsExternal());
		serviceComponentsImpl.setTag(getTag());
		serviceComponentsImpl.setWebserviceURL(getWebserviceURL());
		serviceComponentsImpl.setDeploymentCluster(getDeploymentCluster());
		serviceComponentsImpl.setDeploymentLocation(getDeploymentLocation());
		serviceComponentsImpl.setChannelID(getChannelID());
		serviceComponentsImpl.setTestPlan(getTestPlan());
		serviceComponentsImpl.setPerformanceProfile(getPerformanceProfile());
		serviceComponentsImpl.setUsageStatistics(getUsageStatistics());
		serviceComponentsImpl.setDateAdded(getDateAdded());
		serviceComponentsImpl.setDateModified(getDateModified());
		serviceComponentsImpl.setAuthor(getAuthor());
		serviceComponentsImpl.setExtra1(getExtra1());
		serviceComponentsImpl.setExtra2(getExtra2());
		serviceComponentsImpl.setExtra3(getExtra3());
		serviceComponentsImpl.setExtra4(getExtra4());
		serviceComponentsImpl.setExtra5(getExtra5());
		serviceComponentsImpl.setExtra6(getExtra6());
		serviceComponentsImpl.setServiceCharges(getServiceCharges());

		serviceComponentsImpl.resetOriginalValues();

		return serviceComponentsImpl;
	}

	@Override
	public int compareTo(ServiceComponents serviceComponents) {
		int value = 0;

		if (getScgId() < serviceComponents.getScgId()) {
			value = -1;
		}
		else if (getScgId() > serviceComponents.getScgId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = getName().compareTo(serviceComponents.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ServiceComponents)) {
			return false;
		}

		ServiceComponents serviceComponents = (ServiceComponents)obj;

		long primaryKey = serviceComponents.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ServiceComponentsModelImpl serviceComponentsModelImpl = this;

		serviceComponentsModelImpl._originalScgId = serviceComponentsModelImpl._scgId;

		serviceComponentsModelImpl._setOriginalScgId = false;

		serviceComponentsModelImpl._originalName = serviceComponentsModelImpl._name;

		serviceComponentsModelImpl._originalTechnologyComponent = serviceComponentsModelImpl._technologyComponent;

		serviceComponentsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ServiceComponents> toCacheModel() {
		ServiceComponentsCacheModel serviceComponentsCacheModel = new ServiceComponentsCacheModel();

		serviceComponentsCacheModel.scId = getScId();

		serviceComponentsCacheModel.scgId = getScgId();

		serviceComponentsCacheModel.name = getName();

		String name = serviceComponentsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			serviceComponentsCacheModel.name = null;
		}

		serviceComponentsCacheModel.description = getDescription();

		String description = serviceComponentsCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			serviceComponentsCacheModel.description = null;
		}

		serviceComponentsCacheModel.technologyComponent = getTechnologyComponent();

		String technologyComponent = serviceComponentsCacheModel.technologyComponent;

		if ((technologyComponent != null) &&
				(technologyComponent.length() == 0)) {
			serviceComponentsCacheModel.technologyComponent = null;
		}

		serviceComponentsCacheModel.phase = getPhase();

		String phase = serviceComponentsCacheModel.phase;

		if ((phase != null) && (phase.length() == 0)) {
			serviceComponentsCacheModel.phase = null;
		}

		serviceComponentsCacheModel.status = getStatus();

		String status = serviceComponentsCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			serviceComponentsCacheModel.status = null;
		}

		serviceComponentsCacheModel.version = getVersion();

		String version = serviceComponentsCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			serviceComponentsCacheModel.version = null;
		}

		serviceComponentsCacheModel.serviceType = getServiceType();

		String serviceType = serviceComponentsCacheModel.serviceType;

		if ((serviceType != null) && (serviceType.length() == 0)) {
			serviceComponentsCacheModel.serviceType = null;
		}

		serviceComponentsCacheModel.ServiceExposureType = getServiceExposureType();

		String ServiceExposureType = serviceComponentsCacheModel.ServiceExposureType;

		if ((ServiceExposureType != null) &&
				(ServiceExposureType.length() == 0)) {
			serviceComponentsCacheModel.ServiceExposureType = null;
		}

		serviceComponentsCacheModel.userType = getUserType();

		String userType = serviceComponentsCacheModel.userType;

		if ((userType != null) && (userType.length() == 0)) {
			serviceComponentsCacheModel.userType = null;
		}

		serviceComponentsCacheModel.platformType = getPlatformType();

		String platformType = serviceComponentsCacheModel.platformType;

		if ((platformType != null) && (platformType.length() == 0)) {
			serviceComponentsCacheModel.platformType = null;
		}

		serviceComponentsCacheModel.islaCarteService = getIslaCarteService();

		serviceComponentsCacheModel.isExternal = getIsExternal();

		serviceComponentsCacheModel.tag = getTag();

		String tag = serviceComponentsCacheModel.tag;

		if ((tag != null) && (tag.length() == 0)) {
			serviceComponentsCacheModel.tag = null;
		}

		serviceComponentsCacheModel.webserviceURL = getWebserviceURL();

		String webserviceURL = serviceComponentsCacheModel.webserviceURL;

		if ((webserviceURL != null) && (webserviceURL.length() == 0)) {
			serviceComponentsCacheModel.webserviceURL = null;
		}

		serviceComponentsCacheModel.deploymentCluster = getDeploymentCluster();

		String deploymentCluster = serviceComponentsCacheModel.deploymentCluster;

		if ((deploymentCluster != null) && (deploymentCluster.length() == 0)) {
			serviceComponentsCacheModel.deploymentCluster = null;
		}

		serviceComponentsCacheModel.deploymentLocation = getDeploymentLocation();

		String deploymentLocation = serviceComponentsCacheModel.deploymentLocation;

		if ((deploymentLocation != null) && (deploymentLocation.length() == 0)) {
			serviceComponentsCacheModel.deploymentLocation = null;
		}

		serviceComponentsCacheModel.channelID = getChannelID();

		String channelID = serviceComponentsCacheModel.channelID;

		if ((channelID != null) && (channelID.length() == 0)) {
			serviceComponentsCacheModel.channelID = null;
		}

		serviceComponentsCacheModel.testPlan = getTestPlan();

		String testPlan = serviceComponentsCacheModel.testPlan;

		if ((testPlan != null) && (testPlan.length() == 0)) {
			serviceComponentsCacheModel.testPlan = null;
		}

		serviceComponentsCacheModel.performanceProfile = getPerformanceProfile();

		String performanceProfile = serviceComponentsCacheModel.performanceProfile;

		if ((performanceProfile != null) && (performanceProfile.length() == 0)) {
			serviceComponentsCacheModel.performanceProfile = null;
		}

		serviceComponentsCacheModel.usageStatistics = getUsageStatistics();

		String usageStatistics = serviceComponentsCacheModel.usageStatistics;

		if ((usageStatistics != null) && (usageStatistics.length() == 0)) {
			serviceComponentsCacheModel.usageStatistics = null;
		}

		Date dateAdded = getDateAdded();

		if (dateAdded != null) {
			serviceComponentsCacheModel.dateAdded = dateAdded.getTime();
		}
		else {
			serviceComponentsCacheModel.dateAdded = Long.MIN_VALUE;
		}

		Date dateModified = getDateModified();

		if (dateModified != null) {
			serviceComponentsCacheModel.dateModified = dateModified.getTime();
		}
		else {
			serviceComponentsCacheModel.dateModified = Long.MIN_VALUE;
		}

		serviceComponentsCacheModel.author = getAuthor();

		String author = serviceComponentsCacheModel.author;

		if ((author != null) && (author.length() == 0)) {
			serviceComponentsCacheModel.author = null;
		}

		serviceComponentsCacheModel.extra1 = getExtra1();

		String extra1 = serviceComponentsCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			serviceComponentsCacheModel.extra1 = null;
		}

		serviceComponentsCacheModel.extra2 = getExtra2();

		String extra2 = serviceComponentsCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			serviceComponentsCacheModel.extra2 = null;
		}

		serviceComponentsCacheModel.extra3 = getExtra3();

		String extra3 = serviceComponentsCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			serviceComponentsCacheModel.extra3 = null;
		}

		serviceComponentsCacheModel.extra4 = getExtra4();

		String extra4 = serviceComponentsCacheModel.extra4;

		if ((extra4 != null) && (extra4.length() == 0)) {
			serviceComponentsCacheModel.extra4 = null;
		}

		Date extra5 = getExtra5();

		if (extra5 != null) {
			serviceComponentsCacheModel.extra5 = extra5.getTime();
		}
		else {
			serviceComponentsCacheModel.extra5 = Long.MIN_VALUE;
		}

		Date extra6 = getExtra6();

		if (extra6 != null) {
			serviceComponentsCacheModel.extra6 = extra6.getTime();
		}
		else {
			serviceComponentsCacheModel.extra6 = Long.MIN_VALUE;
		}

		serviceComponentsCacheModel.serviceCharges = getServiceCharges();

		return serviceComponentsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(65);

		sb.append("{scId=");
		sb.append(getScId());
		sb.append(", scgId=");
		sb.append(getScgId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", technologyComponent=");
		sb.append(getTechnologyComponent());
		sb.append(", phase=");
		sb.append(getPhase());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", serviceType=");
		sb.append(getServiceType());
		sb.append(", ServiceExposureType=");
		sb.append(getServiceExposureType());
		sb.append(", userType=");
		sb.append(getUserType());
		sb.append(", platformType=");
		sb.append(getPlatformType());
		sb.append(", islaCarteService=");
		sb.append(getIslaCarteService());
		sb.append(", isExternal=");
		sb.append(getIsExternal());
		sb.append(", tag=");
		sb.append(getTag());
		sb.append(", webserviceURL=");
		sb.append(getWebserviceURL());
		sb.append(", deploymentCluster=");
		sb.append(getDeploymentCluster());
		sb.append(", deploymentLocation=");
		sb.append(getDeploymentLocation());
		sb.append(", channelID=");
		sb.append(getChannelID());
		sb.append(", testPlan=");
		sb.append(getTestPlan());
		sb.append(", performanceProfile=");
		sb.append(getPerformanceProfile());
		sb.append(", usageStatistics=");
		sb.append(getUsageStatistics());
		sb.append(", dateAdded=");
		sb.append(getDateAdded());
		sb.append(", dateModified=");
		sb.append(getDateModified());
		sb.append(", author=");
		sb.append(getAuthor());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append(", extra3=");
		sb.append(getExtra3());
		sb.append(", extra4=");
		sb.append(getExtra4());
		sb.append(", extra5=");
		sb.append(getExtra5());
		sb.append(", extra6=");
		sb.append(getExtra6());
		sb.append(", serviceCharges=");
		sb.append(getServiceCharges());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(100);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spservices.model.ServiceComponents");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>scId</column-name><column-value><![CDATA[");
		sb.append(getScId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scgId</column-name><column-value><![CDATA[");
		sb.append(getScgId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>technologyComponent</column-name><column-value><![CDATA[");
		sb.append(getTechnologyComponent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phase</column-name><column-value><![CDATA[");
		sb.append(getPhase());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceType</column-name><column-value><![CDATA[");
		sb.append(getServiceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ServiceExposureType</column-name><column-value><![CDATA[");
		sb.append(getServiceExposureType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userType</column-name><column-value><![CDATA[");
		sb.append(getUserType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>platformType</column-name><column-value><![CDATA[");
		sb.append(getPlatformType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>islaCarteService</column-name><column-value><![CDATA[");
		sb.append(getIslaCarteService());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isExternal</column-name><column-value><![CDATA[");
		sb.append(getIsExternal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tag</column-name><column-value><![CDATA[");
		sb.append(getTag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>webserviceURL</column-name><column-value><![CDATA[");
		sb.append(getWebserviceURL());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deploymentCluster</column-name><column-value><![CDATA[");
		sb.append(getDeploymentCluster());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deploymentLocation</column-name><column-value><![CDATA[");
		sb.append(getDeploymentLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>channelID</column-name><column-value><![CDATA[");
		sb.append(getChannelID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>testPlan</column-name><column-value><![CDATA[");
		sb.append(getTestPlan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performanceProfile</column-name><column-value><![CDATA[");
		sb.append(getPerformanceProfile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usageStatistics</column-name><column-value><![CDATA[");
		sb.append(getUsageStatistics());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateAdded</column-name><column-value><![CDATA[");
		sb.append(getDateAdded());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateModified</column-name><column-value><![CDATA[");
		sb.append(getDateModified());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>author</column-name><column-value><![CDATA[");
		sb.append(getAuthor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra3</column-name><column-value><![CDATA[");
		sb.append(getExtra3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra4</column-name><column-value><![CDATA[");
		sb.append(getExtra4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra5</column-name><column-value><![CDATA[");
		sb.append(getExtra5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra6</column-name><column-value><![CDATA[");
		sb.append(getExtra6());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceCharges</column-name><column-value><![CDATA[");
		sb.append(getServiceCharges());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ServiceComponents.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ServiceComponents.class
		};
	private long _scId;
	private long _scgId;
	private long _originalScgId;
	private boolean _setOriginalScgId;
	private String _name;
	private String _originalName;
	private String _description;
	private String _technologyComponent;
	private String _originalTechnologyComponent;
	private String _phase;
	private String _status;
	private String _version;
	private String _serviceType;
	private String _ServiceExposureType;
	private String _userType;
	private String _platformType;
	private boolean _islaCarteService;
	private boolean _isExternal;
	private String _tag;
	private String _webserviceURL;
	private String _deploymentCluster;
	private String _deploymentLocation;
	private String _channelID;
	private String _testPlan;
	private String _performanceProfile;
	private String _usageStatistics;
	private Date _dateAdded;
	private Date _dateModified;
	private String _author;
	private String _extra1;
	private String _extra2;
	private String _extra3;
	private String _extra4;
	private Date _extra5;
	private Date _extra6;
	private float _serviceCharges;
	private long _columnBitmask;
	private ServiceComponents _escapedModel;
}
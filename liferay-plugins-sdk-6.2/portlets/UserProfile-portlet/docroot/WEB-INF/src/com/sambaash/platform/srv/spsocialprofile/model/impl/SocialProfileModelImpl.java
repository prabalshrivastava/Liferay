/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spsocialprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spsocialprofile.model.SocialProfile;
import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileModel;
import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SocialProfile service. Represents a row in the &quot;SPSocialProfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialProfileImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SocialProfileImpl
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfile
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfileModel
 * @generated
 */
@JSON(strict = true)
public class SocialProfileModelImpl extends BaseModelImpl<SocialProfile>
	implements SocialProfileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a social profile model instance should use the {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfile} interface instead.
	 */
	public static final String TABLE_NAME = "SPSocialProfile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userType", Types.VARCHAR },
			{ "memberPackage", Types.BIGINT },
			{ "userRegistrationStatus", Types.VARCHAR },
			{ "classPK", Types.BIGINT },
			{ "location", Types.VARCHAR },
			{ "profileViewCount", Types.INTEGER },
			{ "interest", Types.VARCHAR },
			{ "honors", Types.VARCHAR },
			{ "groupAssociation", Types.VARCHAR },
			{ "skillsQualification", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "trainingEducation", Types.VARCHAR },
			{ "about", Types.VARCHAR },
			{ "documentId", Types.BIGINT },
			{ "userInfo", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "twitterId", Types.VARCHAR },
			{ "linkedinId", Types.VARCHAR },
			{ "yahooId", Types.VARCHAR },
			{ "googleId", Types.VARCHAR },
			{ "facebookAuthToken", Types.VARCHAR },
			{ "openIdAuthToken", Types.VARCHAR },
			{ "twitterAuthToken", Types.VARCHAR },
			{ "linkedinAuthToken", Types.VARCHAR },
			{ "yahooAuthToken", Types.VARCHAR },
			{ "googleAuthToken", Types.VARCHAR },
			{ "facebookAuthSecret", Types.VARCHAR },
			{ "openIdAuthSecret", Types.VARCHAR },
			{ "twitterAuthSecret", Types.VARCHAR },
			{ "linkedinAuthSecret", Types.VARCHAR },
			{ "yahooAuthSecret", Types.VARCHAR },
			{ "googleAuthSecret", Types.VARCHAR },
			{ "loginCount", Types.INTEGER },
			{ "updateInterestsStatus", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSocialProfile (uuid_ VARCHAR(75) null,userId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),createDate DATETIME null,modifiedDate DATETIME null,userType VARCHAR(75) null,memberPackage BIGINT(20),userRegistrationStatus VARCHAR(75) null,classPK BIGINT(20),location VARCHAR(75) null,profileViewCount INTEGER,interest LONGTEXT null,honors LONGTEXT null,groupAssociation LONGTEXT null,skillsQualification LONGTEXT null,title VARCHAR(1000) null,trainingEducation LONGTEXT null,about LONGTEXT null,documentId BIGINT(20),userInfo LONGTEXT null,status INTEGER,twitterId VARCHAR(1024) null,linkedinId VARCHAR(1024) null,yahooId VARCHAR(1024) null,googleId VARCHAR(1024) null,facebookAuthToken LONGTEXT null,openIdAuthToken LONGTEXT null,twitterAuthToken LONGTEXT null,linkedinAuthToken LONGTEXT null,yahooAuthToken LONGTEXT null,googleAuthToken LONGTEXT null,facebookAuthSecret LONGTEXT null,openIdAuthSecret LONGTEXT null,twitterAuthSecret LONGTEXT null,linkedinAuthSecret LONGTEXT null,yahooAuthSecret LONGTEXT null,googleAuthSecret LONGTEXT null,loginCount INTEGER,updateInterestsStatus INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SPSocialProfile";
	public static final String ORDER_BY_JPQL = " ORDER BY socialProfile.userId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSocialProfile.userId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfile"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GOOGLEID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long LINKEDINID_COLUMN_BITMASK = 8L;
	public static long MEMBERPACKAGE_COLUMN_BITMASK = 16L;
	public static long TWITTERID_COLUMN_BITMASK = 32L;
	public static long USERID_COLUMN_BITMASK = 64L;
	public static long USERREGISTRATIONSTATUS_COLUMN_BITMASK = 128L;
	public static long USERTYPE_COLUMN_BITMASK = 256L;
	public static long UUID_COLUMN_BITMASK = 512L;
	public static long YAHOOID_COLUMN_BITMASK = 1024L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SocialProfile toModel(SocialProfileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SocialProfile model = new SocialProfileImpl();

		model.setUuid(soapModel.getUuid());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setUserType(soapModel.getUserType());
		model.setMemberPackage(soapModel.getMemberPackage());
		model.setUserRegistrationStatus(soapModel.getUserRegistrationStatus());
		model.setClassPK(soapModel.getClassPK());
		model.setLocation(soapModel.getLocation());
		model.setProfileViewCount(soapModel.getProfileViewCount());
		model.setInterest(soapModel.getInterest());
		model.setHonors(soapModel.getHonors());
		model.setGroupAssociation(soapModel.getGroupAssociation());
		model.setSkillsQualification(soapModel.getSkillsQualification());
		model.setTitle(soapModel.getTitle());
		model.setTrainingEducation(soapModel.getTrainingEducation());
		model.setAbout(soapModel.getAbout());
		model.setDocumentId(soapModel.getDocumentId());
		model.setUserInfo(soapModel.getUserInfo());
		model.setStatus(soapModel.getStatus());
		model.setTwitterId(soapModel.getTwitterId());
		model.setLinkedinId(soapModel.getLinkedinId());
		model.setYahooId(soapModel.getYahooId());
		model.setGoogleId(soapModel.getGoogleId());
		model.setFacebookAuthToken(soapModel.getFacebookAuthToken());
		model.setOpenIdAuthToken(soapModel.getOpenIdAuthToken());
		model.setTwitterAuthToken(soapModel.getTwitterAuthToken());
		model.setLinkedinAuthToken(soapModel.getLinkedinAuthToken());
		model.setYahooAuthToken(soapModel.getYahooAuthToken());
		model.setGoogleAuthToken(soapModel.getGoogleAuthToken());
		model.setFacebookAuthSecret(soapModel.getFacebookAuthSecret());
		model.setOpenIdAuthSecret(soapModel.getOpenIdAuthSecret());
		model.setTwitterAuthSecret(soapModel.getTwitterAuthSecret());
		model.setLinkedinAuthSecret(soapModel.getLinkedinAuthSecret());
		model.setYahooAuthSecret(soapModel.getYahooAuthSecret());
		model.setGoogleAuthSecret(soapModel.getGoogleAuthSecret());
		model.setLoginCount(soapModel.getLoginCount());
		model.setUpdateInterestsStatus(soapModel.getUpdateInterestsStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SocialProfile> toModels(SocialProfileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SocialProfile> models = new ArrayList<SocialProfile>(soapModels.length);

		for (SocialProfileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spsocialprofile.model.SocialProfile"));

	public SocialProfileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _userId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setUserId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _userId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SocialProfile.class;
	}

	@Override
	public String getModelClassName() {
		return SocialProfile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userType", getUserType());
		attributes.put("memberPackage", getMemberPackage());
		attributes.put("userRegistrationStatus", getUserRegistrationStatus());
		attributes.put("classPK", getClassPK());
		attributes.put("location", getLocation());
		attributes.put("profileViewCount", getProfileViewCount());
		attributes.put("interest", getInterest());
		attributes.put("honors", getHonors());
		attributes.put("groupAssociation", getGroupAssociation());
		attributes.put("skillsQualification", getSkillsQualification());
		attributes.put("title", getTitle());
		attributes.put("trainingEducation", getTrainingEducation());
		attributes.put("about", getAbout());
		attributes.put("documentId", getDocumentId());
		attributes.put("userInfo", getUserInfo());
		attributes.put("status", getStatus());
		attributes.put("twitterId", getTwitterId());
		attributes.put("linkedinId", getLinkedinId());
		attributes.put("yahooId", getYahooId());
		attributes.put("googleId", getGoogleId());
		attributes.put("facebookAuthToken", getFacebookAuthToken());
		attributes.put("openIdAuthToken", getOpenIdAuthToken());
		attributes.put("twitterAuthToken", getTwitterAuthToken());
		attributes.put("linkedinAuthToken", getLinkedinAuthToken());
		attributes.put("yahooAuthToken", getYahooAuthToken());
		attributes.put("googleAuthToken", getGoogleAuthToken());
		attributes.put("facebookAuthSecret", getFacebookAuthSecret());
		attributes.put("openIdAuthSecret", getOpenIdAuthSecret());
		attributes.put("twitterAuthSecret", getTwitterAuthSecret());
		attributes.put("linkedinAuthSecret", getLinkedinAuthSecret());
		attributes.put("yahooAuthSecret", getYahooAuthSecret());
		attributes.put("googleAuthSecret", getGoogleAuthSecret());
		attributes.put("loginCount", getLoginCount());
		attributes.put("updateInterestsStatus", getUpdateInterestsStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String userType = (String)attributes.get("userType");

		if (userType != null) {
			setUserType(userType);
		}

		Long memberPackage = (Long)attributes.get("memberPackage");

		if (memberPackage != null) {
			setMemberPackage(memberPackage);
		}

		String userRegistrationStatus = (String)attributes.get(
				"userRegistrationStatus");

		if (userRegistrationStatus != null) {
			setUserRegistrationStatus(userRegistrationStatus);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String location = (String)attributes.get("location");

		if (location != null) {
			setLocation(location);
		}

		Integer profileViewCount = (Integer)attributes.get("profileViewCount");

		if (profileViewCount != null) {
			setProfileViewCount(profileViewCount);
		}

		String interest = (String)attributes.get("interest");

		if (interest != null) {
			setInterest(interest);
		}

		String honors = (String)attributes.get("honors");

		if (honors != null) {
			setHonors(honors);
		}

		String groupAssociation = (String)attributes.get("groupAssociation");

		if (groupAssociation != null) {
			setGroupAssociation(groupAssociation);
		}

		String skillsQualification = (String)attributes.get(
				"skillsQualification");

		if (skillsQualification != null) {
			setSkillsQualification(skillsQualification);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String trainingEducation = (String)attributes.get("trainingEducation");

		if (trainingEducation != null) {
			setTrainingEducation(trainingEducation);
		}

		String about = (String)attributes.get("about");

		if (about != null) {
			setAbout(about);
		}

		Long documentId = (Long)attributes.get("documentId");

		if (documentId != null) {
			setDocumentId(documentId);
		}

		String userInfo = (String)attributes.get("userInfo");

		if (userInfo != null) {
			setUserInfo(userInfo);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String twitterId = (String)attributes.get("twitterId");

		if (twitterId != null) {
			setTwitterId(twitterId);
		}

		String linkedinId = (String)attributes.get("linkedinId");

		if (linkedinId != null) {
			setLinkedinId(linkedinId);
		}

		String yahooId = (String)attributes.get("yahooId");

		if (yahooId != null) {
			setYahooId(yahooId);
		}

		String googleId = (String)attributes.get("googleId");

		if (googleId != null) {
			setGoogleId(googleId);
		}

		String facebookAuthToken = (String)attributes.get("facebookAuthToken");

		if (facebookAuthToken != null) {
			setFacebookAuthToken(facebookAuthToken);
		}

		String openIdAuthToken = (String)attributes.get("openIdAuthToken");

		if (openIdAuthToken != null) {
			setOpenIdAuthToken(openIdAuthToken);
		}

		String twitterAuthToken = (String)attributes.get("twitterAuthToken");

		if (twitterAuthToken != null) {
			setTwitterAuthToken(twitterAuthToken);
		}

		String linkedinAuthToken = (String)attributes.get("linkedinAuthToken");

		if (linkedinAuthToken != null) {
			setLinkedinAuthToken(linkedinAuthToken);
		}

		String yahooAuthToken = (String)attributes.get("yahooAuthToken");

		if (yahooAuthToken != null) {
			setYahooAuthToken(yahooAuthToken);
		}

		String googleAuthToken = (String)attributes.get("googleAuthToken");

		if (googleAuthToken != null) {
			setGoogleAuthToken(googleAuthToken);
		}

		String facebookAuthSecret = (String)attributes.get("facebookAuthSecret");

		if (facebookAuthSecret != null) {
			setFacebookAuthSecret(facebookAuthSecret);
		}

		String openIdAuthSecret = (String)attributes.get("openIdAuthSecret");

		if (openIdAuthSecret != null) {
			setOpenIdAuthSecret(openIdAuthSecret);
		}

		String twitterAuthSecret = (String)attributes.get("twitterAuthSecret");

		if (twitterAuthSecret != null) {
			setTwitterAuthSecret(twitterAuthSecret);
		}

		String linkedinAuthSecret = (String)attributes.get("linkedinAuthSecret");

		if (linkedinAuthSecret != null) {
			setLinkedinAuthSecret(linkedinAuthSecret);
		}

		String yahooAuthSecret = (String)attributes.get("yahooAuthSecret");

		if (yahooAuthSecret != null) {
			setYahooAuthSecret(yahooAuthSecret);
		}

		String googleAuthSecret = (String)attributes.get("googleAuthSecret");

		if (googleAuthSecret != null) {
			setGoogleAuthSecret(googleAuthSecret);
		}

		Integer loginCount = (Integer)attributes.get("loginCount");

		if (loginCount != null) {
			setLoginCount(loginCount);
		}

		Integer updateInterestsStatus = (Integer)attributes.get(
				"updateInterestsStatus");

		if (updateInterestsStatus != null) {
			setUpdateInterestsStatus(updateInterestsStatus);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getUserType() {
		if (_userType == null) {
			return StringPool.BLANK;
		}
		else {
			return _userType;
		}
	}

	@Override
	public void setUserType(String userType) {
		_columnBitmask |= USERTYPE_COLUMN_BITMASK;

		if (_originalUserType == null) {
			_originalUserType = _userType;
		}

		_userType = userType;
	}

	public String getOriginalUserType() {
		return GetterUtil.getString(_originalUserType);
	}

	@JSON
	@Override
	public long getMemberPackage() {
		return _memberPackage;
	}

	@Override
	public void setMemberPackage(long memberPackage) {
		_columnBitmask |= MEMBERPACKAGE_COLUMN_BITMASK;

		if (!_setOriginalMemberPackage) {
			_setOriginalMemberPackage = true;

			_originalMemberPackage = _memberPackage;
		}

		_memberPackage = memberPackage;
	}

	public long getOriginalMemberPackage() {
		return _originalMemberPackage;
	}

	@JSON
	@Override
	public String getUserRegistrationStatus() {
		if (_userRegistrationStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _userRegistrationStatus;
		}
	}

	@Override
	public void setUserRegistrationStatus(String userRegistrationStatus) {
		_columnBitmask |= USERREGISTRATIONSTATUS_COLUMN_BITMASK;

		if (_originalUserRegistrationStatus == null) {
			_originalUserRegistrationStatus = _userRegistrationStatus;
		}

		_userRegistrationStatus = userRegistrationStatus;
	}

	public String getOriginalUserRegistrationStatus() {
		return GetterUtil.getString(_originalUserRegistrationStatus);
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_classPK = classPK;
	}

	@JSON
	@Override
	public String getLocation() {
		if (_location == null) {
			return StringPool.BLANK;
		}
		else {
			return _location;
		}
	}

	@Override
	public void setLocation(String location) {
		_location = location;
	}

	@JSON
	@Override
	public int getProfileViewCount() {
		return _profileViewCount;
	}

	@Override
	public void setProfileViewCount(int profileViewCount) {
		_profileViewCount = profileViewCount;
	}

	@JSON
	@Override
	public String getInterest() {
		if (_interest == null) {
			return StringPool.BLANK;
		}
		else {
			return _interest;
		}
	}

	@Override
	public void setInterest(String interest) {
		_interest = interest;
	}

	@JSON
	@Override
	public String getHonors() {
		if (_honors == null) {
			return StringPool.BLANK;
		}
		else {
			return _honors;
		}
	}

	@Override
	public void setHonors(String honors) {
		_honors = honors;
	}

	@JSON
	@Override
	public String getGroupAssociation() {
		if (_groupAssociation == null) {
			return StringPool.BLANK;
		}
		else {
			return _groupAssociation;
		}
	}

	@Override
	public void setGroupAssociation(String groupAssociation) {
		_groupAssociation = groupAssociation;
	}

	@JSON
	@Override
	public String getSkillsQualification() {
		if (_skillsQualification == null) {
			return StringPool.BLANK;
		}
		else {
			return _skillsQualification;
		}
	}

	@Override
	public void setSkillsQualification(String skillsQualification) {
		_skillsQualification = skillsQualification;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@JSON
	@Override
	public String getTrainingEducation() {
		if (_trainingEducation == null) {
			return StringPool.BLANK;
		}
		else {
			return _trainingEducation;
		}
	}

	@Override
	public void setTrainingEducation(String trainingEducation) {
		_trainingEducation = trainingEducation;
	}

	@JSON
	@Override
	public String getAbout() {
		if (_about == null) {
			return StringPool.BLANK;
		}
		else {
			return _about;
		}
	}

	@Override
	public void setAbout(String about) {
		_about = about;
	}

	@JSON
	@Override
	public long getDocumentId() {
		return _documentId;
	}

	@Override
	public void setDocumentId(long documentId) {
		_documentId = documentId;
	}

	@JSON
	@Override
	public String getUserInfo() {
		if (_userInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _userInfo;
		}
	}

	@Override
	public void setUserInfo(String userInfo) {
		_userInfo = userInfo;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	@Override
	public String getTwitterId() {
		if (_twitterId == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitterId;
		}
	}

	@Override
	public void setTwitterId(String twitterId) {
		_columnBitmask |= TWITTERID_COLUMN_BITMASK;

		if (_originalTwitterId == null) {
			_originalTwitterId = _twitterId;
		}

		_twitterId = twitterId;
	}

	public String getOriginalTwitterId() {
		return GetterUtil.getString(_originalTwitterId);
	}

	@JSON
	@Override
	public String getLinkedinId() {
		if (_linkedinId == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkedinId;
		}
	}

	@Override
	public void setLinkedinId(String linkedinId) {
		_columnBitmask |= LINKEDINID_COLUMN_BITMASK;

		if (_originalLinkedinId == null) {
			_originalLinkedinId = _linkedinId;
		}

		_linkedinId = linkedinId;
	}

	public String getOriginalLinkedinId() {
		return GetterUtil.getString(_originalLinkedinId);
	}

	@JSON
	@Override
	public String getYahooId() {
		if (_yahooId == null) {
			return StringPool.BLANK;
		}
		else {
			return _yahooId;
		}
	}

	@Override
	public void setYahooId(String yahooId) {
		_columnBitmask |= YAHOOID_COLUMN_BITMASK;

		if (_originalYahooId == null) {
			_originalYahooId = _yahooId;
		}

		_yahooId = yahooId;
	}

	public String getOriginalYahooId() {
		return GetterUtil.getString(_originalYahooId);
	}

	@JSON
	@Override
	public String getGoogleId() {
		if (_googleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _googleId;
		}
	}

	@Override
	public void setGoogleId(String googleId) {
		_columnBitmask |= GOOGLEID_COLUMN_BITMASK;

		if (_originalGoogleId == null) {
			_originalGoogleId = _googleId;
		}

		_googleId = googleId;
	}

	public String getOriginalGoogleId() {
		return GetterUtil.getString(_originalGoogleId);
	}

	@JSON
	@Override
	public String getFacebookAuthToken() {
		if (_facebookAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _facebookAuthToken;
		}
	}

	@Override
	public void setFacebookAuthToken(String facebookAuthToken) {
		_facebookAuthToken = facebookAuthToken;
	}

	@JSON
	@Override
	public String getOpenIdAuthToken() {
		if (_openIdAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _openIdAuthToken;
		}
	}

	@Override
	public void setOpenIdAuthToken(String openIdAuthToken) {
		_openIdAuthToken = openIdAuthToken;
	}

	@JSON
	@Override
	public String getTwitterAuthToken() {
		if (_twitterAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitterAuthToken;
		}
	}

	@Override
	public void setTwitterAuthToken(String twitterAuthToken) {
		_twitterAuthToken = twitterAuthToken;
	}

	@JSON
	@Override
	public String getLinkedinAuthToken() {
		if (_linkedinAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkedinAuthToken;
		}
	}

	@Override
	public void setLinkedinAuthToken(String linkedinAuthToken) {
		_linkedinAuthToken = linkedinAuthToken;
	}

	@JSON
	@Override
	public String getYahooAuthToken() {
		if (_yahooAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _yahooAuthToken;
		}
	}

	@Override
	public void setYahooAuthToken(String yahooAuthToken) {
		_yahooAuthToken = yahooAuthToken;
	}

	@JSON
	@Override
	public String getGoogleAuthToken() {
		if (_googleAuthToken == null) {
			return StringPool.BLANK;
		}
		else {
			return _googleAuthToken;
		}
	}

	@Override
	public void setGoogleAuthToken(String googleAuthToken) {
		_googleAuthToken = googleAuthToken;
	}

	@JSON
	@Override
	public String getFacebookAuthSecret() {
		if (_facebookAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _facebookAuthSecret;
		}
	}

	@Override
	public void setFacebookAuthSecret(String facebookAuthSecret) {
		_facebookAuthSecret = facebookAuthSecret;
	}

	@JSON
	@Override
	public String getOpenIdAuthSecret() {
		if (_openIdAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _openIdAuthSecret;
		}
	}

	@Override
	public void setOpenIdAuthSecret(String openIdAuthSecret) {
		_openIdAuthSecret = openIdAuthSecret;
	}

	@JSON
	@Override
	public String getTwitterAuthSecret() {
		if (_twitterAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitterAuthSecret;
		}
	}

	@Override
	public void setTwitterAuthSecret(String twitterAuthSecret) {
		_twitterAuthSecret = twitterAuthSecret;
	}

	@JSON
	@Override
	public String getLinkedinAuthSecret() {
		if (_linkedinAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkedinAuthSecret;
		}
	}

	@Override
	public void setLinkedinAuthSecret(String linkedinAuthSecret) {
		_linkedinAuthSecret = linkedinAuthSecret;
	}

	@JSON
	@Override
	public String getYahooAuthSecret() {
		if (_yahooAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _yahooAuthSecret;
		}
	}

	@Override
	public void setYahooAuthSecret(String yahooAuthSecret) {
		_yahooAuthSecret = yahooAuthSecret;
	}

	@JSON
	@Override
	public String getGoogleAuthSecret() {
		if (_googleAuthSecret == null) {
			return StringPool.BLANK;
		}
		else {
			return _googleAuthSecret;
		}
	}

	@Override
	public void setGoogleAuthSecret(String googleAuthSecret) {
		_googleAuthSecret = googleAuthSecret;
	}

	@JSON
	@Override
	public int getLoginCount() {
		return _loginCount;
	}

	@Override
	public void setLoginCount(int loginCount) {
		_loginCount = loginCount;
	}

	@JSON
	@Override
	public int getUpdateInterestsStatus() {
		return _updateInterestsStatus;
	}

	@Override
	public void setUpdateInterestsStatus(int updateInterestsStatus) {
		_updateInterestsStatus = updateInterestsStatus;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SocialProfile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SocialProfile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SocialProfile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SocialProfile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SocialProfileImpl socialProfileImpl = new SocialProfileImpl();

		socialProfileImpl.setUuid(getUuid());
		socialProfileImpl.setUserId(getUserId());
		socialProfileImpl.setGroupId(getGroupId());
		socialProfileImpl.setCompanyId(getCompanyId());
		socialProfileImpl.setCreateDate(getCreateDate());
		socialProfileImpl.setModifiedDate(getModifiedDate());
		socialProfileImpl.setUserType(getUserType());
		socialProfileImpl.setMemberPackage(getMemberPackage());
		socialProfileImpl.setUserRegistrationStatus(getUserRegistrationStatus());
		socialProfileImpl.setClassPK(getClassPK());
		socialProfileImpl.setLocation(getLocation());
		socialProfileImpl.setProfileViewCount(getProfileViewCount());
		socialProfileImpl.setInterest(getInterest());
		socialProfileImpl.setHonors(getHonors());
		socialProfileImpl.setGroupAssociation(getGroupAssociation());
		socialProfileImpl.setSkillsQualification(getSkillsQualification());
		socialProfileImpl.setTitle(getTitle());
		socialProfileImpl.setTrainingEducation(getTrainingEducation());
		socialProfileImpl.setAbout(getAbout());
		socialProfileImpl.setDocumentId(getDocumentId());
		socialProfileImpl.setUserInfo(getUserInfo());
		socialProfileImpl.setStatus(getStatus());
		socialProfileImpl.setTwitterId(getTwitterId());
		socialProfileImpl.setLinkedinId(getLinkedinId());
		socialProfileImpl.setYahooId(getYahooId());
		socialProfileImpl.setGoogleId(getGoogleId());
		socialProfileImpl.setFacebookAuthToken(getFacebookAuthToken());
		socialProfileImpl.setOpenIdAuthToken(getOpenIdAuthToken());
		socialProfileImpl.setTwitterAuthToken(getTwitterAuthToken());
		socialProfileImpl.setLinkedinAuthToken(getLinkedinAuthToken());
		socialProfileImpl.setYahooAuthToken(getYahooAuthToken());
		socialProfileImpl.setGoogleAuthToken(getGoogleAuthToken());
		socialProfileImpl.setFacebookAuthSecret(getFacebookAuthSecret());
		socialProfileImpl.setOpenIdAuthSecret(getOpenIdAuthSecret());
		socialProfileImpl.setTwitterAuthSecret(getTwitterAuthSecret());
		socialProfileImpl.setLinkedinAuthSecret(getLinkedinAuthSecret());
		socialProfileImpl.setYahooAuthSecret(getYahooAuthSecret());
		socialProfileImpl.setGoogleAuthSecret(getGoogleAuthSecret());
		socialProfileImpl.setLoginCount(getLoginCount());
		socialProfileImpl.setUpdateInterestsStatus(getUpdateInterestsStatus());

		socialProfileImpl.resetOriginalValues();

		return socialProfileImpl;
	}

	@Override
	public int compareTo(SocialProfile socialProfile) {
		long primaryKey = socialProfile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SocialProfile)) {
			return false;
		}

		SocialProfile socialProfile = (SocialProfile)obj;

		long primaryKey = socialProfile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SocialProfileModelImpl socialProfileModelImpl = this;

		socialProfileModelImpl._originalUuid = socialProfileModelImpl._uuid;

		socialProfileModelImpl._originalUserId = socialProfileModelImpl._userId;

		socialProfileModelImpl._setOriginalUserId = false;

		socialProfileModelImpl._originalGroupId = socialProfileModelImpl._groupId;

		socialProfileModelImpl._setOriginalGroupId = false;

		socialProfileModelImpl._originalCompanyId = socialProfileModelImpl._companyId;

		socialProfileModelImpl._setOriginalCompanyId = false;

		socialProfileModelImpl._originalUserType = socialProfileModelImpl._userType;

		socialProfileModelImpl._originalMemberPackage = socialProfileModelImpl._memberPackage;

		socialProfileModelImpl._setOriginalMemberPackage = false;

		socialProfileModelImpl._originalUserRegistrationStatus = socialProfileModelImpl._userRegistrationStatus;

		socialProfileModelImpl._originalTwitterId = socialProfileModelImpl._twitterId;

		socialProfileModelImpl._originalLinkedinId = socialProfileModelImpl._linkedinId;

		socialProfileModelImpl._originalYahooId = socialProfileModelImpl._yahooId;

		socialProfileModelImpl._originalGoogleId = socialProfileModelImpl._googleId;

		socialProfileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SocialProfile> toCacheModel() {
		SocialProfileCacheModel socialProfileCacheModel = new SocialProfileCacheModel();

		socialProfileCacheModel.uuid = getUuid();

		String uuid = socialProfileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			socialProfileCacheModel.uuid = null;
		}

		socialProfileCacheModel.userId = getUserId();

		socialProfileCacheModel.groupId = getGroupId();

		socialProfileCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			socialProfileCacheModel.createDate = createDate.getTime();
		}
		else {
			socialProfileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			socialProfileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			socialProfileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		socialProfileCacheModel.userType = getUserType();

		String userType = socialProfileCacheModel.userType;

		if ((userType != null) && (userType.length() == 0)) {
			socialProfileCacheModel.userType = null;
		}

		socialProfileCacheModel.memberPackage = getMemberPackage();

		socialProfileCacheModel.userRegistrationStatus = getUserRegistrationStatus();

		String userRegistrationStatus = socialProfileCacheModel.userRegistrationStatus;

		if ((userRegistrationStatus != null) &&
				(userRegistrationStatus.length() == 0)) {
			socialProfileCacheModel.userRegistrationStatus = null;
		}

		socialProfileCacheModel.classPK = getClassPK();

		socialProfileCacheModel.location = getLocation();

		String location = socialProfileCacheModel.location;

		if ((location != null) && (location.length() == 0)) {
			socialProfileCacheModel.location = null;
		}

		socialProfileCacheModel.profileViewCount = getProfileViewCount();

		socialProfileCacheModel.interest = getInterest();

		String interest = socialProfileCacheModel.interest;

		if ((interest != null) && (interest.length() == 0)) {
			socialProfileCacheModel.interest = null;
		}

		socialProfileCacheModel.honors = getHonors();

		String honors = socialProfileCacheModel.honors;

		if ((honors != null) && (honors.length() == 0)) {
			socialProfileCacheModel.honors = null;
		}

		socialProfileCacheModel.groupAssociation = getGroupAssociation();

		String groupAssociation = socialProfileCacheModel.groupAssociation;

		if ((groupAssociation != null) && (groupAssociation.length() == 0)) {
			socialProfileCacheModel.groupAssociation = null;
		}

		socialProfileCacheModel.skillsQualification = getSkillsQualification();

		String skillsQualification = socialProfileCacheModel.skillsQualification;

		if ((skillsQualification != null) &&
				(skillsQualification.length() == 0)) {
			socialProfileCacheModel.skillsQualification = null;
		}

		socialProfileCacheModel.title = getTitle();

		String title = socialProfileCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			socialProfileCacheModel.title = null;
		}

		socialProfileCacheModel.trainingEducation = getTrainingEducation();

		String trainingEducation = socialProfileCacheModel.trainingEducation;

		if ((trainingEducation != null) && (trainingEducation.length() == 0)) {
			socialProfileCacheModel.trainingEducation = null;
		}

		socialProfileCacheModel.about = getAbout();

		String about = socialProfileCacheModel.about;

		if ((about != null) && (about.length() == 0)) {
			socialProfileCacheModel.about = null;
		}

		socialProfileCacheModel.documentId = getDocumentId();

		socialProfileCacheModel.userInfo = getUserInfo();

		String userInfo = socialProfileCacheModel.userInfo;

		if ((userInfo != null) && (userInfo.length() == 0)) {
			socialProfileCacheModel.userInfo = null;
		}

		socialProfileCacheModel.status = getStatus();

		socialProfileCacheModel.twitterId = getTwitterId();

		String twitterId = socialProfileCacheModel.twitterId;

		if ((twitterId != null) && (twitterId.length() == 0)) {
			socialProfileCacheModel.twitterId = null;
		}

		socialProfileCacheModel.linkedinId = getLinkedinId();

		String linkedinId = socialProfileCacheModel.linkedinId;

		if ((linkedinId != null) && (linkedinId.length() == 0)) {
			socialProfileCacheModel.linkedinId = null;
		}

		socialProfileCacheModel.yahooId = getYahooId();

		String yahooId = socialProfileCacheModel.yahooId;

		if ((yahooId != null) && (yahooId.length() == 0)) {
			socialProfileCacheModel.yahooId = null;
		}

		socialProfileCacheModel.googleId = getGoogleId();

		String googleId = socialProfileCacheModel.googleId;

		if ((googleId != null) && (googleId.length() == 0)) {
			socialProfileCacheModel.googleId = null;
		}

		socialProfileCacheModel.facebookAuthToken = getFacebookAuthToken();

		String facebookAuthToken = socialProfileCacheModel.facebookAuthToken;

		if ((facebookAuthToken != null) && (facebookAuthToken.length() == 0)) {
			socialProfileCacheModel.facebookAuthToken = null;
		}

		socialProfileCacheModel.openIdAuthToken = getOpenIdAuthToken();

		String openIdAuthToken = socialProfileCacheModel.openIdAuthToken;

		if ((openIdAuthToken != null) && (openIdAuthToken.length() == 0)) {
			socialProfileCacheModel.openIdAuthToken = null;
		}

		socialProfileCacheModel.twitterAuthToken = getTwitterAuthToken();

		String twitterAuthToken = socialProfileCacheModel.twitterAuthToken;

		if ((twitterAuthToken != null) && (twitterAuthToken.length() == 0)) {
			socialProfileCacheModel.twitterAuthToken = null;
		}

		socialProfileCacheModel.linkedinAuthToken = getLinkedinAuthToken();

		String linkedinAuthToken = socialProfileCacheModel.linkedinAuthToken;

		if ((linkedinAuthToken != null) && (linkedinAuthToken.length() == 0)) {
			socialProfileCacheModel.linkedinAuthToken = null;
		}

		socialProfileCacheModel.yahooAuthToken = getYahooAuthToken();

		String yahooAuthToken = socialProfileCacheModel.yahooAuthToken;

		if ((yahooAuthToken != null) && (yahooAuthToken.length() == 0)) {
			socialProfileCacheModel.yahooAuthToken = null;
		}

		socialProfileCacheModel.googleAuthToken = getGoogleAuthToken();

		String googleAuthToken = socialProfileCacheModel.googleAuthToken;

		if ((googleAuthToken != null) && (googleAuthToken.length() == 0)) {
			socialProfileCacheModel.googleAuthToken = null;
		}

		socialProfileCacheModel.facebookAuthSecret = getFacebookAuthSecret();

		String facebookAuthSecret = socialProfileCacheModel.facebookAuthSecret;

		if ((facebookAuthSecret != null) && (facebookAuthSecret.length() == 0)) {
			socialProfileCacheModel.facebookAuthSecret = null;
		}

		socialProfileCacheModel.openIdAuthSecret = getOpenIdAuthSecret();

		String openIdAuthSecret = socialProfileCacheModel.openIdAuthSecret;

		if ((openIdAuthSecret != null) && (openIdAuthSecret.length() == 0)) {
			socialProfileCacheModel.openIdAuthSecret = null;
		}

		socialProfileCacheModel.twitterAuthSecret = getTwitterAuthSecret();

		String twitterAuthSecret = socialProfileCacheModel.twitterAuthSecret;

		if ((twitterAuthSecret != null) && (twitterAuthSecret.length() == 0)) {
			socialProfileCacheModel.twitterAuthSecret = null;
		}

		socialProfileCacheModel.linkedinAuthSecret = getLinkedinAuthSecret();

		String linkedinAuthSecret = socialProfileCacheModel.linkedinAuthSecret;

		if ((linkedinAuthSecret != null) && (linkedinAuthSecret.length() == 0)) {
			socialProfileCacheModel.linkedinAuthSecret = null;
		}

		socialProfileCacheModel.yahooAuthSecret = getYahooAuthSecret();

		String yahooAuthSecret = socialProfileCacheModel.yahooAuthSecret;

		if ((yahooAuthSecret != null) && (yahooAuthSecret.length() == 0)) {
			socialProfileCacheModel.yahooAuthSecret = null;
		}

		socialProfileCacheModel.googleAuthSecret = getGoogleAuthSecret();

		String googleAuthSecret = socialProfileCacheModel.googleAuthSecret;

		if ((googleAuthSecret != null) && (googleAuthSecret.length() == 0)) {
			socialProfileCacheModel.googleAuthSecret = null;
		}

		socialProfileCacheModel.loginCount = getLoginCount();

		socialProfileCacheModel.updateInterestsStatus = getUpdateInterestsStatus();

		return socialProfileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(81);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userType=");
		sb.append(getUserType());
		sb.append(", memberPackage=");
		sb.append(getMemberPackage());
		sb.append(", userRegistrationStatus=");
		sb.append(getUserRegistrationStatus());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", location=");
		sb.append(getLocation());
		sb.append(", profileViewCount=");
		sb.append(getProfileViewCount());
		sb.append(", interest=");
		sb.append(getInterest());
		sb.append(", honors=");
		sb.append(getHonors());
		sb.append(", groupAssociation=");
		sb.append(getGroupAssociation());
		sb.append(", skillsQualification=");
		sb.append(getSkillsQualification());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", trainingEducation=");
		sb.append(getTrainingEducation());
		sb.append(", about=");
		sb.append(getAbout());
		sb.append(", documentId=");
		sb.append(getDocumentId());
		sb.append(", userInfo=");
		sb.append(getUserInfo());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", twitterId=");
		sb.append(getTwitterId());
		sb.append(", linkedinId=");
		sb.append(getLinkedinId());
		sb.append(", yahooId=");
		sb.append(getYahooId());
		sb.append(", googleId=");
		sb.append(getGoogleId());
		sb.append(", facebookAuthToken=");
		sb.append(getFacebookAuthToken());
		sb.append(", openIdAuthToken=");
		sb.append(getOpenIdAuthToken());
		sb.append(", twitterAuthToken=");
		sb.append(getTwitterAuthToken());
		sb.append(", linkedinAuthToken=");
		sb.append(getLinkedinAuthToken());
		sb.append(", yahooAuthToken=");
		sb.append(getYahooAuthToken());
		sb.append(", googleAuthToken=");
		sb.append(getGoogleAuthToken());
		sb.append(", facebookAuthSecret=");
		sb.append(getFacebookAuthSecret());
		sb.append(", openIdAuthSecret=");
		sb.append(getOpenIdAuthSecret());
		sb.append(", twitterAuthSecret=");
		sb.append(getTwitterAuthSecret());
		sb.append(", linkedinAuthSecret=");
		sb.append(getLinkedinAuthSecret());
		sb.append(", yahooAuthSecret=");
		sb.append(getYahooAuthSecret());
		sb.append(", googleAuthSecret=");
		sb.append(getGoogleAuthSecret());
		sb.append(", loginCount=");
		sb.append(getLoginCount());
		sb.append(", updateInterestsStatus=");
		sb.append(getUpdateInterestsStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(124);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spsocialprofile.model.SocialProfile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userType</column-name><column-value><![CDATA[");
		sb.append(getUserType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>memberPackage</column-name><column-value><![CDATA[");
		sb.append(getMemberPackage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userRegistrationStatus</column-name><column-value><![CDATA[");
		sb.append(getUserRegistrationStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileViewCount</column-name><column-value><![CDATA[");
		sb.append(getProfileViewCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>interest</column-name><column-value><![CDATA[");
		sb.append(getInterest());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>honors</column-name><column-value><![CDATA[");
		sb.append(getHonors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupAssociation</column-name><column-value><![CDATA[");
		sb.append(getGroupAssociation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>skillsQualification</column-name><column-value><![CDATA[");
		sb.append(getSkillsQualification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trainingEducation</column-name><column-value><![CDATA[");
		sb.append(getTrainingEducation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>about</column-name><column-value><![CDATA[");
		sb.append(getAbout());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentId</column-name><column-value><![CDATA[");
		sb.append(getDocumentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userInfo</column-name><column-value><![CDATA[");
		sb.append(getUserInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitterId</column-name><column-value><![CDATA[");
		sb.append(getTwitterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkedinId</column-name><column-value><![CDATA[");
		sb.append(getLinkedinId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yahooId</column-name><column-value><![CDATA[");
		sb.append(getYahooId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>googleId</column-name><column-value><![CDATA[");
		sb.append(getGoogleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facebookAuthToken</column-name><column-value><![CDATA[");
		sb.append(getFacebookAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>openIdAuthToken</column-name><column-value><![CDATA[");
		sb.append(getOpenIdAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitterAuthToken</column-name><column-value><![CDATA[");
		sb.append(getTwitterAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkedinAuthToken</column-name><column-value><![CDATA[");
		sb.append(getLinkedinAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yahooAuthToken</column-name><column-value><![CDATA[");
		sb.append(getYahooAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>googleAuthToken</column-name><column-value><![CDATA[");
		sb.append(getGoogleAuthToken());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facebookAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getFacebookAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>openIdAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getOpenIdAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitterAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getTwitterAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkedinAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getLinkedinAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yahooAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getYahooAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>googleAuthSecret</column-name><column-value><![CDATA[");
		sb.append(getGoogleAuthSecret());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loginCount</column-name><column-value><![CDATA[");
		sb.append(getLoginCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updateInterestsStatus</column-name><column-value><![CDATA[");
		sb.append(getUpdateInterestsStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SocialProfile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SocialProfile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _userType;
	private String _originalUserType;
	private long _memberPackage;
	private long _originalMemberPackage;
	private boolean _setOriginalMemberPackage;
	private String _userRegistrationStatus;
	private String _originalUserRegistrationStatus;
	private long _classPK;
	private String _location;
	private int _profileViewCount;
	private String _interest;
	private String _honors;
	private String _groupAssociation;
	private String _skillsQualification;
	private String _title;
	private String _trainingEducation;
	private String _about;
	private long _documentId;
	private String _userInfo;
	private int _status;
	private String _twitterId;
	private String _originalTwitterId;
	private String _linkedinId;
	private String _originalLinkedinId;
	private String _yahooId;
	private String _originalYahooId;
	private String _googleId;
	private String _originalGoogleId;
	private String _facebookAuthToken;
	private String _openIdAuthToken;
	private String _twitterAuthToken;
	private String _linkedinAuthToken;
	private String _yahooAuthToken;
	private String _googleAuthToken;
	private String _facebookAuthSecret;
	private String _openIdAuthSecret;
	private String _twitterAuthSecret;
	private String _linkedinAuthSecret;
	private String _yahooAuthSecret;
	private String _googleAuthSecret;
	private int _loginCount;
	private int _updateInterestsStatus;
	private long _columnBitmask;
	private SocialProfile _escapedModel;
}
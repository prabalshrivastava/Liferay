/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.PersonaAttendee;
import com.sambaash.platform.srv.model.PersonaAttendeeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PersonaAttendee service. Represents a row in the &quot;SPPersonaAttendee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.PersonaAttendeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PersonaAttendeeImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see PersonaAttendeeImpl
 * @see com.sambaash.platform.srv.model.PersonaAttendee
 * @see com.sambaash.platform.srv.model.PersonaAttendeeModel
 * @generated
 */
public class PersonaAttendeeModelImpl extends BaseModelImpl<PersonaAttendee>
	implements PersonaAttendeeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a persona attendee model instance should use the {@link com.sambaash.platform.srv.model.PersonaAttendee} interface instead.
	 */
	public static final String TABLE_NAME = "SPPersonaAttendee";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spPersonaAttendeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "description", Types.VARCHAR },
			{ "imageId", Types.BIGINT },
			{ "spPersonaId", Types.BIGINT },
			{ "spCourseId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPPersonaAttendee (spPersonaAttendeeId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,description LONGTEXT null,imageId BIGINT(20),spPersonaId BIGINT(20),spCourseId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPPersonaAttendee";
	public static final String ORDER_BY_JPQL = " ORDER BY personaAttendee.spPersonaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPPersonaAttendee.spPersonaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.PersonaAttendee"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.PersonaAttendee"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.PersonaAttendee"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long SPCOURSEID_COLUMN_BITMASK = 2L;
	public static long SPPERSONAID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.PersonaAttendee"));

	public PersonaAttendeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spPersonaAttendeeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpPersonaAttendeeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spPersonaAttendeeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PersonaAttendee.class;
	}

	@Override
	public String getModelClassName() {
		return PersonaAttendee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spPersonaAttendeeId", getSpPersonaAttendeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("description", getDescription());
		attributes.put("imageId", getImageId());
		attributes.put("spPersonaId", getSpPersonaId());
		attributes.put("spCourseId", getSpCourseId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spPersonaAttendeeId = (Long)attributes.get("spPersonaAttendeeId");

		if (spPersonaAttendeeId != null) {
			setSpPersonaAttendeeId(spPersonaAttendeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long imageId = (Long)attributes.get("imageId");

		if (imageId != null) {
			setImageId(imageId);
		}

		Long spPersonaId = (Long)attributes.get("spPersonaId");

		if (spPersonaId != null) {
			setSpPersonaId(spPersonaId);
		}

		Long spCourseId = (Long)attributes.get("spCourseId");

		if (spCourseId != null) {
			setSpCourseId(spCourseId);
		}
	}

	@Override
	public long getSpPersonaAttendeeId() {
		return _spPersonaAttendeeId;
	}

	@Override
	public void setSpPersonaAttendeeId(long spPersonaAttendeeId) {
		_spPersonaAttendeeId = spPersonaAttendeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		_imageId = imageId;
	}

	@Override
	public long getSpPersonaId() {
		return _spPersonaId;
	}

	@Override
	public void setSpPersonaId(long spPersonaId) {
		_columnBitmask = -1L;

		if (!_setOriginalSpPersonaId) {
			_setOriginalSpPersonaId = true;

			_originalSpPersonaId = _spPersonaId;
		}

		_spPersonaId = spPersonaId;
	}

	public long getOriginalSpPersonaId() {
		return _originalSpPersonaId;
	}

	@Override
	public long getSpCourseId() {
		return _spCourseId;
	}

	@Override
	public void setSpCourseId(long spCourseId) {
		_columnBitmask |= SPCOURSEID_COLUMN_BITMASK;

		if (!_setOriginalSpCourseId) {
			_setOriginalSpCourseId = true;

			_originalSpCourseId = _spCourseId;
		}

		_spCourseId = spCourseId;
	}

	public long getOriginalSpCourseId() {
		return _originalSpCourseId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PersonaAttendee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PersonaAttendee toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PersonaAttendee)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PersonaAttendeeImpl personaAttendeeImpl = new PersonaAttendeeImpl();

		personaAttendeeImpl.setSpPersonaAttendeeId(getSpPersonaAttendeeId());
		personaAttendeeImpl.setGroupId(getGroupId());
		personaAttendeeImpl.setCompanyId(getCompanyId());
		personaAttendeeImpl.setUserId(getUserId());
		personaAttendeeImpl.setUserName(getUserName());
		personaAttendeeImpl.setCreateDate(getCreateDate());
		personaAttendeeImpl.setModifiedDate(getModifiedDate());
		personaAttendeeImpl.setDescription(getDescription());
		personaAttendeeImpl.setImageId(getImageId());
		personaAttendeeImpl.setSpPersonaId(getSpPersonaId());
		personaAttendeeImpl.setSpCourseId(getSpCourseId());

		personaAttendeeImpl.resetOriginalValues();

		return personaAttendeeImpl;
	}

	@Override
	public int compareTo(PersonaAttendee personaAttendee) {
		int value = 0;

		if (getSpPersonaId() < personaAttendee.getSpPersonaId()) {
			value = -1;
		}
		else if (getSpPersonaId() > personaAttendee.getSpPersonaId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PersonaAttendee)) {
			return false;
		}

		PersonaAttendee personaAttendee = (PersonaAttendee)obj;

		long primaryKey = personaAttendee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PersonaAttendeeModelImpl personaAttendeeModelImpl = this;

		personaAttendeeModelImpl._originalGroupId = personaAttendeeModelImpl._groupId;

		personaAttendeeModelImpl._setOriginalGroupId = false;

		personaAttendeeModelImpl._originalSpPersonaId = personaAttendeeModelImpl._spPersonaId;

		personaAttendeeModelImpl._setOriginalSpPersonaId = false;

		personaAttendeeModelImpl._originalSpCourseId = personaAttendeeModelImpl._spCourseId;

		personaAttendeeModelImpl._setOriginalSpCourseId = false;

		personaAttendeeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PersonaAttendee> toCacheModel() {
		PersonaAttendeeCacheModel personaAttendeeCacheModel = new PersonaAttendeeCacheModel();

		personaAttendeeCacheModel.spPersonaAttendeeId = getSpPersonaAttendeeId();

		personaAttendeeCacheModel.groupId = getGroupId();

		personaAttendeeCacheModel.companyId = getCompanyId();

		personaAttendeeCacheModel.userId = getUserId();

		personaAttendeeCacheModel.userName = getUserName();

		String userName = personaAttendeeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			personaAttendeeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			personaAttendeeCacheModel.createDate = createDate.getTime();
		}
		else {
			personaAttendeeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			personaAttendeeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			personaAttendeeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		personaAttendeeCacheModel.description = getDescription();

		String description = personaAttendeeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			personaAttendeeCacheModel.description = null;
		}

		personaAttendeeCacheModel.imageId = getImageId();

		personaAttendeeCacheModel.spPersonaId = getSpPersonaId();

		personaAttendeeCacheModel.spCourseId = getSpCourseId();

		return personaAttendeeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{spPersonaAttendeeId=");
		sb.append(getSpPersonaAttendeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", imageId=");
		sb.append(getImageId());
		sb.append(", spPersonaId=");
		sb.append(getSpPersonaId());
		sb.append(", spCourseId=");
		sb.append(getSpCourseId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.PersonaAttendee");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spPersonaAttendeeId</column-name><column-value><![CDATA[");
		sb.append(getSpPersonaAttendeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageId</column-name><column-value><![CDATA[");
		sb.append(getImageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPersonaId</column-name><column-value><![CDATA[");
		sb.append(getSpPersonaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCourseId</column-name><column-value><![CDATA[");
		sb.append(getSpCourseId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PersonaAttendee.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PersonaAttendee.class
		};
	private long _spPersonaAttendeeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _description;
	private long _imageId;
	private long _spPersonaId;
	private long _originalSpPersonaId;
	private boolean _setOriginalSpPersonaId;
	private long _spCourseId;
	private long _originalSpCourseId;
	private boolean _setOriginalSpCourseId;
	private long _columnBitmask;
	private PersonaAttendee _escapedModel;
}
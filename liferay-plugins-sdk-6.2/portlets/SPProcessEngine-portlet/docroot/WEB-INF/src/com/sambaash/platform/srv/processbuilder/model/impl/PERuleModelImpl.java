/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.processbuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.processbuilder.model.PERule;
import com.sambaash.platform.srv.processbuilder.model.PERuleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PERule service. Represents a row in the &quot;SPPERule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.processbuilder.model.PERuleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PERuleImpl}.
 * </p>
 *
 * @author nareshchebolu
 * @see PERuleImpl
 * @see com.sambaash.platform.srv.processbuilder.model.PERule
 * @see com.sambaash.platform.srv.processbuilder.model.PERuleModel
 * @generated
 */
public class PERuleModelImpl extends BaseModelImpl<PERule>
	implements PERuleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a p e rule model instance should use the {@link com.sambaash.platform.srv.processbuilder.model.PERule} interface instead.
	 */
	public static final String TABLE_NAME = "SPPERule";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spPERuleId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spPERuleSetId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "type_", Types.VARCHAR },
			{ "definition", Types.CLOB },
			{ "sequenceNO", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPPERule (uuid_ VARCHAR(75) null,spPERuleId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spPERuleSetId BIGINT(20),name VARCHAR(75) null,type_ VARCHAR(75) null,definition LONGTEXT null,sequenceNO BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPPERule";
	public static final String ORDER_BY_JPQL = " ORDER BY peRule.spPERuleId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPPERule.spPERuleId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.processbuilder.model.PERule"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.processbuilder.model.PERule"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.processbuilder.model.PERule"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long SPPERULESETID_COLUMN_BITMASK = 4L;
	public static long UUID_COLUMN_BITMASK = 8L;
	public static long SPPERULEID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.processbuilder.model.PERule"));

	public PERuleModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spPERuleId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpPERuleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spPERuleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PERule.class;
	}

	@Override
	public String getModelClassName() {
		return PERule.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spPERuleId", getSpPERuleId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("spPERuleSetId", getSpPERuleSetId());
		attributes.put("name", getName());
		attributes.put("type", getType());
		attributes.put("definition", getDefinition());
		attributes.put("sequenceNO", getSequenceNO());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spPERuleId = (Long)attributes.get("spPERuleId");

		if (spPERuleId != null) {
			setSpPERuleId(spPERuleId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long spPERuleSetId = (Long)attributes.get("spPERuleSetId");

		if (spPERuleSetId != null) {
			setSpPERuleSetId(spPERuleSetId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String definition = (String)attributes.get("definition");

		if (definition != null) {
			setDefinition(definition);
		}

		Long sequenceNO = (Long)attributes.get("sequenceNO");

		if (sequenceNO != null) {
			setSequenceNO(sequenceNO);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpPERuleId() {
		return _spPERuleId;
	}

	@Override
	public void setSpPERuleId(long spPERuleId) {
		_spPERuleId = spPERuleId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSpPERuleSetId() {
		return _spPERuleSetId;
	}

	@Override
	public void setSpPERuleSetId(long spPERuleSetId) {
		_columnBitmask |= SPPERULESETID_COLUMN_BITMASK;

		if (!_setOriginalSpPERuleSetId) {
			_setOriginalSpPERuleSetId = true;

			_originalSpPERuleSetId = _spPERuleSetId;
		}

		_spPERuleSetId = spPERuleSetId;
	}

	public long getOriginalSpPERuleSetId() {
		return _originalSpPERuleSetId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@Override
	public String getDefinition() {
		if (_definition == null) {
			return StringPool.BLANK;
		}
		else {
			return _definition;
		}
	}

	@Override
	public void setDefinition(String definition) {
		_definition = definition;
	}

	@Override
	public long getSequenceNO() {
		return _sequenceNO;
	}

	@Override
	public void setSequenceNO(long sequenceNO) {
		_sequenceNO = sequenceNO;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PERule.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PERule.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PERule toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PERule)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PERuleImpl peRuleImpl = new PERuleImpl();

		peRuleImpl.setUuid(getUuid());
		peRuleImpl.setSpPERuleId(getSpPERuleId());
		peRuleImpl.setGroupId(getGroupId());
		peRuleImpl.setCompanyId(getCompanyId());
		peRuleImpl.setUserId(getUserId());
		peRuleImpl.setUserName(getUserName());
		peRuleImpl.setCreateDate(getCreateDate());
		peRuleImpl.setModifiedDate(getModifiedDate());
		peRuleImpl.setSpPERuleSetId(getSpPERuleSetId());
		peRuleImpl.setName(getName());
		peRuleImpl.setType(getType());
		peRuleImpl.setDefinition(getDefinition());
		peRuleImpl.setSequenceNO(getSequenceNO());

		peRuleImpl.resetOriginalValues();

		return peRuleImpl;
	}

	@Override
	public int compareTo(PERule peRule) {
		long primaryKey = peRule.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PERule)) {
			return false;
		}

		PERule peRule = (PERule)obj;

		long primaryKey = peRule.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PERuleModelImpl peRuleModelImpl = this;

		peRuleModelImpl._originalUuid = peRuleModelImpl._uuid;

		peRuleModelImpl._originalGroupId = peRuleModelImpl._groupId;

		peRuleModelImpl._setOriginalGroupId = false;

		peRuleModelImpl._originalCompanyId = peRuleModelImpl._companyId;

		peRuleModelImpl._setOriginalCompanyId = false;

		peRuleModelImpl._originalSpPERuleSetId = peRuleModelImpl._spPERuleSetId;

		peRuleModelImpl._setOriginalSpPERuleSetId = false;

		peRuleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PERule> toCacheModel() {
		PERuleCacheModel peRuleCacheModel = new PERuleCacheModel();

		peRuleCacheModel.uuid = getUuid();

		String uuid = peRuleCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			peRuleCacheModel.uuid = null;
		}

		peRuleCacheModel.spPERuleId = getSpPERuleId();

		peRuleCacheModel.groupId = getGroupId();

		peRuleCacheModel.companyId = getCompanyId();

		peRuleCacheModel.userId = getUserId();

		peRuleCacheModel.userName = getUserName();

		String userName = peRuleCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			peRuleCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			peRuleCacheModel.createDate = createDate.getTime();
		}
		else {
			peRuleCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			peRuleCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			peRuleCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		peRuleCacheModel.spPERuleSetId = getSpPERuleSetId();

		peRuleCacheModel.name = getName();

		String name = peRuleCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			peRuleCacheModel.name = null;
		}

		peRuleCacheModel.type = getType();

		String type = peRuleCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			peRuleCacheModel.type = null;
		}

		peRuleCacheModel.definition = getDefinition();

		String definition = peRuleCacheModel.definition;

		if ((definition != null) && (definition.length() == 0)) {
			peRuleCacheModel.definition = null;
		}

		peRuleCacheModel.sequenceNO = getSequenceNO();

		return peRuleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spPERuleId=");
		sb.append(getSpPERuleId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", spPERuleSetId=");
		sb.append(getSpPERuleSetId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", definition=");
		sb.append(getDefinition());
		sb.append(", sequenceNO=");
		sb.append(getSequenceNO());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.processbuilder.model.PERule");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPERuleId</column-name><column-value><![CDATA[");
		sb.append(getSpPERuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPERuleSetId</column-name><column-value><![CDATA[");
		sb.append(getSpPERuleSetId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>definition</column-name><column-value><![CDATA[");
		sb.append(getDefinition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceNO</column-name><column-value><![CDATA[");
		sb.append(getSequenceNO());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PERule.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { PERule.class };
	private String _uuid;
	private String _originalUuid;
	private long _spPERuleId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _spPERuleSetId;
	private long _originalSpPERuleSetId;
	private boolean _setOriginalSpPERuleSetId;
	private String _name;
	private String _type;
	private String _definition;
	private long _sequenceNO;
	private long _columnBitmask;
	private PERule _escapedModel;
}
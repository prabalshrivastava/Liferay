/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spshopping.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the SPSellingItem service. Represents a row in the &quot;SPSellingItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sambaash.platform.srv.spshopping.model.impl.SPSellingItemModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sambaash.platform.srv.spshopping.model.impl.SPSellingItemImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPSellingItem
 * @see com.sambaash.platform.srv.spshopping.model.impl.SPSellingItemImpl
 * @see com.sambaash.platform.srv.spshopping.model.impl.SPSellingItemModelImpl
 * @generated
 */
public interface SPSellingItemModel extends BaseModel<SPSellingItem>,
	GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a s p selling item model instance should use the {@link SPSellingItem} interface instead.
	 */

	/**
	 * Returns the primary key of this s p selling item.
	 *
	 * @return the primary key of this s p selling item
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this s p selling item.
	 *
	 * @param primaryKey the primary key of this s p selling item
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the sp selling item ID of this s p selling item.
	 *
	 * @return the sp selling item ID of this s p selling item
	 */
	public long getSpSellingItemId();

	/**
	 * Sets the sp selling item ID of this s p selling item.
	 *
	 * @param spSellingItemId the sp selling item ID of this s p selling item
	 */
	public void setSpSellingItemId(long spSellingItemId);

	/**
	 * Returns the group ID of this s p selling item.
	 *
	 * @return the group ID of this s p selling item
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this s p selling item.
	 *
	 * @param groupId the group ID of this s p selling item
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the title of this s p selling item.
	 *
	 * @return the title of this s p selling item
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this s p selling item.
	 *
	 * @param title the title of this s p selling item
	 */
	public void setTitle(String title);

	/**
	 * Returns the item code of this s p selling item.
	 *
	 * @return the item code of this s p selling item
	 */
	@AutoEscape
	public String getItemCode();

	/**
	 * Sets the item code of this s p selling item.
	 *
	 * @param itemCode the item code of this s p selling item
	 */
	public void setItemCode(String itemCode);

	/**
	 * Returns the entity class pk of this s p selling item.
	 *
	 * @return the entity class pk of this s p selling item
	 */
	public long getEntityClassPk();

	/**
	 * Sets the entity class pk of this s p selling item.
	 *
	 * @param entityClassPk the entity class pk of this s p selling item
	 */
	public void setEntityClassPk(long entityClassPk);

	/**
	 * Returns the entity class name ID of this s p selling item.
	 *
	 * @return the entity class name ID of this s p selling item
	 */
	public long getEntityClassNameId();

	/**
	 * Sets the entity class name ID of this s p selling item.
	 *
	 * @param entityClassNameId the entity class name ID of this s p selling item
	 */
	public void setEntityClassNameId(long entityClassNameId);

	/**
	 * Returns the entity class name of this s p selling item.
	 *
	 * @return the entity class name of this s p selling item
	 */
	@AutoEscape
	public String getEntityClassName();

	/**
	 * Sets the entity class name of this s p selling item.
	 *
	 * @param entityClassName the entity class name of this s p selling item
	 */
	public void setEntityClassName(String entityClassName);

	/**
	 * Returns the short description of this s p selling item.
	 *
	 * @return the short description of this s p selling item
	 */
	@AutoEscape
	public String getShortDescription();

	/**
	 * Sets the short description of this s p selling item.
	 *
	 * @param shortDescription the short description of this s p selling item
	 */
	public void setShortDescription(String shortDescription);

	/**
	 * Returns the long description of this s p selling item.
	 *
	 * @return the long description of this s p selling item
	 */
	@AutoEscape
	public String getLongDescription();

	/**
	 * Sets the long description of this s p selling item.
	 *
	 * @param longDescription the long description of this s p selling item
	 */
	public void setLongDescription(String longDescription);

	/**
	 * Returns the active of this s p selling item.
	 *
	 * @return the active of this s p selling item
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this s p selling item is active.
	 *
	 * @return <code>true</code> if this s p selling item is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this s p selling item is active.
	 *
	 * @param active the active of this s p selling item
	 */
	public void setActive(boolean active);

	/**
	 * Returns the company ID of this s p selling item.
	 *
	 * @return the company ID of this s p selling item
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this s p selling item.
	 *
	 * @param companyId the company ID of this s p selling item
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this s p selling item.
	 *
	 * @return the user ID of this s p selling item
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this s p selling item.
	 *
	 * @param userId the user ID of this s p selling item
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this s p selling item.
	 *
	 * @return the user uuid of this s p selling item
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this s p selling item.
	 *
	 * @param userUuid the user uuid of this s p selling item
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this s p selling item.
	 *
	 * @return the user name of this s p selling item
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this s p selling item.
	 *
	 * @param userName the user name of this s p selling item
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this s p selling item.
	 *
	 * @return the create date of this s p selling item
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this s p selling item.
	 *
	 * @param createDate the create date of this s p selling item
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this s p selling item.
	 *
	 * @return the modified date of this s p selling item
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this s p selling item.
	 *
	 * @param modifiedDate the modified date of this s p selling item
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.sambaash.platform.srv.spshopping.model.SPSellingItem spSellingItem);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.sambaash.platform.srv.spshopping.model.SPSellingItem> toCacheModel();

	@Override
	public com.sambaash.platform.srv.spshopping.model.SPSellingItem toEscapedModel();

	@Override
	public com.sambaash.platform.srv.spshopping.model.SPSellingItem toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}
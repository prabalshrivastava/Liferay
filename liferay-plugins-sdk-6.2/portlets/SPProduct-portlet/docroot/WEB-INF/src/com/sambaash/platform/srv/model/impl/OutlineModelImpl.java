/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.Outline;
import com.sambaash.platform.srv.model.OutlineModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Outline service. Represents a row in the &quot;SPOutline&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.OutlineModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OutlineImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see OutlineImpl
 * @see com.sambaash.platform.srv.model.Outline
 * @see com.sambaash.platform.srv.model.OutlineModel
 * @generated
 */
public class OutlineModelImpl extends BaseModelImpl<Outline>
	implements OutlineModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a outline model instance should use the {@link com.sambaash.platform.srv.model.Outline} interface instead.
	 */
	public static final String TABLE_NAME = "SPOutline";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spOutlineId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spCompetencyUnitId", Types.BIGINT },
			{ "outlineType", Types.BIGINT },
			{ "outlineDesc", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPOutline (spOutlineId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spCompetencyUnitId BIGINT(20),outlineType BIGINT(20),outlineDesc LONGTEXT null)";
	public static final String TABLE_SQL_DROP = "drop table SPOutline";
	public static final String ORDER_BY_JPQL = " ORDER BY outline.outlineType ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPOutline.outlineType ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.Outline"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.Outline"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.Outline"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long OUTLINETYPE_COLUMN_BITMASK = 2L;
	public static long SPCOMPETENCYUNITID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.Outline"));

	public OutlineModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spOutlineId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpOutlineId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spOutlineId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Outline.class;
	}

	@Override
	public String getModelClassName() {
		return Outline.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spOutlineId", getSpOutlineId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("spCompetencyUnitId", getSpCompetencyUnitId());
		attributes.put("outlineType", getOutlineType());
		attributes.put("outlineDesc", getOutlineDesc());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spOutlineId = (Long)attributes.get("spOutlineId");

		if (spOutlineId != null) {
			setSpOutlineId(spOutlineId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long spCompetencyUnitId = (Long)attributes.get("spCompetencyUnitId");

		if (spCompetencyUnitId != null) {
			setSpCompetencyUnitId(spCompetencyUnitId);
		}

		Long outlineType = (Long)attributes.get("outlineType");

		if (outlineType != null) {
			setOutlineType(outlineType);
		}

		String outlineDesc = (String)attributes.get("outlineDesc");

		if (outlineDesc != null) {
			setOutlineDesc(outlineDesc);
		}
	}

	@Override
	public long getSpOutlineId() {
		return _spOutlineId;
	}

	@Override
	public void setSpOutlineId(long spOutlineId) {
		_spOutlineId = spOutlineId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSpCompetencyUnitId() {
		return _spCompetencyUnitId;
	}

	@Override
	public void setSpCompetencyUnitId(long spCompetencyUnitId) {
		_columnBitmask |= SPCOMPETENCYUNITID_COLUMN_BITMASK;

		if (!_setOriginalSpCompetencyUnitId) {
			_setOriginalSpCompetencyUnitId = true;

			_originalSpCompetencyUnitId = _spCompetencyUnitId;
		}

		_spCompetencyUnitId = spCompetencyUnitId;
	}

	public long getOriginalSpCompetencyUnitId() {
		return _originalSpCompetencyUnitId;
	}

	@Override
	public long getOutlineType() {
		return _outlineType;
	}

	@Override
	public void setOutlineType(long outlineType) {
		_columnBitmask = -1L;

		if (!_setOriginalOutlineType) {
			_setOriginalOutlineType = true;

			_originalOutlineType = _outlineType;
		}

		_outlineType = outlineType;
	}

	public long getOriginalOutlineType() {
		return _originalOutlineType;
	}

	@Override
	public String getOutlineDesc() {
		if (_outlineDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _outlineDesc;
		}
	}

	@Override
	public void setOutlineDesc(String outlineDesc) {
		_outlineDesc = outlineDesc;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Outline.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Outline toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Outline)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OutlineImpl outlineImpl = new OutlineImpl();

		outlineImpl.setSpOutlineId(getSpOutlineId());
		outlineImpl.setGroupId(getGroupId());
		outlineImpl.setCompanyId(getCompanyId());
		outlineImpl.setUserId(getUserId());
		outlineImpl.setUserName(getUserName());
		outlineImpl.setCreateDate(getCreateDate());
		outlineImpl.setModifiedDate(getModifiedDate());
		outlineImpl.setSpCompetencyUnitId(getSpCompetencyUnitId());
		outlineImpl.setOutlineType(getOutlineType());
		outlineImpl.setOutlineDesc(getOutlineDesc());

		outlineImpl.resetOriginalValues();

		return outlineImpl;
	}

	@Override
	public int compareTo(Outline outline) {
		int value = 0;

		if (getOutlineType() < outline.getOutlineType()) {
			value = -1;
		}
		else if (getOutlineType() > outline.getOutlineType()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Outline)) {
			return false;
		}

		Outline outline = (Outline)obj;

		long primaryKey = outline.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OutlineModelImpl outlineModelImpl = this;

		outlineModelImpl._originalGroupId = outlineModelImpl._groupId;

		outlineModelImpl._setOriginalGroupId = false;

		outlineModelImpl._originalSpCompetencyUnitId = outlineModelImpl._spCompetencyUnitId;

		outlineModelImpl._setOriginalSpCompetencyUnitId = false;

		outlineModelImpl._originalOutlineType = outlineModelImpl._outlineType;

		outlineModelImpl._setOriginalOutlineType = false;

		outlineModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Outline> toCacheModel() {
		OutlineCacheModel outlineCacheModel = new OutlineCacheModel();

		outlineCacheModel.spOutlineId = getSpOutlineId();

		outlineCacheModel.groupId = getGroupId();

		outlineCacheModel.companyId = getCompanyId();

		outlineCacheModel.userId = getUserId();

		outlineCacheModel.userName = getUserName();

		String userName = outlineCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			outlineCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			outlineCacheModel.createDate = createDate.getTime();
		}
		else {
			outlineCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			outlineCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			outlineCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		outlineCacheModel.spCompetencyUnitId = getSpCompetencyUnitId();

		outlineCacheModel.outlineType = getOutlineType();

		outlineCacheModel.outlineDesc = getOutlineDesc();

		String outlineDesc = outlineCacheModel.outlineDesc;

		if ((outlineDesc != null) && (outlineDesc.length() == 0)) {
			outlineCacheModel.outlineDesc = null;
		}

		return outlineCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{spOutlineId=");
		sb.append(getSpOutlineId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", spCompetencyUnitId=");
		sb.append(getSpCompetencyUnitId());
		sb.append(", outlineType=");
		sb.append(getOutlineType());
		sb.append(", outlineDesc=");
		sb.append(getOutlineDesc());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.Outline");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spOutlineId</column-name><column-value><![CDATA[");
		sb.append(getSpOutlineId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCompetencyUnitId</column-name><column-value><![CDATA[");
		sb.append(getSpCompetencyUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outlineType</column-name><column-value><![CDATA[");
		sb.append(getOutlineType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>outlineDesc</column-name><column-value><![CDATA[");
		sb.append(getOutlineDesc());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Outline.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Outline.class
		};
	private long _spOutlineId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _spCompetencyUnitId;
	private long _originalSpCompetencyUnitId;
	private boolean _setOriginalSpCompetencyUnitId;
	private long _outlineType;
	private long _originalOutlineType;
	private boolean _setOriginalOutlineType;
	private String _outlineDesc;
	private long _columnBitmask;
	private Outline _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spgroup.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spgroup.model.SPGroupPref;
import com.sambaash.platform.srv.spgroup.model.SPGroupPrefModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPGroupPref service. Represents a row in the &quot;SPGroupPref&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spgroup.model.SPGroupPrefModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPGroupPrefImpl}.
 * </p>
 *
 * @author harini
 * @see SPGroupPrefImpl
 * @see com.sambaash.platform.srv.spgroup.model.SPGroupPref
 * @see com.sambaash.platform.srv.spgroup.model.SPGroupPrefModel
 * @generated
 */
public class SPGroupPrefModelImpl extends BaseModelImpl<SPGroupPref>
	implements SPGroupPrefModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p group pref model instance should use the {@link com.sambaash.platform.srv.spgroup.model.SPGroupPref} interface instead.
	 */
	public static final String TABLE_NAME = "SPGroupPref";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spGroupPrefId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dIn", Types.BOOLEAN },
			{ "dGoogle", Types.BOOLEAN },
			{ "dFb", Types.BOOLEAN },
			{ "dTw", Types.BOOLEAN },
			{ "cIn", Types.BOOLEAN },
			{ "cGoogle", Types.BOOLEAN },
			{ "cFb", Types.BOOLEAN },
			{ "cTw", Types.BOOLEAN },
			{ "enableSubscribeToComments", Types.BOOLEAN },
			{ "enableGroupUpdateNotification", Types.BOOLEAN },
			{ "enableMemberUpdate", Types.BOOLEAN },
			{ "enableDiscussionUpdate", Types.BOOLEAN },
			{ "updateFrequency", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPGroupPref (spGroupPrefId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,dIn BOOLEAN,dGoogle BOOLEAN,dFb BOOLEAN,dTw BOOLEAN,cIn BOOLEAN,cGoogle BOOLEAN,cFb BOOLEAN,cTw BOOLEAN,enableSubscribeToComments BOOLEAN,enableGroupUpdateNotification BOOLEAN,enableMemberUpdate BOOLEAN,enableDiscussionUpdate BOOLEAN,updateFrequency VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPGroupPref";
	public static final String ORDER_BY_JPQL = " ORDER BY spGroupPref.spGroupPrefId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPGroupPref.spGroupPrefId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spgroup.model.SPGroupPref"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spgroup.model.SPGroupPref"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spgroup.model.SPGroupPref"));

	public SPGroupPrefModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spGroupPrefId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpGroupPrefId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spGroupPrefId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPGroupPref.class;
	}

	@Override
	public String getModelClassName() {
		return SPGroupPref.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spGroupPrefId", getSpGroupPrefId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dIn", getDIn());
		attributes.put("dGoogle", getDGoogle());
		attributes.put("dFb", getDFb());
		attributes.put("dTw", getDTw());
		attributes.put("cIn", getCIn());
		attributes.put("cGoogle", getCGoogle());
		attributes.put("cFb", getCFb());
		attributes.put("cTw", getCTw());
		attributes.put("enableSubscribeToComments",
			getEnableSubscribeToComments());
		attributes.put("enableGroupUpdateNotification",
			getEnableGroupUpdateNotification());
		attributes.put("enableMemberUpdate", getEnableMemberUpdate());
		attributes.put("enableDiscussionUpdate", getEnableDiscussionUpdate());
		attributes.put("updateFrequency", getUpdateFrequency());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spGroupPrefId = (Long)attributes.get("spGroupPrefId");

		if (spGroupPrefId != null) {
			setSpGroupPrefId(spGroupPrefId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean dIn = (Boolean)attributes.get("dIn");

		if (dIn != null) {
			setDIn(dIn);
		}

		Boolean dGoogle = (Boolean)attributes.get("dGoogle");

		if (dGoogle != null) {
			setDGoogle(dGoogle);
		}

		Boolean dFb = (Boolean)attributes.get("dFb");

		if (dFb != null) {
			setDFb(dFb);
		}

		Boolean dTw = (Boolean)attributes.get("dTw");

		if (dTw != null) {
			setDTw(dTw);
		}

		Boolean cIn = (Boolean)attributes.get("cIn");

		if (cIn != null) {
			setCIn(cIn);
		}

		Boolean cGoogle = (Boolean)attributes.get("cGoogle");

		if (cGoogle != null) {
			setCGoogle(cGoogle);
		}

		Boolean cFb = (Boolean)attributes.get("cFb");

		if (cFb != null) {
			setCFb(cFb);
		}

		Boolean cTw = (Boolean)attributes.get("cTw");

		if (cTw != null) {
			setCTw(cTw);
		}

		Boolean enableSubscribeToComments = (Boolean)attributes.get(
				"enableSubscribeToComments");

		if (enableSubscribeToComments != null) {
			setEnableSubscribeToComments(enableSubscribeToComments);
		}

		Boolean enableGroupUpdateNotification = (Boolean)attributes.get(
				"enableGroupUpdateNotification");

		if (enableGroupUpdateNotification != null) {
			setEnableGroupUpdateNotification(enableGroupUpdateNotification);
		}

		Boolean enableMemberUpdate = (Boolean)attributes.get(
				"enableMemberUpdate");

		if (enableMemberUpdate != null) {
			setEnableMemberUpdate(enableMemberUpdate);
		}

		Boolean enableDiscussionUpdate = (Boolean)attributes.get(
				"enableDiscussionUpdate");

		if (enableDiscussionUpdate != null) {
			setEnableDiscussionUpdate(enableDiscussionUpdate);
		}

		String updateFrequency = (String)attributes.get("updateFrequency");

		if (updateFrequency != null) {
			setUpdateFrequency(updateFrequency);
		}
	}

	@Override
	public long getSpGroupPrefId() {
		return _spGroupPrefId;
	}

	@Override
	public void setSpGroupPrefId(long spGroupPrefId) {
		_spGroupPrefId = spGroupPrefId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public boolean getDIn() {
		return _dIn;
	}

	@Override
	public boolean isDIn() {
		return _dIn;
	}

	@Override
	public void setDIn(boolean dIn) {
		_dIn = dIn;
	}

	@Override
	public boolean getDGoogle() {
		return _dGoogle;
	}

	@Override
	public boolean isDGoogle() {
		return _dGoogle;
	}

	@Override
	public void setDGoogle(boolean dGoogle) {
		_dGoogle = dGoogle;
	}

	@Override
	public boolean getDFb() {
		return _dFb;
	}

	@Override
	public boolean isDFb() {
		return _dFb;
	}

	@Override
	public void setDFb(boolean dFb) {
		_dFb = dFb;
	}

	@Override
	public boolean getDTw() {
		return _dTw;
	}

	@Override
	public boolean isDTw() {
		return _dTw;
	}

	@Override
	public void setDTw(boolean dTw) {
		_dTw = dTw;
	}

	@Override
	public boolean getCIn() {
		return _cIn;
	}

	@Override
	public boolean isCIn() {
		return _cIn;
	}

	@Override
	public void setCIn(boolean cIn) {
		_cIn = cIn;
	}

	@Override
	public boolean getCGoogle() {
		return _cGoogle;
	}

	@Override
	public boolean isCGoogle() {
		return _cGoogle;
	}

	@Override
	public void setCGoogle(boolean cGoogle) {
		_cGoogle = cGoogle;
	}

	@Override
	public boolean getCFb() {
		return _cFb;
	}

	@Override
	public boolean isCFb() {
		return _cFb;
	}

	@Override
	public void setCFb(boolean cFb) {
		_cFb = cFb;
	}

	@Override
	public boolean getCTw() {
		return _cTw;
	}

	@Override
	public boolean isCTw() {
		return _cTw;
	}

	@Override
	public void setCTw(boolean cTw) {
		_cTw = cTw;
	}

	@Override
	public boolean getEnableSubscribeToComments() {
		return _enableSubscribeToComments;
	}

	@Override
	public boolean isEnableSubscribeToComments() {
		return _enableSubscribeToComments;
	}

	@Override
	public void setEnableSubscribeToComments(boolean enableSubscribeToComments) {
		_enableSubscribeToComments = enableSubscribeToComments;
	}

	@Override
	public boolean getEnableGroupUpdateNotification() {
		return _enableGroupUpdateNotification;
	}

	@Override
	public boolean isEnableGroupUpdateNotification() {
		return _enableGroupUpdateNotification;
	}

	@Override
	public void setEnableGroupUpdateNotification(
		boolean enableGroupUpdateNotification) {
		_enableGroupUpdateNotification = enableGroupUpdateNotification;
	}

	@Override
	public boolean getEnableMemberUpdate() {
		return _enableMemberUpdate;
	}

	@Override
	public boolean isEnableMemberUpdate() {
		return _enableMemberUpdate;
	}

	@Override
	public void setEnableMemberUpdate(boolean enableMemberUpdate) {
		_enableMemberUpdate = enableMemberUpdate;
	}

	@Override
	public boolean getEnableDiscussionUpdate() {
		return _enableDiscussionUpdate;
	}

	@Override
	public boolean isEnableDiscussionUpdate() {
		return _enableDiscussionUpdate;
	}

	@Override
	public void setEnableDiscussionUpdate(boolean enableDiscussionUpdate) {
		_enableDiscussionUpdate = enableDiscussionUpdate;
	}

	@Override
	public String getUpdateFrequency() {
		if (_updateFrequency == null) {
			return StringPool.BLANK;
		}
		else {
			return _updateFrequency;
		}
	}

	@Override
	public void setUpdateFrequency(String updateFrequency) {
		_updateFrequency = updateFrequency;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPGroupPref.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPGroupPref toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPGroupPref)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPGroupPrefImpl spGroupPrefImpl = new SPGroupPrefImpl();

		spGroupPrefImpl.setSpGroupPrefId(getSpGroupPrefId());
		spGroupPrefImpl.setGroupId(getGroupId());
		spGroupPrefImpl.setCompanyId(getCompanyId());
		spGroupPrefImpl.setUserId(getUserId());
		spGroupPrefImpl.setUserName(getUserName());
		spGroupPrefImpl.setCreateDate(getCreateDate());
		spGroupPrefImpl.setModifiedDate(getModifiedDate());
		spGroupPrefImpl.setDIn(getDIn());
		spGroupPrefImpl.setDGoogle(getDGoogle());
		spGroupPrefImpl.setDFb(getDFb());
		spGroupPrefImpl.setDTw(getDTw());
		spGroupPrefImpl.setCIn(getCIn());
		spGroupPrefImpl.setCGoogle(getCGoogle());
		spGroupPrefImpl.setCFb(getCFb());
		spGroupPrefImpl.setCTw(getCTw());
		spGroupPrefImpl.setEnableSubscribeToComments(getEnableSubscribeToComments());
		spGroupPrefImpl.setEnableGroupUpdateNotification(getEnableGroupUpdateNotification());
		spGroupPrefImpl.setEnableMemberUpdate(getEnableMemberUpdate());
		spGroupPrefImpl.setEnableDiscussionUpdate(getEnableDiscussionUpdate());
		spGroupPrefImpl.setUpdateFrequency(getUpdateFrequency());

		spGroupPrefImpl.resetOriginalValues();

		return spGroupPrefImpl;
	}

	@Override
	public int compareTo(SPGroupPref spGroupPref) {
		long primaryKey = spGroupPref.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPGroupPref)) {
			return false;
		}

		SPGroupPref spGroupPref = (SPGroupPref)obj;

		long primaryKey = spGroupPref.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SPGroupPref> toCacheModel() {
		SPGroupPrefCacheModel spGroupPrefCacheModel = new SPGroupPrefCacheModel();

		spGroupPrefCacheModel.spGroupPrefId = getSpGroupPrefId();

		spGroupPrefCacheModel.groupId = getGroupId();

		spGroupPrefCacheModel.companyId = getCompanyId();

		spGroupPrefCacheModel.userId = getUserId();

		spGroupPrefCacheModel.userName = getUserName();

		String userName = spGroupPrefCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spGroupPrefCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spGroupPrefCacheModel.createDate = createDate.getTime();
		}
		else {
			spGroupPrefCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spGroupPrefCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spGroupPrefCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spGroupPrefCacheModel.dIn = getDIn();

		spGroupPrefCacheModel.dGoogle = getDGoogle();

		spGroupPrefCacheModel.dFb = getDFb();

		spGroupPrefCacheModel.dTw = getDTw();

		spGroupPrefCacheModel.cIn = getCIn();

		spGroupPrefCacheModel.cGoogle = getCGoogle();

		spGroupPrefCacheModel.cFb = getCFb();

		spGroupPrefCacheModel.cTw = getCTw();

		spGroupPrefCacheModel.enableSubscribeToComments = getEnableSubscribeToComments();

		spGroupPrefCacheModel.enableGroupUpdateNotification = getEnableGroupUpdateNotification();

		spGroupPrefCacheModel.enableMemberUpdate = getEnableMemberUpdate();

		spGroupPrefCacheModel.enableDiscussionUpdate = getEnableDiscussionUpdate();

		spGroupPrefCacheModel.updateFrequency = getUpdateFrequency();

		String updateFrequency = spGroupPrefCacheModel.updateFrequency;

		if ((updateFrequency != null) && (updateFrequency.length() == 0)) {
			spGroupPrefCacheModel.updateFrequency = null;
		}

		return spGroupPrefCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{spGroupPrefId=");
		sb.append(getSpGroupPrefId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dIn=");
		sb.append(getDIn());
		sb.append(", dGoogle=");
		sb.append(getDGoogle());
		sb.append(", dFb=");
		sb.append(getDFb());
		sb.append(", dTw=");
		sb.append(getDTw());
		sb.append(", cIn=");
		sb.append(getCIn());
		sb.append(", cGoogle=");
		sb.append(getCGoogle());
		sb.append(", cFb=");
		sb.append(getCFb());
		sb.append(", cTw=");
		sb.append(getCTw());
		sb.append(", enableSubscribeToComments=");
		sb.append(getEnableSubscribeToComments());
		sb.append(", enableGroupUpdateNotification=");
		sb.append(getEnableGroupUpdateNotification());
		sb.append(", enableMemberUpdate=");
		sb.append(getEnableMemberUpdate());
		sb.append(", enableDiscussionUpdate=");
		sb.append(getEnableDiscussionUpdate());
		sb.append(", updateFrequency=");
		sb.append(getUpdateFrequency());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spgroup.model.SPGroupPref");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spGroupPrefId</column-name><column-value><![CDATA[");
		sb.append(getSpGroupPrefId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dIn</column-name><column-value><![CDATA[");
		sb.append(getDIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dGoogle</column-name><column-value><![CDATA[");
		sb.append(getDGoogle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dFb</column-name><column-value><![CDATA[");
		sb.append(getDFb());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dTw</column-name><column-value><![CDATA[");
		sb.append(getDTw());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cIn</column-name><column-value><![CDATA[");
		sb.append(getCIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cGoogle</column-name><column-value><![CDATA[");
		sb.append(getCGoogle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cFb</column-name><column-value><![CDATA[");
		sb.append(getCFb());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cTw</column-name><column-value><![CDATA[");
		sb.append(getCTw());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableSubscribeToComments</column-name><column-value><![CDATA[");
		sb.append(getEnableSubscribeToComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableGroupUpdateNotification</column-name><column-value><![CDATA[");
		sb.append(getEnableGroupUpdateNotification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableMemberUpdate</column-name><column-value><![CDATA[");
		sb.append(getEnableMemberUpdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableDiscussionUpdate</column-name><column-value><![CDATA[");
		sb.append(getEnableDiscussionUpdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updateFrequency</column-name><column-value><![CDATA[");
		sb.append(getUpdateFrequency());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPGroupPref.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPGroupPref.class
		};
	private long _spGroupPrefId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _dIn;
	private boolean _dGoogle;
	private boolean _dFb;
	private boolean _dTw;
	private boolean _cIn;
	private boolean _cGoogle;
	private boolean _cFb;
	private boolean _cTw;
	private boolean _enableSubscribeToComments;
	private boolean _enableGroupUpdateNotification;
	private boolean _enableMemberUpdate;
	private boolean _enableDiscussionUpdate;
	private String _updateFrequency;
	private SPGroupPref _escapedModel;
}
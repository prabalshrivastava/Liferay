/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.legalandcontract.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.legalandcontract.model.Litigation;
import com.sambaash.platform.srv.legalandcontract.model.LitigationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Litigation service. Represents a row in the &quot;SPLitigationDetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.legalandcontract.model.LitigationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LitigationImpl}.
 * </p>
 *
 * @author nareshchebolu
 * @see LitigationImpl
 * @see com.sambaash.platform.srv.legalandcontract.model.Litigation
 * @see com.sambaash.platform.srv.legalandcontract.model.LitigationModel
 * @generated
 */
public class LitigationModelImpl extends BaseModelImpl<Litigation>
	implements LitigationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a litigation model instance should use the {@link com.sambaash.platform.srv.legalandcontract.model.Litigation} interface instead.
	 */
	public static final String TABLE_NAME = "SPLitigationDetails";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spLitigationId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "country", Types.VARCHAR },
			{ "filedBy", Types.VARCHAR },
			{ "filedOn", Types.TIMESTAMP },
			{ "filedAtCountry", Types.VARCHAR },
			{ "claimsRemarks", Types.CLOB },
			{ "responseDeadline", Types.TIMESTAMP },
			{ "actualResponseDate", Types.TIMESTAMP },
			{ "status", Types.VARCHAR },
			{ "customField1", Types.VARCHAR },
			{ "customField2", Types.VARCHAR },
			{ "customField3", Types.VARCHAR },
			{ "customDate1", Types.TIMESTAMP },
			{ "customDate2", Types.TIMESTAMP },
			{ "customDate3", Types.TIMESTAMP },
			{ "legalConfRemarks", Types.CLOB },
			{ "version", Types.VARCHAR },
			{ "spTrademarksId", Types.BIGINT },
			{ "rootSpLitigationId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPLitigationDetails (uuid_ VARCHAR(75) null,spLitigationId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,country VARCHAR(200) null,filedBy VARCHAR(200) null,filedOn DATETIME null,filedAtCountry VARCHAR(200) null,claimsRemarks LONGTEXT null,responseDeadline DATETIME null,actualResponseDate DATETIME null,status VARCHAR(200) null,customField1 VARCHAR(200) null,customField2 VARCHAR(200) null,customField3 VARCHAR(200) null,customDate1 DATETIME null,customDate2 DATETIME null,customDate3 DATETIME null,legalConfRemarks LONGTEXT null,version VARCHAR(75) null,spTrademarksId BIGINT(20),rootSpLitigationId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPLitigationDetails";
	public static final String ORDER_BY_JPQL = " ORDER BY litigation.spLitigationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPLitigationDetails.spLitigationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.legalandcontract.model.Litigation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.legalandcontract.model.Litigation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.legalandcontract.model.Litigation"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long SPLITIGATIONID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.legalandcontract.model.Litigation"));

	public LitigationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spLitigationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpLitigationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spLitigationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Litigation.class;
	}

	@Override
	public String getModelClassName() {
		return Litigation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spLitigationId", getSpLitigationId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("country", getCountry());
		attributes.put("filedBy", getFiledBy());
		attributes.put("filedOn", getFiledOn());
		attributes.put("filedAtCountry", getFiledAtCountry());
		attributes.put("claimsRemarks", getClaimsRemarks());
		attributes.put("responseDeadline", getResponseDeadline());
		attributes.put("actualResponseDate", getActualResponseDate());
		attributes.put("status", getStatus());
		attributes.put("customField1", getCustomField1());
		attributes.put("customField2", getCustomField2());
		attributes.put("customField3", getCustomField3());
		attributes.put("customDate1", getCustomDate1());
		attributes.put("customDate2", getCustomDate2());
		attributes.put("customDate3", getCustomDate3());
		attributes.put("legalConfRemarks", getLegalConfRemarks());
		attributes.put("version", getVersion());
		attributes.put("spTrademarksId", getSpTrademarksId());
		attributes.put("rootSpLitigationId", getRootSpLitigationId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spLitigationId = (Long)attributes.get("spLitigationId");

		if (spLitigationId != null) {
			setSpLitigationId(spLitigationId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String country = (String)attributes.get("country");

		if (country != null) {
			setCountry(country);
		}

		String filedBy = (String)attributes.get("filedBy");

		if (filedBy != null) {
			setFiledBy(filedBy);
		}

		Date filedOn = (Date)attributes.get("filedOn");

		if (filedOn != null) {
			setFiledOn(filedOn);
		}

		String filedAtCountry = (String)attributes.get("filedAtCountry");

		if (filedAtCountry != null) {
			setFiledAtCountry(filedAtCountry);
		}

		String claimsRemarks = (String)attributes.get("claimsRemarks");

		if (claimsRemarks != null) {
			setClaimsRemarks(claimsRemarks);
		}

		Date responseDeadline = (Date)attributes.get("responseDeadline");

		if (responseDeadline != null) {
			setResponseDeadline(responseDeadline);
		}

		Date actualResponseDate = (Date)attributes.get("actualResponseDate");

		if (actualResponseDate != null) {
			setActualResponseDate(actualResponseDate);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String customField1 = (String)attributes.get("customField1");

		if (customField1 != null) {
			setCustomField1(customField1);
		}

		String customField2 = (String)attributes.get("customField2");

		if (customField2 != null) {
			setCustomField2(customField2);
		}

		String customField3 = (String)attributes.get("customField3");

		if (customField3 != null) {
			setCustomField3(customField3);
		}

		Date customDate1 = (Date)attributes.get("customDate1");

		if (customDate1 != null) {
			setCustomDate1(customDate1);
		}

		Date customDate2 = (Date)attributes.get("customDate2");

		if (customDate2 != null) {
			setCustomDate2(customDate2);
		}

		Date customDate3 = (Date)attributes.get("customDate3");

		if (customDate3 != null) {
			setCustomDate3(customDate3);
		}

		String legalConfRemarks = (String)attributes.get("legalConfRemarks");

		if (legalConfRemarks != null) {
			setLegalConfRemarks(legalConfRemarks);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		Long spTrademarksId = (Long)attributes.get("spTrademarksId");

		if (spTrademarksId != null) {
			setSpTrademarksId(spTrademarksId);
		}

		Long rootSpLitigationId = (Long)attributes.get("rootSpLitigationId");

		if (rootSpLitigationId != null) {
			setRootSpLitigationId(rootSpLitigationId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpLitigationId() {
		return _spLitigationId;
	}

	@Override
	public void setSpLitigationId(long spLitigationId) {
		_spLitigationId = spLitigationId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCountry() {
		if (_country == null) {
			return StringPool.BLANK;
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		_country = country;
	}

	@Override
	public String getFiledBy() {
		if (_filedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _filedBy;
		}
	}

	@Override
	public void setFiledBy(String filedBy) {
		_filedBy = filedBy;
	}

	@Override
	public Date getFiledOn() {
		return _filedOn;
	}

	@Override
	public void setFiledOn(Date filedOn) {
		_filedOn = filedOn;
	}

	@Override
	public String getFiledAtCountry() {
		if (_filedAtCountry == null) {
			return StringPool.BLANK;
		}
		else {
			return _filedAtCountry;
		}
	}

	@Override
	public void setFiledAtCountry(String filedAtCountry) {
		_filedAtCountry = filedAtCountry;
	}

	@Override
	public String getClaimsRemarks() {
		if (_claimsRemarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _claimsRemarks;
		}
	}

	@Override
	public void setClaimsRemarks(String claimsRemarks) {
		_claimsRemarks = claimsRemarks;
	}

	@Override
	public Date getResponseDeadline() {
		return _responseDeadline;
	}

	@Override
	public void setResponseDeadline(Date responseDeadline) {
		_responseDeadline = responseDeadline;
	}

	@Override
	public Date getActualResponseDate() {
		return _actualResponseDate;
	}

	@Override
	public void setActualResponseDate(Date actualResponseDate) {
		_actualResponseDate = actualResponseDate;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getCustomField1() {
		if (_customField1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField1;
		}
	}

	@Override
	public void setCustomField1(String customField1) {
		_customField1 = customField1;
	}

	@Override
	public String getCustomField2() {
		if (_customField2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField2;
		}
	}

	@Override
	public void setCustomField2(String customField2) {
		_customField2 = customField2;
	}

	@Override
	public String getCustomField3() {
		if (_customField3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _customField3;
		}
	}

	@Override
	public void setCustomField3(String customField3) {
		_customField3 = customField3;
	}

	@Override
	public Date getCustomDate1() {
		return _customDate1;
	}

	@Override
	public void setCustomDate1(Date customDate1) {
		_customDate1 = customDate1;
	}

	@Override
	public Date getCustomDate2() {
		return _customDate2;
	}

	@Override
	public void setCustomDate2(Date customDate2) {
		_customDate2 = customDate2;
	}

	@Override
	public Date getCustomDate3() {
		return _customDate3;
	}

	@Override
	public void setCustomDate3(Date customDate3) {
		_customDate3 = customDate3;
	}

	@Override
	public String getLegalConfRemarks() {
		if (_legalConfRemarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _legalConfRemarks;
		}
	}

	@Override
	public void setLegalConfRemarks(String legalConfRemarks) {
		_legalConfRemarks = legalConfRemarks;
	}

	@Override
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_version = version;
	}

	@Override
	public long getSpTrademarksId() {
		return _spTrademarksId;
	}

	@Override
	public void setSpTrademarksId(long spTrademarksId) {
		_spTrademarksId = spTrademarksId;
	}

	@Override
	public long getRootSpLitigationId() {
		return _rootSpLitigationId;
	}

	@Override
	public void setRootSpLitigationId(long rootSpLitigationId) {
		_rootSpLitigationId = rootSpLitigationId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Litigation.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Litigation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Litigation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Litigation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LitigationImpl litigationImpl = new LitigationImpl();

		litigationImpl.setUuid(getUuid());
		litigationImpl.setSpLitigationId(getSpLitigationId());
		litigationImpl.setGroupId(getGroupId());
		litigationImpl.setCompanyId(getCompanyId());
		litigationImpl.setUserId(getUserId());
		litigationImpl.setUserName(getUserName());
		litigationImpl.setCreateDate(getCreateDate());
		litigationImpl.setModifiedDate(getModifiedDate());
		litigationImpl.setCountry(getCountry());
		litigationImpl.setFiledBy(getFiledBy());
		litigationImpl.setFiledOn(getFiledOn());
		litigationImpl.setFiledAtCountry(getFiledAtCountry());
		litigationImpl.setClaimsRemarks(getClaimsRemarks());
		litigationImpl.setResponseDeadline(getResponseDeadline());
		litigationImpl.setActualResponseDate(getActualResponseDate());
		litigationImpl.setStatus(getStatus());
		litigationImpl.setCustomField1(getCustomField1());
		litigationImpl.setCustomField2(getCustomField2());
		litigationImpl.setCustomField3(getCustomField3());
		litigationImpl.setCustomDate1(getCustomDate1());
		litigationImpl.setCustomDate2(getCustomDate2());
		litigationImpl.setCustomDate3(getCustomDate3());
		litigationImpl.setLegalConfRemarks(getLegalConfRemarks());
		litigationImpl.setVersion(getVersion());
		litigationImpl.setSpTrademarksId(getSpTrademarksId());
		litigationImpl.setRootSpLitigationId(getRootSpLitigationId());

		litigationImpl.resetOriginalValues();

		return litigationImpl;
	}

	@Override
	public int compareTo(Litigation litigation) {
		long primaryKey = litigation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Litigation)) {
			return false;
		}

		Litigation litigation = (Litigation)obj;

		long primaryKey = litigation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LitigationModelImpl litigationModelImpl = this;

		litigationModelImpl._originalUuid = litigationModelImpl._uuid;

		litigationModelImpl._originalGroupId = litigationModelImpl._groupId;

		litigationModelImpl._setOriginalGroupId = false;

		litigationModelImpl._originalCompanyId = litigationModelImpl._companyId;

		litigationModelImpl._setOriginalCompanyId = false;

		litigationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Litigation> toCacheModel() {
		LitigationCacheModel litigationCacheModel = new LitigationCacheModel();

		litigationCacheModel.uuid = getUuid();

		String uuid = litigationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			litigationCacheModel.uuid = null;
		}

		litigationCacheModel.spLitigationId = getSpLitigationId();

		litigationCacheModel.groupId = getGroupId();

		litigationCacheModel.companyId = getCompanyId();

		litigationCacheModel.userId = getUserId();

		litigationCacheModel.userName = getUserName();

		String userName = litigationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			litigationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			litigationCacheModel.createDate = createDate.getTime();
		}
		else {
			litigationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			litigationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			litigationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		litigationCacheModel.country = getCountry();

		String country = litigationCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			litigationCacheModel.country = null;
		}

		litigationCacheModel.filedBy = getFiledBy();

		String filedBy = litigationCacheModel.filedBy;

		if ((filedBy != null) && (filedBy.length() == 0)) {
			litigationCacheModel.filedBy = null;
		}

		Date filedOn = getFiledOn();

		if (filedOn != null) {
			litigationCacheModel.filedOn = filedOn.getTime();
		}
		else {
			litigationCacheModel.filedOn = Long.MIN_VALUE;
		}

		litigationCacheModel.filedAtCountry = getFiledAtCountry();

		String filedAtCountry = litigationCacheModel.filedAtCountry;

		if ((filedAtCountry != null) && (filedAtCountry.length() == 0)) {
			litigationCacheModel.filedAtCountry = null;
		}

		litigationCacheModel.claimsRemarks = getClaimsRemarks();

		String claimsRemarks = litigationCacheModel.claimsRemarks;

		if ((claimsRemarks != null) && (claimsRemarks.length() == 0)) {
			litigationCacheModel.claimsRemarks = null;
		}

		Date responseDeadline = getResponseDeadline();

		if (responseDeadline != null) {
			litigationCacheModel.responseDeadline = responseDeadline.getTime();
		}
		else {
			litigationCacheModel.responseDeadline = Long.MIN_VALUE;
		}

		Date actualResponseDate = getActualResponseDate();

		if (actualResponseDate != null) {
			litigationCacheModel.actualResponseDate = actualResponseDate.getTime();
		}
		else {
			litigationCacheModel.actualResponseDate = Long.MIN_VALUE;
		}

		litigationCacheModel.status = getStatus();

		String status = litigationCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			litigationCacheModel.status = null;
		}

		litigationCacheModel.customField1 = getCustomField1();

		String customField1 = litigationCacheModel.customField1;

		if ((customField1 != null) && (customField1.length() == 0)) {
			litigationCacheModel.customField1 = null;
		}

		litigationCacheModel.customField2 = getCustomField2();

		String customField2 = litigationCacheModel.customField2;

		if ((customField2 != null) && (customField2.length() == 0)) {
			litigationCacheModel.customField2 = null;
		}

		litigationCacheModel.customField3 = getCustomField3();

		String customField3 = litigationCacheModel.customField3;

		if ((customField3 != null) && (customField3.length() == 0)) {
			litigationCacheModel.customField3 = null;
		}

		Date customDate1 = getCustomDate1();

		if (customDate1 != null) {
			litigationCacheModel.customDate1 = customDate1.getTime();
		}
		else {
			litigationCacheModel.customDate1 = Long.MIN_VALUE;
		}

		Date customDate2 = getCustomDate2();

		if (customDate2 != null) {
			litigationCacheModel.customDate2 = customDate2.getTime();
		}
		else {
			litigationCacheModel.customDate2 = Long.MIN_VALUE;
		}

		Date customDate3 = getCustomDate3();

		if (customDate3 != null) {
			litigationCacheModel.customDate3 = customDate3.getTime();
		}
		else {
			litigationCacheModel.customDate3 = Long.MIN_VALUE;
		}

		litigationCacheModel.legalConfRemarks = getLegalConfRemarks();

		String legalConfRemarks = litigationCacheModel.legalConfRemarks;

		if ((legalConfRemarks != null) && (legalConfRemarks.length() == 0)) {
			litigationCacheModel.legalConfRemarks = null;
		}

		litigationCacheModel.version = getVersion();

		String version = litigationCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			litigationCacheModel.version = null;
		}

		litigationCacheModel.spTrademarksId = getSpTrademarksId();

		litigationCacheModel.rootSpLitigationId = getRootSpLitigationId();

		return litigationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(53);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spLitigationId=");
		sb.append(getSpLitigationId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", country=");
		sb.append(getCountry());
		sb.append(", filedBy=");
		sb.append(getFiledBy());
		sb.append(", filedOn=");
		sb.append(getFiledOn());
		sb.append(", filedAtCountry=");
		sb.append(getFiledAtCountry());
		sb.append(", claimsRemarks=");
		sb.append(getClaimsRemarks());
		sb.append(", responseDeadline=");
		sb.append(getResponseDeadline());
		sb.append(", actualResponseDate=");
		sb.append(getActualResponseDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", customField1=");
		sb.append(getCustomField1());
		sb.append(", customField2=");
		sb.append(getCustomField2());
		sb.append(", customField3=");
		sb.append(getCustomField3());
		sb.append(", customDate1=");
		sb.append(getCustomDate1());
		sb.append(", customDate2=");
		sb.append(getCustomDate2());
		sb.append(", customDate3=");
		sb.append(getCustomDate3());
		sb.append(", legalConfRemarks=");
		sb.append(getLegalConfRemarks());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", spTrademarksId=");
		sb.append(getSpTrademarksId());
		sb.append(", rootSpLitigationId=");
		sb.append(getRootSpLitigationId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(82);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.legalandcontract.model.Litigation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spLitigationId</column-name><column-value><![CDATA[");
		sb.append(getSpLitigationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>country</column-name><column-value><![CDATA[");
		sb.append(getCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>filedBy</column-name><column-value><![CDATA[");
		sb.append(getFiledBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>filedOn</column-name><column-value><![CDATA[");
		sb.append(getFiledOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>filedAtCountry</column-name><column-value><![CDATA[");
		sb.append(getFiledAtCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>claimsRemarks</column-name><column-value><![CDATA[");
		sb.append(getClaimsRemarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>responseDeadline</column-name><column-value><![CDATA[");
		sb.append(getResponseDeadline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actualResponseDate</column-name><column-value><![CDATA[");
		sb.append(getActualResponseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField1</column-name><column-value><![CDATA[");
		sb.append(getCustomField1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField2</column-name><column-value><![CDATA[");
		sb.append(getCustomField2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customField3</column-name><column-value><![CDATA[");
		sb.append(getCustomField3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate1</column-name><column-value><![CDATA[");
		sb.append(getCustomDate1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate2</column-name><column-value><![CDATA[");
		sb.append(getCustomDate2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customDate3</column-name><column-value><![CDATA[");
		sb.append(getCustomDate3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>legalConfRemarks</column-name><column-value><![CDATA[");
		sb.append(getLegalConfRemarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spTrademarksId</column-name><column-value><![CDATA[");
		sb.append(getSpTrademarksId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rootSpLitigationId</column-name><column-value><![CDATA[");
		sb.append(getRootSpLitigationId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Litigation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Litigation.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spLitigationId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _country;
	private String _filedBy;
	private Date _filedOn;
	private String _filedAtCountry;
	private String _claimsRemarks;
	private Date _responseDeadline;
	private Date _actualResponseDate;
	private String _status;
	private String _customField1;
	private String _customField2;
	private String _customField3;
	private Date _customDate1;
	private Date _customDate2;
	private Date _customDate3;
	private String _legalConfRemarks;
	private String _version;
	private long _spTrademarksId;
	private long _rootSpLitigationId;
	private long _columnBitmask;
	private Litigation _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.contactus.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.contactus.model.SPContactUs;
import com.sambaash.platform.srv.contactus.model.SPContactUsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPContactUs service. Represents a row in the &quot;SPContactUs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.contactus.model.SPContactUsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPContactUsImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPContactUsImpl
 * @see com.sambaash.platform.srv.contactus.model.SPContactUs
 * @see com.sambaash.platform.srv.contactus.model.SPContactUsModel
 * @generated
 */
public class SPContactUsModelImpl extends BaseModelImpl<SPContactUs>
	implements SPContactUsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p contact us model instance should use the {@link com.sambaash.platform.srv.contactus.model.SPContactUs} interface instead.
	 */
	public static final String TABLE_NAME = "SPContactUs";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spContactUsId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "category", Types.VARCHAR },
			{ "comment", Types.VARCHAR },
			{ "countryName", Types.VARCHAR },
			{ "contactNumber", Types.BIGINT },
			{ "company", Types.VARCHAR },
			{ "jobTitle", Types.VARCHAR },
			{ "companyUrl", Types.VARCHAR },
			{ "noOfEmployee", Types.BIGINT },
			{ "rate", Types.VARCHAR },
			{ "typeOfEnquiry", Types.VARCHAR },
			{ "location", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPContactUs (spContactUsId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,name VARCHAR(75) null,lastName VARCHAR(75) null,emailAddress VARCHAR(75) null,category VARCHAR(75) null,comment VARCHAR(75) null,countryName VARCHAR(75) null,contactNumber BIGINT(20),company VARCHAR(75) null,jobTitle VARCHAR(75) null,companyUrl VARCHAR(75) null,noOfEmployee BIGINT(20),rate VARCHAR(75) null,typeOfEnquiry VARCHAR(75) null,location VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPContactUs";
	public static final String ORDER_BY_JPQL = " ORDER BY spContactUs.spContactUsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPContactUs.spContactUsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.contactus.model.SPContactUs"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.contactus.model.SPContactUs"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.contactus.model.SPContactUs"));

	public SPContactUsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spContactUsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpContactUsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spContactUsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPContactUs.class;
	}

	@Override
	public String getModelClassName() {
		return SPContactUs.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spContactUsId", getSpContactUsId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("lastName", getLastName());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("category", getCategory());
		attributes.put("comment", getComment());
		attributes.put("countryName", getCountryName());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("company", getCompany());
		attributes.put("jobTitle", getJobTitle());
		attributes.put("companyUrl", getCompanyUrl());
		attributes.put("noOfEmployee", getNoOfEmployee());
		attributes.put("rate", getRate());
		attributes.put("typeOfEnquiry", getTypeOfEnquiry());
		attributes.put("location", getLocation());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spContactUsId = (Long)attributes.get("spContactUsId");

		if (spContactUsId != null) {
			setSpContactUsId(spContactUsId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}

		String comment = (String)attributes.get("comment");

		if (comment != null) {
			setComment(comment);
		}

		String countryName = (String)attributes.get("countryName");

		if (countryName != null) {
			setCountryName(countryName);
		}

		Long contactNumber = (Long)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		String company = (String)attributes.get("company");

		if (company != null) {
			setCompany(company);
		}

		String jobTitle = (String)attributes.get("jobTitle");

		if (jobTitle != null) {
			setJobTitle(jobTitle);
		}

		String companyUrl = (String)attributes.get("companyUrl");

		if (companyUrl != null) {
			setCompanyUrl(companyUrl);
		}

		Long noOfEmployee = (Long)attributes.get("noOfEmployee");

		if (noOfEmployee != null) {
			setNoOfEmployee(noOfEmployee);
		}

		String rate = (String)attributes.get("rate");

		if (rate != null) {
			setRate(rate);
		}

		String typeOfEnquiry = (String)attributes.get("typeOfEnquiry");

		if (typeOfEnquiry != null) {
			setTypeOfEnquiry(typeOfEnquiry);
		}

		String location = (String)attributes.get("location");

		if (location != null) {
			setLocation(location);
		}
	}

	@Override
	public long getSpContactUsId() {
		return _spContactUsId;
	}

	@Override
	public void setSpContactUsId(long spContactUsId) {
		_spContactUsId = spContactUsId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	@Override
	public void setCategory(String category) {
		_category = category;
	}

	@Override
	public String getComment() {
		if (_comment == null) {
			return StringPool.BLANK;
		}
		else {
			return _comment;
		}
	}

	@Override
	public void setComment(String comment) {
		_comment = comment;
	}

	@Override
	public String getCountryName() {
		if (_countryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _countryName;
		}
	}

	@Override
	public void setCountryName(String countryName) {
		_countryName = countryName;
	}

	@Override
	public long getContactNumber() {
		return _contactNumber;
	}

	@Override
	public void setContactNumber(long contactNumber) {
		_contactNumber = contactNumber;
	}

	@Override
	public String getCompany() {
		if (_company == null) {
			return StringPool.BLANK;
		}
		else {
			return _company;
		}
	}

	@Override
	public void setCompany(String company) {
		_company = company;
	}

	@Override
	public String getJobTitle() {
		if (_jobTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobTitle;
		}
	}

	@Override
	public void setJobTitle(String jobTitle) {
		_jobTitle = jobTitle;
	}

	@Override
	public String getCompanyUrl() {
		if (_companyUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyUrl;
		}
	}

	@Override
	public void setCompanyUrl(String companyUrl) {
		_companyUrl = companyUrl;
	}

	@Override
	public long getNoOfEmployee() {
		return _noOfEmployee;
	}

	@Override
	public void setNoOfEmployee(long noOfEmployee) {
		_noOfEmployee = noOfEmployee;
	}

	@Override
	public String getRate() {
		if (_rate == null) {
			return StringPool.BLANK;
		}
		else {
			return _rate;
		}
	}

	@Override
	public void setRate(String rate) {
		_rate = rate;
	}

	@Override
	public String getTypeOfEnquiry() {
		if (_typeOfEnquiry == null) {
			return StringPool.BLANK;
		}
		else {
			return _typeOfEnquiry;
		}
	}

	@Override
	public void setTypeOfEnquiry(String typeOfEnquiry) {
		_typeOfEnquiry = typeOfEnquiry;
	}

	@Override
	public String getLocation() {
		if (_location == null) {
			return StringPool.BLANK;
		}
		else {
			return _location;
		}
	}

	@Override
	public void setLocation(String location) {
		_location = location;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPContactUs.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPContactUs toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPContactUs)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPContactUsImpl spContactUsImpl = new SPContactUsImpl();

		spContactUsImpl.setSpContactUsId(getSpContactUsId());
		spContactUsImpl.setGroupId(getGroupId());
		spContactUsImpl.setCompanyId(getCompanyId());
		spContactUsImpl.setUserId(getUserId());
		spContactUsImpl.setUserName(getUserName());
		spContactUsImpl.setCreateDate(getCreateDate());
		spContactUsImpl.setModifiedDate(getModifiedDate());
		spContactUsImpl.setName(getName());
		spContactUsImpl.setLastName(getLastName());
		spContactUsImpl.setEmailAddress(getEmailAddress());
		spContactUsImpl.setCategory(getCategory());
		spContactUsImpl.setComment(getComment());
		spContactUsImpl.setCountryName(getCountryName());
		spContactUsImpl.setContactNumber(getContactNumber());
		spContactUsImpl.setCompany(getCompany());
		spContactUsImpl.setJobTitle(getJobTitle());
		spContactUsImpl.setCompanyUrl(getCompanyUrl());
		spContactUsImpl.setNoOfEmployee(getNoOfEmployee());
		spContactUsImpl.setRate(getRate());
		spContactUsImpl.setTypeOfEnquiry(getTypeOfEnquiry());
		spContactUsImpl.setLocation(getLocation());

		spContactUsImpl.resetOriginalValues();

		return spContactUsImpl;
	}

	@Override
	public int compareTo(SPContactUs spContactUs) {
		long primaryKey = spContactUs.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPContactUs)) {
			return false;
		}

		SPContactUs spContactUs = (SPContactUs)obj;

		long primaryKey = spContactUs.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SPContactUs> toCacheModel() {
		SPContactUsCacheModel spContactUsCacheModel = new SPContactUsCacheModel();

		spContactUsCacheModel.spContactUsId = getSpContactUsId();

		spContactUsCacheModel.groupId = getGroupId();

		spContactUsCacheModel.companyId = getCompanyId();

		spContactUsCacheModel.userId = getUserId();

		spContactUsCacheModel.userName = getUserName();

		String userName = spContactUsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spContactUsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spContactUsCacheModel.createDate = createDate.getTime();
		}
		else {
			spContactUsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spContactUsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spContactUsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spContactUsCacheModel.name = getName();

		String name = spContactUsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			spContactUsCacheModel.name = null;
		}

		spContactUsCacheModel.lastName = getLastName();

		String lastName = spContactUsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			spContactUsCacheModel.lastName = null;
		}

		spContactUsCacheModel.emailAddress = getEmailAddress();

		String emailAddress = spContactUsCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			spContactUsCacheModel.emailAddress = null;
		}

		spContactUsCacheModel.category = getCategory();

		String category = spContactUsCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			spContactUsCacheModel.category = null;
		}

		spContactUsCacheModel.comment = getComment();

		String comment = spContactUsCacheModel.comment;

		if ((comment != null) && (comment.length() == 0)) {
			spContactUsCacheModel.comment = null;
		}

		spContactUsCacheModel.countryName = getCountryName();

		String countryName = spContactUsCacheModel.countryName;

		if ((countryName != null) && (countryName.length() == 0)) {
			spContactUsCacheModel.countryName = null;
		}

		spContactUsCacheModel.contactNumber = getContactNumber();

		spContactUsCacheModel.company = getCompany();

		String company = spContactUsCacheModel.company;

		if ((company != null) && (company.length() == 0)) {
			spContactUsCacheModel.company = null;
		}

		spContactUsCacheModel.jobTitle = getJobTitle();

		String jobTitle = spContactUsCacheModel.jobTitle;

		if ((jobTitle != null) && (jobTitle.length() == 0)) {
			spContactUsCacheModel.jobTitle = null;
		}

		spContactUsCacheModel.companyUrl = getCompanyUrl();

		String companyUrl = spContactUsCacheModel.companyUrl;

		if ((companyUrl != null) && (companyUrl.length() == 0)) {
			spContactUsCacheModel.companyUrl = null;
		}

		spContactUsCacheModel.noOfEmployee = getNoOfEmployee();

		spContactUsCacheModel.rate = getRate();

		String rate = spContactUsCacheModel.rate;

		if ((rate != null) && (rate.length() == 0)) {
			spContactUsCacheModel.rate = null;
		}

		spContactUsCacheModel.typeOfEnquiry = getTypeOfEnquiry();

		String typeOfEnquiry = spContactUsCacheModel.typeOfEnquiry;

		if ((typeOfEnquiry != null) && (typeOfEnquiry.length() == 0)) {
			spContactUsCacheModel.typeOfEnquiry = null;
		}

		spContactUsCacheModel.location = getLocation();

		String location = spContactUsCacheModel.location;

		if ((location != null) && (location.length() == 0)) {
			spContactUsCacheModel.location = null;
		}

		return spContactUsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{spContactUsId=");
		sb.append(getSpContactUsId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append(", comment=");
		sb.append(getComment());
		sb.append(", countryName=");
		sb.append(getCountryName());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", company=");
		sb.append(getCompany());
		sb.append(", jobTitle=");
		sb.append(getJobTitle());
		sb.append(", companyUrl=");
		sb.append(getCompanyUrl());
		sb.append(", noOfEmployee=");
		sb.append(getNoOfEmployee());
		sb.append(", rate=");
		sb.append(getRate());
		sb.append(", typeOfEnquiry=");
		sb.append(getTypeOfEnquiry());
		sb.append(", location=");
		sb.append(getLocation());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.contactus.model.SPContactUs");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spContactUsId</column-name><column-value><![CDATA[");
		sb.append(getSpContactUsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comment</column-name><column-value><![CDATA[");
		sb.append(getComment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryName</column-name><column-value><![CDATA[");
		sb.append(getCountryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>company</column-name><column-value><![CDATA[");
		sb.append(getCompany());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobTitle</column-name><column-value><![CDATA[");
		sb.append(getJobTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyUrl</column-name><column-value><![CDATA[");
		sb.append(getCompanyUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfEmployee</column-name><column-value><![CDATA[");
		sb.append(getNoOfEmployee());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rate</column-name><column-value><![CDATA[");
		sb.append(getRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeOfEnquiry</column-name><column-value><![CDATA[");
		sb.append(getTypeOfEnquiry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPContactUs.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPContactUs.class
		};
	private long _spContactUsId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _lastName;
	private String _emailAddress;
	private String _category;
	private String _comment;
	private String _countryName;
	private long _contactNumber;
	private String _company;
	private String _jobTitle;
	private String _companyUrl;
	private long _noOfEmployee;
	private String _rate;
	private String _typeOfEnquiry;
	private String _location;
	private SPContactUs _escapedModel;
}
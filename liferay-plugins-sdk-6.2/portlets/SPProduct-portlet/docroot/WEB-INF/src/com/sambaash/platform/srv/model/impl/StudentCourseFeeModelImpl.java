/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.StudentCourseFee;
import com.sambaash.platform.srv.model.StudentCourseFeeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StudentCourseFee service. Represents a row in the &quot;SPStudentCourseFee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.StudentCourseFeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StudentCourseFeeImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see StudentCourseFeeImpl
 * @see com.sambaash.platform.srv.model.StudentCourseFee
 * @see com.sambaash.platform.srv.model.StudentCourseFeeModel
 * @generated
 */
public class StudentCourseFeeModelImpl extends BaseModelImpl<StudentCourseFee>
	implements StudentCourseFeeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a student course fee model instance should use the {@link com.sambaash.platform.srv.model.StudentCourseFee} interface instead.
	 */
	public static final String TABLE_NAME = "SPStudentCourseFee";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spStudentCourseFeeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spPEProcessStateId", Types.BIGINT },
			{ "feeType", Types.VARCHAR },
			{ "amount", Types.VARCHAR },
			{ "order_", Types.INTEGER },
			{ "formula", Types.VARCHAR },
			{ "label", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPStudentCourseFee (spStudentCourseFeeId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spPEProcessStateId BIGINT(20),feeType VARCHAR(75) null,amount VARCHAR(75) null,order_ INTEGER,formula VARCHAR(75) null,label VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPStudentCourseFee";
	public static final String ORDER_BY_JPQL = " ORDER BY studentCourseFee.spStudentCourseFeeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPStudentCourseFee.spStudentCourseFeeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.StudentCourseFee"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.StudentCourseFee"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.StudentCourseFee"),
			true);
	public static long FEETYPE_COLUMN_BITMASK = 1L;
	public static long SPPEPROCESSSTATEID_COLUMN_BITMASK = 2L;
	public static long SPSTUDENTCOURSEFEEID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.StudentCourseFee"));

	public StudentCourseFeeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spStudentCourseFeeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpStudentCourseFeeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spStudentCourseFeeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StudentCourseFee.class;
	}

	@Override
	public String getModelClassName() {
		return StudentCourseFee.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spStudentCourseFeeId", getSpStudentCourseFeeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("spPEProcessStateId", getSpPEProcessStateId());
		attributes.put("feeType", getFeeType());
		attributes.put("amount", getAmount());
		attributes.put("order", getOrder());
		attributes.put("formula", getFormula());
		attributes.put("label", getLabel());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spStudentCourseFeeId = (Long)attributes.get("spStudentCourseFeeId");

		if (spStudentCourseFeeId != null) {
			setSpStudentCourseFeeId(spStudentCourseFeeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long spPEProcessStateId = (Long)attributes.get("spPEProcessStateId");

		if (spPEProcessStateId != null) {
			setSpPEProcessStateId(spPEProcessStateId);
		}

		String feeType = (String)attributes.get("feeType");

		if (feeType != null) {
			setFeeType(feeType);
		}

		String amount = (String)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Integer order = (Integer)attributes.get("order");

		if (order != null) {
			setOrder(order);
		}

		String formula = (String)attributes.get("formula");

		if (formula != null) {
			setFormula(formula);
		}

		String label = (String)attributes.get("label");

		if (label != null) {
			setLabel(label);
		}
	}

	@Override
	public long getSpStudentCourseFeeId() {
		return _spStudentCourseFeeId;
	}

	@Override
	public void setSpStudentCourseFeeId(long spStudentCourseFeeId) {
		_spStudentCourseFeeId = spStudentCourseFeeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSpPEProcessStateId() {
		return _spPEProcessStateId;
	}

	@Override
	public void setSpPEProcessStateId(long spPEProcessStateId) {
		_columnBitmask |= SPPEPROCESSSTATEID_COLUMN_BITMASK;

		if (!_setOriginalSpPEProcessStateId) {
			_setOriginalSpPEProcessStateId = true;

			_originalSpPEProcessStateId = _spPEProcessStateId;
		}

		_spPEProcessStateId = spPEProcessStateId;
	}

	public long getOriginalSpPEProcessStateId() {
		return _originalSpPEProcessStateId;
	}

	@Override
	public String getFeeType() {
		if (_feeType == null) {
			return StringPool.BLANK;
		}
		else {
			return _feeType;
		}
	}

	@Override
	public void setFeeType(String feeType) {
		_columnBitmask |= FEETYPE_COLUMN_BITMASK;

		if (_originalFeeType == null) {
			_originalFeeType = _feeType;
		}

		_feeType = feeType;
	}

	public String getOriginalFeeType() {
		return GetterUtil.getString(_originalFeeType);
	}

	@Override
	public String getAmount() {
		if (_amount == null) {
			return StringPool.BLANK;
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		_amount = amount;
	}

	@Override
	public int getOrder() {
		return _order;
	}

	@Override
	public void setOrder(int order) {
		_order = order;
	}

	@Override
	public String getFormula() {
		if (_formula == null) {
			return StringPool.BLANK;
		}
		else {
			return _formula;
		}
	}

	@Override
	public void setFormula(String formula) {
		_formula = formula;
	}

	@Override
	public String getLabel() {
		if (_label == null) {
			return StringPool.BLANK;
		}
		else {
			return _label;
		}
	}

	@Override
	public void setLabel(String label) {
		_label = label;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			StudentCourseFee.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StudentCourseFee toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StudentCourseFee)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StudentCourseFeeImpl studentCourseFeeImpl = new StudentCourseFeeImpl();

		studentCourseFeeImpl.setSpStudentCourseFeeId(getSpStudentCourseFeeId());
		studentCourseFeeImpl.setGroupId(getGroupId());
		studentCourseFeeImpl.setCompanyId(getCompanyId());
		studentCourseFeeImpl.setUserId(getUserId());
		studentCourseFeeImpl.setUserName(getUserName());
		studentCourseFeeImpl.setCreateDate(getCreateDate());
		studentCourseFeeImpl.setModifiedDate(getModifiedDate());
		studentCourseFeeImpl.setSpPEProcessStateId(getSpPEProcessStateId());
		studentCourseFeeImpl.setFeeType(getFeeType());
		studentCourseFeeImpl.setAmount(getAmount());
		studentCourseFeeImpl.setOrder(getOrder());
		studentCourseFeeImpl.setFormula(getFormula());
		studentCourseFeeImpl.setLabel(getLabel());

		studentCourseFeeImpl.resetOriginalValues();

		return studentCourseFeeImpl;
	}

	@Override
	public int compareTo(StudentCourseFee studentCourseFee) {
		long primaryKey = studentCourseFee.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StudentCourseFee)) {
			return false;
		}

		StudentCourseFee studentCourseFee = (StudentCourseFee)obj;

		long primaryKey = studentCourseFee.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		StudentCourseFeeModelImpl studentCourseFeeModelImpl = this;

		studentCourseFeeModelImpl._originalSpPEProcessStateId = studentCourseFeeModelImpl._spPEProcessStateId;

		studentCourseFeeModelImpl._setOriginalSpPEProcessStateId = false;

		studentCourseFeeModelImpl._originalFeeType = studentCourseFeeModelImpl._feeType;

		studentCourseFeeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StudentCourseFee> toCacheModel() {
		StudentCourseFeeCacheModel studentCourseFeeCacheModel = new StudentCourseFeeCacheModel();

		studentCourseFeeCacheModel.spStudentCourseFeeId = getSpStudentCourseFeeId();

		studentCourseFeeCacheModel.groupId = getGroupId();

		studentCourseFeeCacheModel.companyId = getCompanyId();

		studentCourseFeeCacheModel.userId = getUserId();

		studentCourseFeeCacheModel.userName = getUserName();

		String userName = studentCourseFeeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			studentCourseFeeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			studentCourseFeeCacheModel.createDate = createDate.getTime();
		}
		else {
			studentCourseFeeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			studentCourseFeeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			studentCourseFeeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		studentCourseFeeCacheModel.spPEProcessStateId = getSpPEProcessStateId();

		studentCourseFeeCacheModel.feeType = getFeeType();

		String feeType = studentCourseFeeCacheModel.feeType;

		if ((feeType != null) && (feeType.length() == 0)) {
			studentCourseFeeCacheModel.feeType = null;
		}

		studentCourseFeeCacheModel.amount = getAmount();

		String amount = studentCourseFeeCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			studentCourseFeeCacheModel.amount = null;
		}

		studentCourseFeeCacheModel.order = getOrder();

		studentCourseFeeCacheModel.formula = getFormula();

		String formula = studentCourseFeeCacheModel.formula;

		if ((formula != null) && (formula.length() == 0)) {
			studentCourseFeeCacheModel.formula = null;
		}

		studentCourseFeeCacheModel.label = getLabel();

		String label = studentCourseFeeCacheModel.label;

		if ((label != null) && (label.length() == 0)) {
			studentCourseFeeCacheModel.label = null;
		}

		return studentCourseFeeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{spStudentCourseFeeId=");
		sb.append(getSpStudentCourseFeeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", spPEProcessStateId=");
		sb.append(getSpPEProcessStateId());
		sb.append(", feeType=");
		sb.append(getFeeType());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", order=");
		sb.append(getOrder());
		sb.append(", formula=");
		sb.append(getFormula());
		sb.append(", label=");
		sb.append(getLabel());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.StudentCourseFee");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spStudentCourseFeeId</column-name><column-value><![CDATA[");
		sb.append(getSpStudentCourseFeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPEProcessStateId</column-name><column-value><![CDATA[");
		sb.append(getSpPEProcessStateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feeType</column-name><column-value><![CDATA[");
		sb.append(getFeeType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order</column-name><column-value><![CDATA[");
		sb.append(getOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formula</column-name><column-value><![CDATA[");
		sb.append(getFormula());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>label</column-name><column-value><![CDATA[");
		sb.append(getLabel());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StudentCourseFee.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StudentCourseFee.class
		};
	private long _spStudentCourseFeeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _spPEProcessStateId;
	private long _originalSpPEProcessStateId;
	private boolean _setOriginalSpPEProcessStateId;
	private String _feeType;
	private String _originalFeeType;
	private String _amount;
	private int _order;
	private String _formula;
	private String _label;
	private long _columnBitmask;
	private StudentCourseFee _escapedModel;
}
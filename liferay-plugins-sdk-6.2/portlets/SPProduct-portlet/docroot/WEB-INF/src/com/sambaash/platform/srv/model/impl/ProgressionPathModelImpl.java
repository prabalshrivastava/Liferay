/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.ProgressionPath;
import com.sambaash.platform.srv.model.ProgressionPathModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ProgressionPath service. Represents a row in the &quot;SPProgressionPath&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.ProgressionPathModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProgressionPathImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see ProgressionPathImpl
 * @see com.sambaash.platform.srv.model.ProgressionPath
 * @see com.sambaash.platform.srv.model.ProgressionPathModel
 * @generated
 */
public class ProgressionPathModelImpl extends BaseModelImpl<ProgressionPath>
	implements ProgressionPathModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a progression path model instance should use the {@link com.sambaash.platform.srv.model.ProgressionPath} interface instead.
	 */
	public static final String TABLE_NAME = "SPProgressionPath";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spProgressionPathId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "careerLevel", Types.BIGINT },
			{ "level", Types.INTEGER },
			{ "progressionType", Types.BIGINT },
			{ "progressionCategory", Types.BIGINT },
			{ "startMonth", Types.VARCHAR },
			{ "endMonth", Types.VARCHAR },
			{ "duration", Types.VARCHAR },
			{ "optionalMandatory", Types.VARCHAR },
			{ "spCourseId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPProgressionPath (spProgressionPathId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,careerLevel BIGINT(20),level INTEGER,progressionType BIGINT(20),progressionCategory BIGINT(20),startMonth VARCHAR(75) null,endMonth VARCHAR(75) null,duration VARCHAR(75) null,optionalMandatory VARCHAR(75) null,spCourseId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPProgressionPath";
	public static final String ORDER_BY_JPQL = " ORDER BY progressionPath.spCourseId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPProgressionPath.spCourseId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.ProgressionPath"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.ProgressionPath"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.ProgressionPath"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long SPCOURSEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.ProgressionPath"));

	public ProgressionPathModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spProgressionPathId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpProgressionPathId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spProgressionPathId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProgressionPath.class;
	}

	@Override
	public String getModelClassName() {
		return ProgressionPath.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spProgressionPathId", getSpProgressionPathId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("careerLevel", getCareerLevel());
		attributes.put("level", getLevel());
		attributes.put("progressionType", getProgressionType());
		attributes.put("progressionCategory", getProgressionCategory());
		attributes.put("startMonth", getStartMonth());
		attributes.put("endMonth", getEndMonth());
		attributes.put("duration", getDuration());
		attributes.put("optionalMandatory", getOptionalMandatory());
		attributes.put("spCourseId", getSpCourseId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spProgressionPathId = (Long)attributes.get("spProgressionPathId");

		if (spProgressionPathId != null) {
			setSpProgressionPathId(spProgressionPathId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long careerLevel = (Long)attributes.get("careerLevel");

		if (careerLevel != null) {
			setCareerLevel(careerLevel);
		}

		Integer level = (Integer)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		Long progressionType = (Long)attributes.get("progressionType");

		if (progressionType != null) {
			setProgressionType(progressionType);
		}

		Long progressionCategory = (Long)attributes.get("progressionCategory");

		if (progressionCategory != null) {
			setProgressionCategory(progressionCategory);
		}

		String startMonth = (String)attributes.get("startMonth");

		if (startMonth != null) {
			setStartMonth(startMonth);
		}

		String endMonth = (String)attributes.get("endMonth");

		if (endMonth != null) {
			setEndMonth(endMonth);
		}

		String duration = (String)attributes.get("duration");

		if (duration != null) {
			setDuration(duration);
		}

		String optionalMandatory = (String)attributes.get("optionalMandatory");

		if (optionalMandatory != null) {
			setOptionalMandatory(optionalMandatory);
		}

		Long spCourseId = (Long)attributes.get("spCourseId");

		if (spCourseId != null) {
			setSpCourseId(spCourseId);
		}
	}

	@Override
	public long getSpProgressionPathId() {
		return _spProgressionPathId;
	}

	@Override
	public void setSpProgressionPathId(long spProgressionPathId) {
		_spProgressionPathId = spProgressionPathId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCareerLevel() {
		return _careerLevel;
	}

	@Override
	public void setCareerLevel(long careerLevel) {
		_careerLevel = careerLevel;
	}

	@Override
	public int getLevel() {
		return _level;
	}

	@Override
	public void setLevel(int level) {
		_level = level;
	}

	@Override
	public long getProgressionType() {
		return _progressionType;
	}

	@Override
	public void setProgressionType(long progressionType) {
		_progressionType = progressionType;
	}

	@Override
	public long getProgressionCategory() {
		return _progressionCategory;
	}

	@Override
	public void setProgressionCategory(long progressionCategory) {
		_progressionCategory = progressionCategory;
	}

	@Override
	public String getStartMonth() {
		if (_startMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _startMonth;
		}
	}

	@Override
	public void setStartMonth(String startMonth) {
		_startMonth = startMonth;
	}

	@Override
	public String getEndMonth() {
		if (_endMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _endMonth;
		}
	}

	@Override
	public void setEndMonth(String endMonth) {
		_endMonth = endMonth;
	}

	@Override
	public String getDuration() {
		if (_duration == null) {
			return StringPool.BLANK;
		}
		else {
			return _duration;
		}
	}

	@Override
	public void setDuration(String duration) {
		_duration = duration;
	}

	@Override
	public String getOptionalMandatory() {
		if (_optionalMandatory == null) {
			return StringPool.BLANK;
		}
		else {
			return _optionalMandatory;
		}
	}

	@Override
	public void setOptionalMandatory(String optionalMandatory) {
		_optionalMandatory = optionalMandatory;
	}

	@Override
	public long getSpCourseId() {
		return _spCourseId;
	}

	@Override
	public void setSpCourseId(long spCourseId) {
		_columnBitmask = -1L;

		if (!_setOriginalSpCourseId) {
			_setOriginalSpCourseId = true;

			_originalSpCourseId = _spCourseId;
		}

		_spCourseId = spCourseId;
	}

	public long getOriginalSpCourseId() {
		return _originalSpCourseId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ProgressionPath.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProgressionPath toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ProgressionPath)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProgressionPathImpl progressionPathImpl = new ProgressionPathImpl();

		progressionPathImpl.setSpProgressionPathId(getSpProgressionPathId());
		progressionPathImpl.setGroupId(getGroupId());
		progressionPathImpl.setCompanyId(getCompanyId());
		progressionPathImpl.setUserId(getUserId());
		progressionPathImpl.setUserName(getUserName());
		progressionPathImpl.setCreateDate(getCreateDate());
		progressionPathImpl.setModifiedDate(getModifiedDate());
		progressionPathImpl.setCareerLevel(getCareerLevel());
		progressionPathImpl.setLevel(getLevel());
		progressionPathImpl.setProgressionType(getProgressionType());
		progressionPathImpl.setProgressionCategory(getProgressionCategory());
		progressionPathImpl.setStartMonth(getStartMonth());
		progressionPathImpl.setEndMonth(getEndMonth());
		progressionPathImpl.setDuration(getDuration());
		progressionPathImpl.setOptionalMandatory(getOptionalMandatory());
		progressionPathImpl.setSpCourseId(getSpCourseId());

		progressionPathImpl.resetOriginalValues();

		return progressionPathImpl;
	}

	@Override
	public int compareTo(ProgressionPath progressionPath) {
		int value = 0;

		if (getSpCourseId() < progressionPath.getSpCourseId()) {
			value = -1;
		}
		else if (getSpCourseId() > progressionPath.getSpCourseId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProgressionPath)) {
			return false;
		}

		ProgressionPath progressionPath = (ProgressionPath)obj;

		long primaryKey = progressionPath.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ProgressionPathModelImpl progressionPathModelImpl = this;

		progressionPathModelImpl._originalGroupId = progressionPathModelImpl._groupId;

		progressionPathModelImpl._setOriginalGroupId = false;

		progressionPathModelImpl._originalSpCourseId = progressionPathModelImpl._spCourseId;

		progressionPathModelImpl._setOriginalSpCourseId = false;

		progressionPathModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ProgressionPath> toCacheModel() {
		ProgressionPathCacheModel progressionPathCacheModel = new ProgressionPathCacheModel();

		progressionPathCacheModel.spProgressionPathId = getSpProgressionPathId();

		progressionPathCacheModel.groupId = getGroupId();

		progressionPathCacheModel.companyId = getCompanyId();

		progressionPathCacheModel.userId = getUserId();

		progressionPathCacheModel.userName = getUserName();

		String userName = progressionPathCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			progressionPathCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			progressionPathCacheModel.createDate = createDate.getTime();
		}
		else {
			progressionPathCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			progressionPathCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			progressionPathCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		progressionPathCacheModel.careerLevel = getCareerLevel();

		progressionPathCacheModel.level = getLevel();

		progressionPathCacheModel.progressionType = getProgressionType();

		progressionPathCacheModel.progressionCategory = getProgressionCategory();

		progressionPathCacheModel.startMonth = getStartMonth();

		String startMonth = progressionPathCacheModel.startMonth;

		if ((startMonth != null) && (startMonth.length() == 0)) {
			progressionPathCacheModel.startMonth = null;
		}

		progressionPathCacheModel.endMonth = getEndMonth();

		String endMonth = progressionPathCacheModel.endMonth;

		if ((endMonth != null) && (endMonth.length() == 0)) {
			progressionPathCacheModel.endMonth = null;
		}

		progressionPathCacheModel.duration = getDuration();

		String duration = progressionPathCacheModel.duration;

		if ((duration != null) && (duration.length() == 0)) {
			progressionPathCacheModel.duration = null;
		}

		progressionPathCacheModel.optionalMandatory = getOptionalMandatory();

		String optionalMandatory = progressionPathCacheModel.optionalMandatory;

		if ((optionalMandatory != null) && (optionalMandatory.length() == 0)) {
			progressionPathCacheModel.optionalMandatory = null;
		}

		progressionPathCacheModel.spCourseId = getSpCourseId();

		return progressionPathCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{spProgressionPathId=");
		sb.append(getSpProgressionPathId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", careerLevel=");
		sb.append(getCareerLevel());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", progressionType=");
		sb.append(getProgressionType());
		sb.append(", progressionCategory=");
		sb.append(getProgressionCategory());
		sb.append(", startMonth=");
		sb.append(getStartMonth());
		sb.append(", endMonth=");
		sb.append(getEndMonth());
		sb.append(", duration=");
		sb.append(getDuration());
		sb.append(", optionalMandatory=");
		sb.append(getOptionalMandatory());
		sb.append(", spCourseId=");
		sb.append(getSpCourseId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.ProgressionPath");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spProgressionPathId</column-name><column-value><![CDATA[");
		sb.append(getSpProgressionPathId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>careerLevel</column-name><column-value><![CDATA[");
		sb.append(getCareerLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>progressionType</column-name><column-value><![CDATA[");
		sb.append(getProgressionType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>progressionCategory</column-name><column-value><![CDATA[");
		sb.append(getProgressionCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startMonth</column-name><column-value><![CDATA[");
		sb.append(getStartMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endMonth</column-name><column-value><![CDATA[");
		sb.append(getEndMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>duration</column-name><column-value><![CDATA[");
		sb.append(getDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>optionalMandatory</column-name><column-value><![CDATA[");
		sb.append(getOptionalMandatory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCourseId</column-name><column-value><![CDATA[");
		sb.append(getSpCourseId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ProgressionPath.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ProgressionPath.class
		};
	private long _spProgressionPathId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _careerLevel;
	private int _level;
	private long _progressionType;
	private long _progressionCategory;
	private String _startMonth;
	private String _endMonth;
	private String _duration;
	private String _optionalMandatory;
	private long _spCourseId;
	private long _originalSpCourseId;
	private boolean _setOriginalSpCourseId;
	private long _columnBitmask;
	private ProgressionPath _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.rsvp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.rsvp.model.RsvpDetail;
import com.sambaash.platform.srv.rsvp.model.RsvpDetailModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RsvpDetail service. Represents a row in the &quot;SPRsvpDetail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.rsvp.model.RsvpDetailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RsvpDetailImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see RsvpDetailImpl
 * @see com.sambaash.platform.srv.rsvp.model.RsvpDetail
 * @see com.sambaash.platform.srv.rsvp.model.RsvpDetailModel
 * @generated
 */
public class RsvpDetailModelImpl extends BaseModelImpl<RsvpDetail>
	implements RsvpDetailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rsvp detail model instance should use the {@link com.sambaash.platform.srv.rsvp.model.RsvpDetail} interface instead.
	 */
	public static final String TABLE_NAME = "SPRsvpDetail";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spRsvpDetailId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spRsvpId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "identifiactionType", Types.VARCHAR },
			{ "nric", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "rsvpStatus", Types.INTEGER },
			{ "source", Types.INTEGER },
			{ "attendance", Types.INTEGER },
			{ "attendanceBy", Types.BIGINT },
			{ "attendanceDate", Types.TIMESTAMP },
			{ "rsvpStatusDate", Types.TIMESTAMP },
			{ "rsvpStatusBy", Types.BIGINT },
			{ "numberOfPeople", Types.INTEGER },
			{ "streetAddress1", Types.VARCHAR },
			{ "streetAddress2", Types.VARCHAR },
			{ "postalCode", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "country", Types.VARCHAR },
			{ "state_", Types.VARCHAR },
			{ "gender", Types.VARCHAR },
			{ "phoneNumber1", Types.VARCHAR },
			{ "phoneNumber2", Types.VARCHAR },
			{ "hearAboutUs", Types.VARCHAR },
			{ "attendedWebinar", Types.VARCHAR },
			{ "ageGroup", Types.VARCHAR },
			{ "termsOfUse", Types.BOOLEAN },
			{ "ageRestriction", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table SPRsvpDetail (uuid_ VARCHAR(75) null,spRsvpDetailId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spRsvpId BIGINT(20),userId BIGINT(20),firstName VARCHAR(75) null,lastName VARCHAR(75) null,identifiactionType VARCHAR(75) null,nric VARCHAR(75) null,emailAddress VARCHAR(75) null,rsvpStatus INTEGER,source INTEGER,attendance INTEGER,attendanceBy BIGINT(20),attendanceDate DATETIME null,rsvpStatusDate DATETIME null,rsvpStatusBy BIGINT(20),numberOfPeople INTEGER,streetAddress1 VARCHAR(200) null,streetAddress2 VARCHAR(200) null,postalCode VARCHAR(75) null,city VARCHAR(75) null,country VARCHAR(75) null,state_ VARCHAR(75) null,gender VARCHAR(75) null,phoneNumber1 VARCHAR(16) null,phoneNumber2 VARCHAR(16) null,hearAboutUs VARCHAR(100) null,attendedWebinar VARCHAR(75) null,ageGroup VARCHAR(75) null,termsOfUse BOOLEAN,ageRestriction BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table SPRsvpDetail";
	public static final String ORDER_BY_JPQL = " ORDER BY rsvpDetail.rsvpDetailId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPRsvpDetail.spRsvpDetailId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.rsvp.model.RsvpDetail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.rsvp.model.RsvpDetail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.rsvp.model.RsvpDetail"),
			true);
	public static long ATTENDANCE_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long EMAILADDRESS_COLUMN_BITMASK = 4L;
	public static long FIRSTNAME_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long RSVPID_COLUMN_BITMASK = 32L;
	public static long RSVPSTATUS_COLUMN_BITMASK = 64L;
	public static long SOURCE_COLUMN_BITMASK = 128L;
	public static long UUID_COLUMN_BITMASK = 256L;
	public static long RSVPDETAILID_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.rsvp.model.RsvpDetail"));

	public RsvpDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _rsvpDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRsvpDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rsvpDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RsvpDetail.class;
	}

	@Override
	public String getModelClassName() {
		return RsvpDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("rsvpDetailId", getRsvpDetailId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("rsvpId", getRsvpId());
		attributes.put("userId", getUserId());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("identifiactionType", getIdentifiactionType());
		attributes.put("nric", getNric());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("rsvpStatus", getRsvpStatus());
		attributes.put("source", getSource());
		attributes.put("attendance", getAttendance());
		attributes.put("attendanceBy", getAttendanceBy());
		attributes.put("attendanceDate", getAttendanceDate());
		attributes.put("rsvpStatusDate", getRsvpStatusDate());
		attributes.put("rsvpStatusBy", getRsvpStatusBy());
		attributes.put("numberOfPeople", getNumberOfPeople());
		attributes.put("streetAddress1", getStreetAddress1());
		attributes.put("streetAddress2", getStreetAddress2());
		attributes.put("postalCode", getPostalCode());
		attributes.put("city", getCity());
		attributes.put("country", getCountry());
		attributes.put("state", getState());
		attributes.put("gender", getGender());
		attributes.put("phoneNumber1", getPhoneNumber1());
		attributes.put("phoneNumber2", getPhoneNumber2());
		attributes.put("hearAboutUs", getHearAboutUs());
		attributes.put("attendedWebinar", getAttendedWebinar());
		attributes.put("ageGroup", getAgeGroup());
		attributes.put("termsOfUse", getTermsOfUse());
		attributes.put("ageRestriction", getAgeRestriction());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long rsvpDetailId = (Long)attributes.get("rsvpDetailId");

		if (rsvpDetailId != null) {
			setRsvpDetailId(rsvpDetailId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long rsvpId = (Long)attributes.get("rsvpId");

		if (rsvpId != null) {
			setRsvpId(rsvpId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String identifiactionType = (String)attributes.get("identifiactionType");

		if (identifiactionType != null) {
			setIdentifiactionType(identifiactionType);
		}

		String nric = (String)attributes.get("nric");

		if (nric != null) {
			setNric(nric);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		Integer rsvpStatus = (Integer)attributes.get("rsvpStatus");

		if (rsvpStatus != null) {
			setRsvpStatus(rsvpStatus);
		}

		Integer source = (Integer)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		Integer attendance = (Integer)attributes.get("attendance");

		if (attendance != null) {
			setAttendance(attendance);
		}

		Long attendanceBy = (Long)attributes.get("attendanceBy");

		if (attendanceBy != null) {
			setAttendanceBy(attendanceBy);
		}

		Date attendanceDate = (Date)attributes.get("attendanceDate");

		if (attendanceDate != null) {
			setAttendanceDate(attendanceDate);
		}

		Date rsvpStatusDate = (Date)attributes.get("rsvpStatusDate");

		if (rsvpStatusDate != null) {
			setRsvpStatusDate(rsvpStatusDate);
		}

		Long rsvpStatusBy = (Long)attributes.get("rsvpStatusBy");

		if (rsvpStatusBy != null) {
			setRsvpStatusBy(rsvpStatusBy);
		}

		Integer numberOfPeople = (Integer)attributes.get("numberOfPeople");

		if (numberOfPeople != null) {
			setNumberOfPeople(numberOfPeople);
		}

		String streetAddress1 = (String)attributes.get("streetAddress1");

		if (streetAddress1 != null) {
			setStreetAddress1(streetAddress1);
		}

		String streetAddress2 = (String)attributes.get("streetAddress2");

		if (streetAddress2 != null) {
			setStreetAddress2(streetAddress2);
		}

		String postalCode = (String)attributes.get("postalCode");

		if (postalCode != null) {
			setPostalCode(postalCode);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String country = (String)attributes.get("country");

		if (country != null) {
			setCountry(country);
		}

		String state = (String)attributes.get("state");

		if (state != null) {
			setState(state);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String phoneNumber1 = (String)attributes.get("phoneNumber1");

		if (phoneNumber1 != null) {
			setPhoneNumber1(phoneNumber1);
		}

		String phoneNumber2 = (String)attributes.get("phoneNumber2");

		if (phoneNumber2 != null) {
			setPhoneNumber2(phoneNumber2);
		}

		String hearAboutUs = (String)attributes.get("hearAboutUs");

		if (hearAboutUs != null) {
			setHearAboutUs(hearAboutUs);
		}

		String attendedWebinar = (String)attributes.get("attendedWebinar");

		if (attendedWebinar != null) {
			setAttendedWebinar(attendedWebinar);
		}

		String ageGroup = (String)attributes.get("ageGroup");

		if (ageGroup != null) {
			setAgeGroup(ageGroup);
		}

		Boolean termsOfUse = (Boolean)attributes.get("termsOfUse");

		if (termsOfUse != null) {
			setTermsOfUse(termsOfUse);
		}

		Boolean ageRestriction = (Boolean)attributes.get("ageRestriction");

		if (ageRestriction != null) {
			setAgeRestriction(ageRestriction);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getRsvpDetailId() {
		return _rsvpDetailId;
	}

	@Override
	public void setRsvpDetailId(long rsvpDetailId) {
		_rsvpDetailId = rsvpDetailId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getRsvpId() {
		return _rsvpId;
	}

	@Override
	public void setRsvpId(long rsvpId) {
		_columnBitmask |= RSVPID_COLUMN_BITMASK;

		if (!_setOriginalRsvpId) {
			_setOriginalRsvpId = true;

			_originalRsvpId = _rsvpId;
		}

		_rsvpId = rsvpId;
	}

	public long getOriginalRsvpId() {
		return _originalRsvpId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_columnBitmask |= FIRSTNAME_COLUMN_BITMASK;

		if (_originalFirstName == null) {
			_originalFirstName = _firstName;
		}

		_firstName = firstName;
	}

	public String getOriginalFirstName() {
		return GetterUtil.getString(_originalFirstName);
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getIdentifiactionType() {
		if (_identifiactionType == null) {
			return StringPool.BLANK;
		}
		else {
			return _identifiactionType;
		}
	}

	@Override
	public void setIdentifiactionType(String identifiactionType) {
		_identifiactionType = identifiactionType;
	}

	@Override
	public String getNric() {
		if (_nric == null) {
			return StringPool.BLANK;
		}
		else {
			return _nric;
		}
	}

	@Override
	public void setNric(String nric) {
		_nric = nric;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_columnBitmask |= EMAILADDRESS_COLUMN_BITMASK;

		if (_originalEmailAddress == null) {
			_originalEmailAddress = _emailAddress;
		}

		_emailAddress = emailAddress;
	}

	public String getOriginalEmailAddress() {
		return GetterUtil.getString(_originalEmailAddress);
	}

	@Override
	public int getRsvpStatus() {
		return _rsvpStatus;
	}

	@Override
	public void setRsvpStatus(int rsvpStatus) {
		_columnBitmask |= RSVPSTATUS_COLUMN_BITMASK;

		if (!_setOriginalRsvpStatus) {
			_setOriginalRsvpStatus = true;

			_originalRsvpStatus = _rsvpStatus;
		}

		_rsvpStatus = rsvpStatus;
	}

	public int getOriginalRsvpStatus() {
		return _originalRsvpStatus;
	}

	@Override
	public int getSource() {
		return _source;
	}

	@Override
	public void setSource(int source) {
		_columnBitmask |= SOURCE_COLUMN_BITMASK;

		if (!_setOriginalSource) {
			_setOriginalSource = true;

			_originalSource = _source;
		}

		_source = source;
	}

	public int getOriginalSource() {
		return _originalSource;
	}

	@Override
	public int getAttendance() {
		return _attendance;
	}

	@Override
	public void setAttendance(int attendance) {
		_columnBitmask |= ATTENDANCE_COLUMN_BITMASK;

		if (!_setOriginalAttendance) {
			_setOriginalAttendance = true;

			_originalAttendance = _attendance;
		}

		_attendance = attendance;
	}

	public int getOriginalAttendance() {
		return _originalAttendance;
	}

	@Override
	public long getAttendanceBy() {
		return _attendanceBy;
	}

	@Override
	public void setAttendanceBy(long attendanceBy) {
		_attendanceBy = attendanceBy;
	}

	@Override
	public Date getAttendanceDate() {
		return _attendanceDate;
	}

	@Override
	public void setAttendanceDate(Date attendanceDate) {
		_attendanceDate = attendanceDate;
	}

	@Override
	public Date getRsvpStatusDate() {
		return _rsvpStatusDate;
	}

	@Override
	public void setRsvpStatusDate(Date rsvpStatusDate) {
		_rsvpStatusDate = rsvpStatusDate;
	}

	@Override
	public long getRsvpStatusBy() {
		return _rsvpStatusBy;
	}

	@Override
	public void setRsvpStatusBy(long rsvpStatusBy) {
		_rsvpStatusBy = rsvpStatusBy;
	}

	@Override
	public int getNumberOfPeople() {
		return _numberOfPeople;
	}

	@Override
	public void setNumberOfPeople(int numberOfPeople) {
		_numberOfPeople = numberOfPeople;
	}

	@Override
	public String getStreetAddress1() {
		if (_streetAddress1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _streetAddress1;
		}
	}

	@Override
	public void setStreetAddress1(String streetAddress1) {
		_streetAddress1 = streetAddress1;
	}

	@Override
	public String getStreetAddress2() {
		if (_streetAddress2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _streetAddress2;
		}
	}

	@Override
	public void setStreetAddress2(String streetAddress2) {
		_streetAddress2 = streetAddress2;
	}

	@Override
	public String getPostalCode() {
		if (_postalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _postalCode;
		}
	}

	@Override
	public void setPostalCode(String postalCode) {
		_postalCode = postalCode;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public String getCountry() {
		if (_country == null) {
			return StringPool.BLANK;
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		_country = country;
	}

	@Override
	public String getState() {
		if (_state == null) {
			return StringPool.BLANK;
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		_state = state;
	}

	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@Override
	public String getPhoneNumber1() {
		if (_phoneNumber1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _phoneNumber1;
		}
	}

	@Override
	public void setPhoneNumber1(String phoneNumber1) {
		_phoneNumber1 = phoneNumber1;
	}

	@Override
	public String getPhoneNumber2() {
		if (_phoneNumber2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _phoneNumber2;
		}
	}

	@Override
	public void setPhoneNumber2(String phoneNumber2) {
		_phoneNumber2 = phoneNumber2;
	}

	@Override
	public String getHearAboutUs() {
		if (_hearAboutUs == null) {
			return StringPool.BLANK;
		}
		else {
			return _hearAboutUs;
		}
	}

	@Override
	public void setHearAboutUs(String hearAboutUs) {
		_hearAboutUs = hearAboutUs;
	}

	@Override
	public String getAttendedWebinar() {
		if (_attendedWebinar == null) {
			return StringPool.BLANK;
		}
		else {
			return _attendedWebinar;
		}
	}

	@Override
	public void setAttendedWebinar(String attendedWebinar) {
		_attendedWebinar = attendedWebinar;
	}

	@Override
	public String getAgeGroup() {
		if (_ageGroup == null) {
			return StringPool.BLANK;
		}
		else {
			return _ageGroup;
		}
	}

	@Override
	public void setAgeGroup(String ageGroup) {
		_ageGroup = ageGroup;
	}

	@Override
	public boolean getTermsOfUse() {
		return _termsOfUse;
	}

	@Override
	public boolean isTermsOfUse() {
		return _termsOfUse;
	}

	@Override
	public void setTermsOfUse(boolean termsOfUse) {
		_termsOfUse = termsOfUse;
	}

	@Override
	public boolean getAgeRestriction() {
		return _ageRestriction;
	}

	@Override
	public boolean isAgeRestriction() {
		return _ageRestriction;
	}

	@Override
	public void setAgeRestriction(boolean ageRestriction) {
		_ageRestriction = ageRestriction;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				RsvpDetail.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			RsvpDetail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RsvpDetail toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RsvpDetail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RsvpDetailImpl rsvpDetailImpl = new RsvpDetailImpl();

		rsvpDetailImpl.setUuid(getUuid());
		rsvpDetailImpl.setRsvpDetailId(getRsvpDetailId());
		rsvpDetailImpl.setGroupId(getGroupId());
		rsvpDetailImpl.setCompanyId(getCompanyId());
		rsvpDetailImpl.setUserName(getUserName());
		rsvpDetailImpl.setCreateDate(getCreateDate());
		rsvpDetailImpl.setModifiedDate(getModifiedDate());
		rsvpDetailImpl.setRsvpId(getRsvpId());
		rsvpDetailImpl.setUserId(getUserId());
		rsvpDetailImpl.setFirstName(getFirstName());
		rsvpDetailImpl.setLastName(getLastName());
		rsvpDetailImpl.setIdentifiactionType(getIdentifiactionType());
		rsvpDetailImpl.setNric(getNric());
		rsvpDetailImpl.setEmailAddress(getEmailAddress());
		rsvpDetailImpl.setRsvpStatus(getRsvpStatus());
		rsvpDetailImpl.setSource(getSource());
		rsvpDetailImpl.setAttendance(getAttendance());
		rsvpDetailImpl.setAttendanceBy(getAttendanceBy());
		rsvpDetailImpl.setAttendanceDate(getAttendanceDate());
		rsvpDetailImpl.setRsvpStatusDate(getRsvpStatusDate());
		rsvpDetailImpl.setRsvpStatusBy(getRsvpStatusBy());
		rsvpDetailImpl.setNumberOfPeople(getNumberOfPeople());
		rsvpDetailImpl.setStreetAddress1(getStreetAddress1());
		rsvpDetailImpl.setStreetAddress2(getStreetAddress2());
		rsvpDetailImpl.setPostalCode(getPostalCode());
		rsvpDetailImpl.setCity(getCity());
		rsvpDetailImpl.setCountry(getCountry());
		rsvpDetailImpl.setState(getState());
		rsvpDetailImpl.setGender(getGender());
		rsvpDetailImpl.setPhoneNumber1(getPhoneNumber1());
		rsvpDetailImpl.setPhoneNumber2(getPhoneNumber2());
		rsvpDetailImpl.setHearAboutUs(getHearAboutUs());
		rsvpDetailImpl.setAttendedWebinar(getAttendedWebinar());
		rsvpDetailImpl.setAgeGroup(getAgeGroup());
		rsvpDetailImpl.setTermsOfUse(getTermsOfUse());
		rsvpDetailImpl.setAgeRestriction(getAgeRestriction());

		rsvpDetailImpl.resetOriginalValues();

		return rsvpDetailImpl;
	}

	@Override
	public int compareTo(RsvpDetail rsvpDetail) {
		long primaryKey = rsvpDetail.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RsvpDetail)) {
			return false;
		}

		RsvpDetail rsvpDetail = (RsvpDetail)obj;

		long primaryKey = rsvpDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RsvpDetailModelImpl rsvpDetailModelImpl = this;

		rsvpDetailModelImpl._originalUuid = rsvpDetailModelImpl._uuid;

		rsvpDetailModelImpl._originalGroupId = rsvpDetailModelImpl._groupId;

		rsvpDetailModelImpl._setOriginalGroupId = false;

		rsvpDetailModelImpl._originalCompanyId = rsvpDetailModelImpl._companyId;

		rsvpDetailModelImpl._setOriginalCompanyId = false;

		rsvpDetailModelImpl._originalRsvpId = rsvpDetailModelImpl._rsvpId;

		rsvpDetailModelImpl._setOriginalRsvpId = false;

		rsvpDetailModelImpl._originalFirstName = rsvpDetailModelImpl._firstName;

		rsvpDetailModelImpl._originalEmailAddress = rsvpDetailModelImpl._emailAddress;

		rsvpDetailModelImpl._originalRsvpStatus = rsvpDetailModelImpl._rsvpStatus;

		rsvpDetailModelImpl._setOriginalRsvpStatus = false;

		rsvpDetailModelImpl._originalSource = rsvpDetailModelImpl._source;

		rsvpDetailModelImpl._setOriginalSource = false;

		rsvpDetailModelImpl._originalAttendance = rsvpDetailModelImpl._attendance;

		rsvpDetailModelImpl._setOriginalAttendance = false;

		rsvpDetailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RsvpDetail> toCacheModel() {
		RsvpDetailCacheModel rsvpDetailCacheModel = new RsvpDetailCacheModel();

		rsvpDetailCacheModel.uuid = getUuid();

		String uuid = rsvpDetailCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			rsvpDetailCacheModel.uuid = null;
		}

		rsvpDetailCacheModel.rsvpDetailId = getRsvpDetailId();

		rsvpDetailCacheModel.groupId = getGroupId();

		rsvpDetailCacheModel.companyId = getCompanyId();

		rsvpDetailCacheModel.userName = getUserName();

		String userName = rsvpDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			rsvpDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			rsvpDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			rsvpDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			rsvpDetailCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			rsvpDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		rsvpDetailCacheModel.rsvpId = getRsvpId();

		rsvpDetailCacheModel.userId = getUserId();

		rsvpDetailCacheModel.firstName = getFirstName();

		String firstName = rsvpDetailCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			rsvpDetailCacheModel.firstName = null;
		}

		rsvpDetailCacheModel.lastName = getLastName();

		String lastName = rsvpDetailCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			rsvpDetailCacheModel.lastName = null;
		}

		rsvpDetailCacheModel.identifiactionType = getIdentifiactionType();

		String identifiactionType = rsvpDetailCacheModel.identifiactionType;

		if ((identifiactionType != null) && (identifiactionType.length() == 0)) {
			rsvpDetailCacheModel.identifiactionType = null;
		}

		rsvpDetailCacheModel.nric = getNric();

		String nric = rsvpDetailCacheModel.nric;

		if ((nric != null) && (nric.length() == 0)) {
			rsvpDetailCacheModel.nric = null;
		}

		rsvpDetailCacheModel.emailAddress = getEmailAddress();

		String emailAddress = rsvpDetailCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			rsvpDetailCacheModel.emailAddress = null;
		}

		rsvpDetailCacheModel.rsvpStatus = getRsvpStatus();

		rsvpDetailCacheModel.source = getSource();

		rsvpDetailCacheModel.attendance = getAttendance();

		rsvpDetailCacheModel.attendanceBy = getAttendanceBy();

		Date attendanceDate = getAttendanceDate();

		if (attendanceDate != null) {
			rsvpDetailCacheModel.attendanceDate = attendanceDate.getTime();
		}
		else {
			rsvpDetailCacheModel.attendanceDate = Long.MIN_VALUE;
		}

		Date rsvpStatusDate = getRsvpStatusDate();

		if (rsvpStatusDate != null) {
			rsvpDetailCacheModel.rsvpStatusDate = rsvpStatusDate.getTime();
		}
		else {
			rsvpDetailCacheModel.rsvpStatusDate = Long.MIN_VALUE;
		}

		rsvpDetailCacheModel.rsvpStatusBy = getRsvpStatusBy();

		rsvpDetailCacheModel.numberOfPeople = getNumberOfPeople();

		rsvpDetailCacheModel.streetAddress1 = getStreetAddress1();

		String streetAddress1 = rsvpDetailCacheModel.streetAddress1;

		if ((streetAddress1 != null) && (streetAddress1.length() == 0)) {
			rsvpDetailCacheModel.streetAddress1 = null;
		}

		rsvpDetailCacheModel.streetAddress2 = getStreetAddress2();

		String streetAddress2 = rsvpDetailCacheModel.streetAddress2;

		if ((streetAddress2 != null) && (streetAddress2.length() == 0)) {
			rsvpDetailCacheModel.streetAddress2 = null;
		}

		rsvpDetailCacheModel.postalCode = getPostalCode();

		String postalCode = rsvpDetailCacheModel.postalCode;

		if ((postalCode != null) && (postalCode.length() == 0)) {
			rsvpDetailCacheModel.postalCode = null;
		}

		rsvpDetailCacheModel.city = getCity();

		String city = rsvpDetailCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			rsvpDetailCacheModel.city = null;
		}

		rsvpDetailCacheModel.country = getCountry();

		String country = rsvpDetailCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			rsvpDetailCacheModel.country = null;
		}

		rsvpDetailCacheModel.state = getState();

		String state = rsvpDetailCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			rsvpDetailCacheModel.state = null;
		}

		rsvpDetailCacheModel.gender = getGender();

		String gender = rsvpDetailCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			rsvpDetailCacheModel.gender = null;
		}

		rsvpDetailCacheModel.phoneNumber1 = getPhoneNumber1();

		String phoneNumber1 = rsvpDetailCacheModel.phoneNumber1;

		if ((phoneNumber1 != null) && (phoneNumber1.length() == 0)) {
			rsvpDetailCacheModel.phoneNumber1 = null;
		}

		rsvpDetailCacheModel.phoneNumber2 = getPhoneNumber2();

		String phoneNumber2 = rsvpDetailCacheModel.phoneNumber2;

		if ((phoneNumber2 != null) && (phoneNumber2.length() == 0)) {
			rsvpDetailCacheModel.phoneNumber2 = null;
		}

		rsvpDetailCacheModel.hearAboutUs = getHearAboutUs();

		String hearAboutUs = rsvpDetailCacheModel.hearAboutUs;

		if ((hearAboutUs != null) && (hearAboutUs.length() == 0)) {
			rsvpDetailCacheModel.hearAboutUs = null;
		}

		rsvpDetailCacheModel.attendedWebinar = getAttendedWebinar();

		String attendedWebinar = rsvpDetailCacheModel.attendedWebinar;

		if ((attendedWebinar != null) && (attendedWebinar.length() == 0)) {
			rsvpDetailCacheModel.attendedWebinar = null;
		}

		rsvpDetailCacheModel.ageGroup = getAgeGroup();

		String ageGroup = rsvpDetailCacheModel.ageGroup;

		if ((ageGroup != null) && (ageGroup.length() == 0)) {
			rsvpDetailCacheModel.ageGroup = null;
		}

		rsvpDetailCacheModel.termsOfUse = getTermsOfUse();

		rsvpDetailCacheModel.ageRestriction = getAgeRestriction();

		return rsvpDetailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(73);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", rsvpDetailId=");
		sb.append(getRsvpDetailId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", rsvpId=");
		sb.append(getRsvpId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", identifiactionType=");
		sb.append(getIdentifiactionType());
		sb.append(", nric=");
		sb.append(getNric());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", rsvpStatus=");
		sb.append(getRsvpStatus());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", attendance=");
		sb.append(getAttendance());
		sb.append(", attendanceBy=");
		sb.append(getAttendanceBy());
		sb.append(", attendanceDate=");
		sb.append(getAttendanceDate());
		sb.append(", rsvpStatusDate=");
		sb.append(getRsvpStatusDate());
		sb.append(", rsvpStatusBy=");
		sb.append(getRsvpStatusBy());
		sb.append(", numberOfPeople=");
		sb.append(getNumberOfPeople());
		sb.append(", streetAddress1=");
		sb.append(getStreetAddress1());
		sb.append(", streetAddress2=");
		sb.append(getStreetAddress2());
		sb.append(", postalCode=");
		sb.append(getPostalCode());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", country=");
		sb.append(getCountry());
		sb.append(", state=");
		sb.append(getState());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", phoneNumber1=");
		sb.append(getPhoneNumber1());
		sb.append(", phoneNumber2=");
		sb.append(getPhoneNumber2());
		sb.append(", hearAboutUs=");
		sb.append(getHearAboutUs());
		sb.append(", attendedWebinar=");
		sb.append(getAttendedWebinar());
		sb.append(", ageGroup=");
		sb.append(getAgeGroup());
		sb.append(", termsOfUse=");
		sb.append(getTermsOfUse());
		sb.append(", ageRestriction=");
		sb.append(getAgeRestriction());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(112);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.rsvp.model.RsvpDetail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpDetailId</column-name><column-value><![CDATA[");
		sb.append(getRsvpDetailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpId</column-name><column-value><![CDATA[");
		sb.append(getRsvpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identifiactionType</column-name><column-value><![CDATA[");
		sb.append(getIdentifiactionType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nric</column-name><column-value><![CDATA[");
		sb.append(getNric());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpStatus</column-name><column-value><![CDATA[");
		sb.append(getRsvpStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendance</column-name><column-value><![CDATA[");
		sb.append(getAttendance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendanceBy</column-name><column-value><![CDATA[");
		sb.append(getAttendanceBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendanceDate</column-name><column-value><![CDATA[");
		sb.append(getAttendanceDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpStatusDate</column-name><column-value><![CDATA[");
		sb.append(getRsvpStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpStatusBy</column-name><column-value><![CDATA[");
		sb.append(getRsvpStatusBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfPeople</column-name><column-value><![CDATA[");
		sb.append(getNumberOfPeople());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>streetAddress1</column-name><column-value><![CDATA[");
		sb.append(getStreetAddress1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>streetAddress2</column-name><column-value><![CDATA[");
		sb.append(getStreetAddress2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalCode</column-name><column-value><![CDATA[");
		sb.append(getPostalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>country</column-name><column-value><![CDATA[");
		sb.append(getCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state</column-name><column-value><![CDATA[");
		sb.append(getState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneNumber1</column-name><column-value><![CDATA[");
		sb.append(getPhoneNumber1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneNumber2</column-name><column-value><![CDATA[");
		sb.append(getPhoneNumber2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hearAboutUs</column-name><column-value><![CDATA[");
		sb.append(getHearAboutUs());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendedWebinar</column-name><column-value><![CDATA[");
		sb.append(getAttendedWebinar());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ageGroup</column-name><column-value><![CDATA[");
		sb.append(getAgeGroup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>termsOfUse</column-name><column-value><![CDATA[");
		sb.append(getTermsOfUse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ageRestriction</column-name><column-value><![CDATA[");
		sb.append(getAgeRestriction());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RsvpDetail.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RsvpDetail.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _rsvpDetailId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _rsvpId;
	private long _originalRsvpId;
	private boolean _setOriginalRsvpId;
	private long _userId;
	private String _userUuid;
	private String _firstName;
	private String _originalFirstName;
	private String _lastName;
	private String _identifiactionType;
	private String _nric;
	private String _emailAddress;
	private String _originalEmailAddress;
	private int _rsvpStatus;
	private int _originalRsvpStatus;
	private boolean _setOriginalRsvpStatus;
	private int _source;
	private int _originalSource;
	private boolean _setOriginalSource;
	private int _attendance;
	private int _originalAttendance;
	private boolean _setOriginalAttendance;
	private long _attendanceBy;
	private Date _attendanceDate;
	private Date _rsvpStatusDate;
	private long _rsvpStatusBy;
	private int _numberOfPeople;
	private String _streetAddress1;
	private String _streetAddress2;
	private String _postalCode;
	private String _city;
	private String _country;
	private String _state;
	private String _gender;
	private String _phoneNumber1;
	private String _phoneNumber2;
	private String _hearAboutUs;
	private String _attendedWebinar;
	private String _ageGroup;
	private boolean _termsOfUse;
	private boolean _ageRestriction;
	private long _columnBitmask;
	private RsvpDetail _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.Module;
import com.sambaash.platform.srv.model.ModuleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Module service. Represents a row in the &quot;SPModule&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.ModuleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ModuleImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see ModuleImpl
 * @see com.sambaash.platform.srv.model.Module
 * @see com.sambaash.platform.srv.model.ModuleModel
 * @generated
 */
public class ModuleModelImpl extends BaseModelImpl<Module>
	implements ModuleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a module model instance should use the {@link com.sambaash.platform.srv.model.Module} interface instead.
	 */
	public static final String TABLE_NAME = "SPModule";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spModuleId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "countryId", Types.BIGINT },
			{ "moduleCode", Types.VARCHAR },
			{ "moduleName", Types.VARCHAR },
			{ "moduleDesc", Types.VARCHAR },
			{ "moduleType", Types.BIGINT },
			{ "creditValue", Types.BIGINT },
			{ "moduleDuration", Types.VARCHAR },
			{ "noOfSessions", Types.BIGINT },
			{ "generalDesc", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPModule (spModuleId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,countryId BIGINT(20),moduleCode VARCHAR(75) null,moduleName VARCHAR(250) null,moduleDesc LONGTEXT null,moduleType BIGINT(20),creditValue BIGINT(20),moduleDuration VARCHAR(75) null,noOfSessions BIGINT(20),generalDesc LONGTEXT null)";
	public static final String TABLE_SQL_DROP = "drop table SPModule";
	public static final String ORDER_BY_JPQL = " ORDER BY module.moduleCode ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPModule.moduleCode ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.Module"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.Module"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.Module"),
			true);
	public static long COUNTRYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long MODULECODE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.Module"));

	public ModuleModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spModuleId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpModuleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spModuleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Module.class;
	}

	@Override
	public String getModelClassName() {
		return Module.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spModuleId", getSpModuleId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("countryId", getCountryId());
		attributes.put("moduleCode", getModuleCode());
		attributes.put("moduleName", getModuleName());
		attributes.put("moduleDesc", getModuleDesc());
		attributes.put("moduleType", getModuleType());
		attributes.put("creditValue", getCreditValue());
		attributes.put("moduleDuration", getModuleDuration());
		attributes.put("noOfSessions", getNoOfSessions());
		attributes.put("generalDesc", getGeneralDesc());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spModuleId = (Long)attributes.get("spModuleId");

		if (spModuleId != null) {
			setSpModuleId(spModuleId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long countryId = (Long)attributes.get("countryId");

		if (countryId != null) {
			setCountryId(countryId);
		}

		String moduleCode = (String)attributes.get("moduleCode");

		if (moduleCode != null) {
			setModuleCode(moduleCode);
		}

		String moduleName = (String)attributes.get("moduleName");

		if (moduleName != null) {
			setModuleName(moduleName);
		}

		String moduleDesc = (String)attributes.get("moduleDesc");

		if (moduleDesc != null) {
			setModuleDesc(moduleDesc);
		}

		Long moduleType = (Long)attributes.get("moduleType");

		if (moduleType != null) {
			setModuleType(moduleType);
		}

		Long creditValue = (Long)attributes.get("creditValue");

		if (creditValue != null) {
			setCreditValue(creditValue);
		}

		String moduleDuration = (String)attributes.get("moduleDuration");

		if (moduleDuration != null) {
			setModuleDuration(moduleDuration);
		}

		Long noOfSessions = (Long)attributes.get("noOfSessions");

		if (noOfSessions != null) {
			setNoOfSessions(noOfSessions);
		}

		String generalDesc = (String)attributes.get("generalDesc");

		if (generalDesc != null) {
			setGeneralDesc(generalDesc);
		}
	}

	@Override
	public long getSpModuleId() {
		return _spModuleId;
	}

	@Override
	public void setSpModuleId(long spModuleId) {
		_spModuleId = spModuleId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCountryId() {
		return _countryId;
	}

	@Override
	public void setCountryId(long countryId) {
		_columnBitmask |= COUNTRYID_COLUMN_BITMASK;

		if (!_setOriginalCountryId) {
			_setOriginalCountryId = true;

			_originalCountryId = _countryId;
		}

		_countryId = countryId;
	}

	public long getOriginalCountryId() {
		return _originalCountryId;
	}

	@Override
	public String getModuleCode() {
		if (_moduleCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleCode;
		}
	}

	@Override
	public void setModuleCode(String moduleCode) {
		_columnBitmask = -1L;

		if (_originalModuleCode == null) {
			_originalModuleCode = _moduleCode;
		}

		_moduleCode = moduleCode;
	}

	public String getOriginalModuleCode() {
		return GetterUtil.getString(_originalModuleCode);
	}

	@Override
	public String getModuleName() {
		if (_moduleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleName;
		}
	}

	@Override
	public void setModuleName(String moduleName) {
		_moduleName = moduleName;
	}

	@Override
	public String getModuleDesc() {
		if (_moduleDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleDesc;
		}
	}

	@Override
	public void setModuleDesc(String moduleDesc) {
		_moduleDesc = moduleDesc;
	}

	@Override
	public long getModuleType() {
		return _moduleType;
	}

	@Override
	public void setModuleType(long moduleType) {
		_moduleType = moduleType;
	}

	@Override
	public long getCreditValue() {
		return _creditValue;
	}

	@Override
	public void setCreditValue(long creditValue) {
		_creditValue = creditValue;
	}

	@Override
	public String getModuleDuration() {
		if (_moduleDuration == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleDuration;
		}
	}

	@Override
	public void setModuleDuration(String moduleDuration) {
		_moduleDuration = moduleDuration;
	}

	@Override
	public long getNoOfSessions() {
		return _noOfSessions;
	}

	@Override
	public void setNoOfSessions(long noOfSessions) {
		_noOfSessions = noOfSessions;
	}

	@Override
	public String getGeneralDesc() {
		if (_generalDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _generalDesc;
		}
	}

	@Override
	public void setGeneralDesc(String generalDesc) {
		_generalDesc = generalDesc;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Module.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Module toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Module)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ModuleImpl moduleImpl = new ModuleImpl();

		moduleImpl.setSpModuleId(getSpModuleId());
		moduleImpl.setGroupId(getGroupId());
		moduleImpl.setCompanyId(getCompanyId());
		moduleImpl.setUserId(getUserId());
		moduleImpl.setUserName(getUserName());
		moduleImpl.setCreateDate(getCreateDate());
		moduleImpl.setModifiedDate(getModifiedDate());
		moduleImpl.setCountryId(getCountryId());
		moduleImpl.setModuleCode(getModuleCode());
		moduleImpl.setModuleName(getModuleName());
		moduleImpl.setModuleDesc(getModuleDesc());
		moduleImpl.setModuleType(getModuleType());
		moduleImpl.setCreditValue(getCreditValue());
		moduleImpl.setModuleDuration(getModuleDuration());
		moduleImpl.setNoOfSessions(getNoOfSessions());
		moduleImpl.setGeneralDesc(getGeneralDesc());

		moduleImpl.resetOriginalValues();

		return moduleImpl;
	}

	@Override
	public int compareTo(Module module) {
		int value = 0;

		value = getModuleCode().compareTo(module.getModuleCode());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Module)) {
			return false;
		}

		Module module = (Module)obj;

		long primaryKey = module.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ModuleModelImpl moduleModelImpl = this;

		moduleModelImpl._originalGroupId = moduleModelImpl._groupId;

		moduleModelImpl._setOriginalGroupId = false;

		moduleModelImpl._originalCountryId = moduleModelImpl._countryId;

		moduleModelImpl._setOriginalCountryId = false;

		moduleModelImpl._originalModuleCode = moduleModelImpl._moduleCode;

		moduleModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Module> toCacheModel() {
		ModuleCacheModel moduleCacheModel = new ModuleCacheModel();

		moduleCacheModel.spModuleId = getSpModuleId();

		moduleCacheModel.groupId = getGroupId();

		moduleCacheModel.companyId = getCompanyId();

		moduleCacheModel.userId = getUserId();

		moduleCacheModel.userName = getUserName();

		String userName = moduleCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			moduleCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			moduleCacheModel.createDate = createDate.getTime();
		}
		else {
			moduleCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			moduleCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			moduleCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		moduleCacheModel.countryId = getCountryId();

		moduleCacheModel.moduleCode = getModuleCode();

		String moduleCode = moduleCacheModel.moduleCode;

		if ((moduleCode != null) && (moduleCode.length() == 0)) {
			moduleCacheModel.moduleCode = null;
		}

		moduleCacheModel.moduleName = getModuleName();

		String moduleName = moduleCacheModel.moduleName;

		if ((moduleName != null) && (moduleName.length() == 0)) {
			moduleCacheModel.moduleName = null;
		}

		moduleCacheModel.moduleDesc = getModuleDesc();

		String moduleDesc = moduleCacheModel.moduleDesc;

		if ((moduleDesc != null) && (moduleDesc.length() == 0)) {
			moduleCacheModel.moduleDesc = null;
		}

		moduleCacheModel.moduleType = getModuleType();

		moduleCacheModel.creditValue = getCreditValue();

		moduleCacheModel.moduleDuration = getModuleDuration();

		String moduleDuration = moduleCacheModel.moduleDuration;

		if ((moduleDuration != null) && (moduleDuration.length() == 0)) {
			moduleCacheModel.moduleDuration = null;
		}

		moduleCacheModel.noOfSessions = getNoOfSessions();

		moduleCacheModel.generalDesc = getGeneralDesc();

		String generalDesc = moduleCacheModel.generalDesc;

		if ((generalDesc != null) && (generalDesc.length() == 0)) {
			moduleCacheModel.generalDesc = null;
		}

		return moduleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{spModuleId=");
		sb.append(getSpModuleId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", countryId=");
		sb.append(getCountryId());
		sb.append(", moduleCode=");
		sb.append(getModuleCode());
		sb.append(", moduleName=");
		sb.append(getModuleName());
		sb.append(", moduleDesc=");
		sb.append(getModuleDesc());
		sb.append(", moduleType=");
		sb.append(getModuleType());
		sb.append(", creditValue=");
		sb.append(getCreditValue());
		sb.append(", moduleDuration=");
		sb.append(getModuleDuration());
		sb.append(", noOfSessions=");
		sb.append(getNoOfSessions());
		sb.append(", generalDesc=");
		sb.append(getGeneralDesc());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.Module");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spModuleId</column-name><column-value><![CDATA[");
		sb.append(getSpModuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryId</column-name><column-value><![CDATA[");
		sb.append(getCountryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleCode</column-name><column-value><![CDATA[");
		sb.append(getModuleCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleName</column-name><column-value><![CDATA[");
		sb.append(getModuleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleDesc</column-name><column-value><![CDATA[");
		sb.append(getModuleDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleType</column-name><column-value><![CDATA[");
		sb.append(getModuleType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creditValue</column-name><column-value><![CDATA[");
		sb.append(getCreditValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleDuration</column-name><column-value><![CDATA[");
		sb.append(getModuleDuration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfSessions</column-name><column-value><![CDATA[");
		sb.append(getNoOfSessions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generalDesc</column-name><column-value><![CDATA[");
		sb.append(getGeneralDesc());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Module.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Module.class };
	private long _spModuleId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _countryId;
	private long _originalCountryId;
	private boolean _setOriginalCountryId;
	private String _moduleCode;
	private String _originalModuleCode;
	private String _moduleName;
	private String _moduleDesc;
	private long _moduleType;
	private long _creditValue;
	private String _moduleDuration;
	private long _noOfSessions;
	private String _generalDesc;
	private long _columnBitmask;
	private Module _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spgroup.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.sambaash.platform.srv.spgroup.model.SPGroupUser;
import com.sambaash.platform.srv.spgroup.model.SPGroupUserModel;
import com.sambaash.platform.srv.spgroup.service.persistence.SPGroupUserPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPGroupUser service. Represents a row in the &quot;SPGroupUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spgroup.model.SPGroupUserModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPGroupUserImpl}.
 * </p>
 *
 * @author harini
 * @see SPGroupUserImpl
 * @see com.sambaash.platform.srv.spgroup.model.SPGroupUser
 * @see com.sambaash.platform.srv.spgroup.model.SPGroupUserModel
 * @generated
 */
public class SPGroupUserModelImpl extends BaseModelImpl<SPGroupUser>
	implements SPGroupUserModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p group user model instance should use the {@link com.sambaash.platform.srv.spgroup.model.SPGroupUser} interface instead.
	 */
	public static final String TABLE_NAME = "SPGroupUser";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spGroupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "joinDate", Types.TIMESTAMP },
			{ "role", Types.INTEGER },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table SPGroupUser (spGroupId BIGINT(20) not null,userId BIGINT(20) not null,groupId BIGINT(20),companyId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,joinDate DATETIME null,role INTEGER,status INTEGER,primary key (spGroupId, userId))";
	public static final String TABLE_SQL_DROP = "drop table SPGroupUser";
	public static final String ORDER_BY_JPQL = " ORDER BY spGroupUser.joinDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPGroupUser.joinDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spgroup.model.SPGroupUser"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spgroup.model.SPGroupUser"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spgroup.model.SPGroupUser"),
			true);
	public static long ROLE_COLUMN_BITMASK = 1L;
	public static long SPGROUPID_COLUMN_BITMASK = 2L;
	public static long STATUS_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long JOINDATE_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spgroup.model.SPGroupUser"));

	public SPGroupUserModelImpl() {
	}

	@Override
	public SPGroupUserPK getPrimaryKey() {
		return new SPGroupUserPK(_spGroupId, _userId);
	}

	@Override
	public void setPrimaryKey(SPGroupUserPK primaryKey) {
		setSpGroupId(primaryKey.spGroupId);
		setUserId(primaryKey.userId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new SPGroupUserPK(_spGroupId, _userId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((SPGroupUserPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return SPGroupUser.class;
	}

	@Override
	public String getModelClassName() {
		return SPGroupUser.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spGroupId", getSpGroupId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("joinDate", getJoinDate());
		attributes.put("role", getRole());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spGroupId = (Long)attributes.get("spGroupId");

		if (spGroupId != null) {
			setSpGroupId(spGroupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date joinDate = (Date)attributes.get("joinDate");

		if (joinDate != null) {
			setJoinDate(joinDate);
		}

		Integer role = (Integer)attributes.get("role");

		if (role != null) {
			setRole(role);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public long getSpGroupId() {
		return _spGroupId;
	}

	@Override
	public void setSpGroupId(long spGroupId) {
		_columnBitmask |= SPGROUPID_COLUMN_BITMASK;

		if (!_setOriginalSpGroupId) {
			_setOriginalSpGroupId = true;

			_originalSpGroupId = _spGroupId;
		}

		_spGroupId = spGroupId;
	}

	public long getOriginalSpGroupId() {
		return _originalSpGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getJoinDate() {
		return _joinDate;
	}

	@Override
	public void setJoinDate(Date joinDate) {
		_columnBitmask = -1L;

		_joinDate = joinDate;
	}

	@Override
	public int getRole() {
		return _role;
	}

	@Override
	public void setRole(int role) {
		_columnBitmask |= ROLE_COLUMN_BITMASK;

		if (!_setOriginalRole) {
			_setOriginalRole = true;

			_originalRole = _role;
		}

		_role = role;
	}

	public int getOriginalRole() {
		return _originalRole;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public SPGroupUser toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPGroupUser)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPGroupUserImpl spGroupUserImpl = new SPGroupUserImpl();

		spGroupUserImpl.setSpGroupId(getSpGroupId());
		spGroupUserImpl.setUserId(getUserId());
		spGroupUserImpl.setGroupId(getGroupId());
		spGroupUserImpl.setCompanyId(getCompanyId());
		spGroupUserImpl.setUserName(getUserName());
		spGroupUserImpl.setCreateDate(getCreateDate());
		spGroupUserImpl.setModifiedDate(getModifiedDate());
		spGroupUserImpl.setJoinDate(getJoinDate());
		spGroupUserImpl.setRole(getRole());
		spGroupUserImpl.setStatus(getStatus());

		spGroupUserImpl.resetOriginalValues();

		return spGroupUserImpl;
	}

	@Override
	public int compareTo(SPGroupUser spGroupUser) {
		int value = 0;

		value = DateUtil.compareTo(getJoinDate(), spGroupUser.getJoinDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPGroupUser)) {
			return false;
		}

		SPGroupUser spGroupUser = (SPGroupUser)obj;

		SPGroupUserPK primaryKey = spGroupUser.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		SPGroupUserModelImpl spGroupUserModelImpl = this;

		spGroupUserModelImpl._originalSpGroupId = spGroupUserModelImpl._spGroupId;

		spGroupUserModelImpl._setOriginalSpGroupId = false;

		spGroupUserModelImpl._originalUserId = spGroupUserModelImpl._userId;

		spGroupUserModelImpl._setOriginalUserId = false;

		spGroupUserModelImpl._originalRole = spGroupUserModelImpl._role;

		spGroupUserModelImpl._setOriginalRole = false;

		spGroupUserModelImpl._originalStatus = spGroupUserModelImpl._status;

		spGroupUserModelImpl._setOriginalStatus = false;

		spGroupUserModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPGroupUser> toCacheModel() {
		SPGroupUserCacheModel spGroupUserCacheModel = new SPGroupUserCacheModel();

		spGroupUserCacheModel.spGroupId = getSpGroupId();

		spGroupUserCacheModel.userId = getUserId();

		spGroupUserCacheModel.groupId = getGroupId();

		spGroupUserCacheModel.companyId = getCompanyId();

		spGroupUserCacheModel.userName = getUserName();

		String userName = spGroupUserCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spGroupUserCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spGroupUserCacheModel.createDate = createDate.getTime();
		}
		else {
			spGroupUserCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spGroupUserCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spGroupUserCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date joinDate = getJoinDate();

		if (joinDate != null) {
			spGroupUserCacheModel.joinDate = joinDate.getTime();
		}
		else {
			spGroupUserCacheModel.joinDate = Long.MIN_VALUE;
		}

		spGroupUserCacheModel.role = getRole();

		spGroupUserCacheModel.status = getStatus();

		return spGroupUserCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{spGroupId=");
		sb.append(getSpGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", joinDate=");
		sb.append(getJoinDate());
		sb.append(", role=");
		sb.append(getRole());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spgroup.model.SPGroupUser");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spGroupId</column-name><column-value><![CDATA[");
		sb.append(getSpGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>joinDate</column-name><column-value><![CDATA[");
		sb.append(getJoinDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>role</column-name><column-value><![CDATA[");
		sb.append(getRole());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPGroupUser.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPGroupUser.class
		};
	private long _spGroupId;
	private long _originalSpGroupId;
	private boolean _setOriginalSpGroupId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _groupId;
	private long _companyId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private Date _joinDate;
	private int _role;
	private int _originalRole;
	private boolean _setOriginalRole;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private SPGroupUser _escapedModel;
}
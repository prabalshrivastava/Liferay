/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.SPListType;
import com.sambaash.platform.srv.spservices.model.SPListTypeModel;
import com.sambaash.platform.srv.spservices.model.SPListTypeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SPListType service. Represents a row in the &quot;SPListType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.SPListTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPListTypeImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPListTypeImpl
 * @see com.sambaash.platform.srv.spservices.model.SPListType
 * @see com.sambaash.platform.srv.spservices.model.SPListTypeModel
 * @generated
 */
@JSON(strict = true)
public class SPListTypeModelImpl extends BaseModelImpl<SPListType>
	implements SPListTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p list type model instance should use the {@link com.sambaash.platform.srv.spservices.model.SPListType} interface instead.
	 */
	public static final String TABLE_NAME = "SPListType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spListTypeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "itemKey", Types.VARCHAR },
			{ "itemValue", Types.VARCHAR },
			{ "displayName", Types.VARCHAR },
			{ "displayOrder", Types.INTEGER },
			{ "categoryId", Types.BIGINT },
			{ "modeldata", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPListType (uuid_ VARCHAR(75) null,spListTypeId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,itemKey VARCHAR(75) null,itemValue VARCHAR(75) null,displayName VARCHAR(75) null,displayOrder INTEGER,categoryId BIGINT(20),modeldata VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPListType";
	public static final String ORDER_BY_JPQL = " ORDER BY spListType.displayOrder ASC, spListType.itemValue ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPListType.displayOrder ASC, SPListType.itemValue ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.SPListType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.SPListType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.SPListType"),
			true);
	public static long CATEGORYID_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long ITEMKEY_COLUMN_BITMASK = 8L;
	public static long ITEMVALUE_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long DISPLAYORDER_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SPListType toModel(SPListTypeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SPListType model = new SPListTypeImpl();

		model.setUuid(soapModel.getUuid());
		model.setSpListTypeId(soapModel.getSpListTypeId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setItemKey(soapModel.getItemKey());
		model.setItemValue(soapModel.getItemValue());
		model.setDisplayName(soapModel.getDisplayName());
		model.setDisplayOrder(soapModel.getDisplayOrder());
		model.setCategoryId(soapModel.getCategoryId());
		model.setModeldata(soapModel.getModeldata());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SPListType> toModels(SPListTypeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SPListType> models = new ArrayList<SPListType>(soapModels.length);

		for (SPListTypeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.SPListType"));

	public SPListTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spListTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpListTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spListTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPListType.class;
	}

	@Override
	public String getModelClassName() {
		return SPListType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spListTypeId", getSpListTypeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("itemKey", getItemKey());
		attributes.put("itemValue", getItemValue());
		attributes.put("displayName", getDisplayName());
		attributes.put("displayOrder", getDisplayOrder());
		attributes.put("categoryId", getCategoryId());
		attributes.put("modeldata", getModeldata());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spListTypeId = (Long)attributes.get("spListTypeId");

		if (spListTypeId != null) {
			setSpListTypeId(spListTypeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String itemKey = (String)attributes.get("itemKey");

		if (itemKey != null) {
			setItemKey(itemKey);
		}

		String itemValue = (String)attributes.get("itemValue");

		if (itemValue != null) {
			setItemValue(itemValue);
		}

		String displayName = (String)attributes.get("displayName");

		if (displayName != null) {
			setDisplayName(displayName);
		}

		Integer displayOrder = (Integer)attributes.get("displayOrder");

		if (displayOrder != null) {
			setDisplayOrder(displayOrder);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		String modeldata = (String)attributes.get("modeldata");

		if (modeldata != null) {
			setModeldata(modeldata);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getSpListTypeId() {
		return _spListTypeId;
	}

	@Override
	public void setSpListTypeId(long spListTypeId) {
		_spListTypeId = spListTypeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getItemKey() {
		if (_itemKey == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemKey;
		}
	}

	@Override
	public void setItemKey(String itemKey) {
		_columnBitmask |= ITEMKEY_COLUMN_BITMASK;

		if (_originalItemKey == null) {
			_originalItemKey = _itemKey;
		}

		_itemKey = itemKey;
	}

	public String getOriginalItemKey() {
		return GetterUtil.getString(_originalItemKey);
	}

	@JSON
	@Override
	public String getItemValue() {
		if (_itemValue == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemValue;
		}
	}

	@Override
	public void setItemValue(String itemValue) {
		_columnBitmask = -1L;

		if (_originalItemValue == null) {
			_originalItemValue = _itemValue;
		}

		_itemValue = itemValue;
	}

	public String getOriginalItemValue() {
		return GetterUtil.getString(_originalItemValue);
	}

	@JSON
	@Override
	public String getDisplayName() {
		if (_displayName == null) {
			return StringPool.BLANK;
		}
		else {
			return _displayName;
		}
	}

	@Override
	public void setDisplayName(String displayName) {
		_displayName = displayName;
	}

	@JSON
	@Override
	public int getDisplayOrder() {
		return _displayOrder;
	}

	@Override
	public void setDisplayOrder(int displayOrder) {
		_columnBitmask = -1L;

		_displayOrder = displayOrder;
	}

	@JSON
	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@JSON
	@Override
	public String getModeldata() {
		if (_modeldata == null) {
			return StringPool.BLANK;
		}
		else {
			return _modeldata;
		}
	}

	@Override
	public void setModeldata(String modeldata) {
		_modeldata = modeldata;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SPListType.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPListType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPListType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPListType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPListTypeImpl spListTypeImpl = new SPListTypeImpl();

		spListTypeImpl.setUuid(getUuid());
		spListTypeImpl.setSpListTypeId(getSpListTypeId());
		spListTypeImpl.setGroupId(getGroupId());
		spListTypeImpl.setCompanyId(getCompanyId());
		spListTypeImpl.setUserId(getUserId());
		spListTypeImpl.setUserName(getUserName());
		spListTypeImpl.setCreateDate(getCreateDate());
		spListTypeImpl.setModifiedDate(getModifiedDate());
		spListTypeImpl.setItemKey(getItemKey());
		spListTypeImpl.setItemValue(getItemValue());
		spListTypeImpl.setDisplayName(getDisplayName());
		spListTypeImpl.setDisplayOrder(getDisplayOrder());
		spListTypeImpl.setCategoryId(getCategoryId());
		spListTypeImpl.setModeldata(getModeldata());

		spListTypeImpl.resetOriginalValues();

		return spListTypeImpl;
	}

	@Override
	public int compareTo(SPListType spListType) {
		int value = 0;

		if (getDisplayOrder() < spListType.getDisplayOrder()) {
			value = -1;
		}
		else if (getDisplayOrder() > spListType.getDisplayOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = getItemValue().compareTo(spListType.getItemValue());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPListType)) {
			return false;
		}

		SPListType spListType = (SPListType)obj;

		long primaryKey = spListType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPListTypeModelImpl spListTypeModelImpl = this;

		spListTypeModelImpl._originalUuid = spListTypeModelImpl._uuid;

		spListTypeModelImpl._originalGroupId = spListTypeModelImpl._groupId;

		spListTypeModelImpl._setOriginalGroupId = false;

		spListTypeModelImpl._originalCompanyId = spListTypeModelImpl._companyId;

		spListTypeModelImpl._setOriginalCompanyId = false;

		spListTypeModelImpl._originalItemKey = spListTypeModelImpl._itemKey;

		spListTypeModelImpl._originalItemValue = spListTypeModelImpl._itemValue;

		spListTypeModelImpl._originalCategoryId = spListTypeModelImpl._categoryId;

		spListTypeModelImpl._setOriginalCategoryId = false;

		spListTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPListType> toCacheModel() {
		SPListTypeCacheModel spListTypeCacheModel = new SPListTypeCacheModel();

		spListTypeCacheModel.uuid = getUuid();

		String uuid = spListTypeCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spListTypeCacheModel.uuid = null;
		}

		spListTypeCacheModel.spListTypeId = getSpListTypeId();

		spListTypeCacheModel.groupId = getGroupId();

		spListTypeCacheModel.companyId = getCompanyId();

		spListTypeCacheModel.userId = getUserId();

		spListTypeCacheModel.userName = getUserName();

		String userName = spListTypeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spListTypeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spListTypeCacheModel.createDate = createDate.getTime();
		}
		else {
			spListTypeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spListTypeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spListTypeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spListTypeCacheModel.itemKey = getItemKey();

		String itemKey = spListTypeCacheModel.itemKey;

		if ((itemKey != null) && (itemKey.length() == 0)) {
			spListTypeCacheModel.itemKey = null;
		}

		spListTypeCacheModel.itemValue = getItemValue();

		String itemValue = spListTypeCacheModel.itemValue;

		if ((itemValue != null) && (itemValue.length() == 0)) {
			spListTypeCacheModel.itemValue = null;
		}

		spListTypeCacheModel.displayName = getDisplayName();

		String displayName = spListTypeCacheModel.displayName;

		if ((displayName != null) && (displayName.length() == 0)) {
			spListTypeCacheModel.displayName = null;
		}

		spListTypeCacheModel.displayOrder = getDisplayOrder();

		spListTypeCacheModel.categoryId = getCategoryId();

		spListTypeCacheModel.modeldata = getModeldata();

		String modeldata = spListTypeCacheModel.modeldata;

		if ((modeldata != null) && (modeldata.length() == 0)) {
			spListTypeCacheModel.modeldata = null;
		}

		return spListTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spListTypeId=");
		sb.append(getSpListTypeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", itemKey=");
		sb.append(getItemKey());
		sb.append(", itemValue=");
		sb.append(getItemValue());
		sb.append(", displayName=");
		sb.append(getDisplayName());
		sb.append(", displayOrder=");
		sb.append(getDisplayOrder());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", modeldata=");
		sb.append(getModeldata());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spservices.model.SPListType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spListTypeId</column-name><column-value><![CDATA[");
		sb.append(getSpListTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemKey</column-name><column-value><![CDATA[");
		sb.append(getItemKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemValue</column-name><column-value><![CDATA[");
		sb.append(getItemValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayName</column-name><column-value><![CDATA[");
		sb.append(getDisplayName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayOrder</column-name><column-value><![CDATA[");
		sb.append(getDisplayOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modeldata</column-name><column-value><![CDATA[");
		sb.append(getModeldata());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPListType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPListType.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spListTypeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _itemKey;
	private String _originalItemKey;
	private String _itemValue;
	private String _originalItemValue;
	private String _displayName;
	private int _displayOrder;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private String _modeldata;
	private long _columnBitmask;
	private SPListType _escapedModel;
}
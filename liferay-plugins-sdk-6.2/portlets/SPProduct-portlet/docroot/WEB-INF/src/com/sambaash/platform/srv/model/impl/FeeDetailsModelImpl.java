/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.FeeDetails;
import com.sambaash.platform.srv.model.FeeDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FeeDetails service. Represents a row in the &quot;SPFeeDetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.FeeDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FeeDetailsImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see FeeDetailsImpl
 * @see com.sambaash.platform.srv.model.FeeDetails
 * @see com.sambaash.platform.srv.model.FeeDetailsModel
 * @generated
 */
public class FeeDetailsModelImpl extends BaseModelImpl<FeeDetails>
	implements FeeDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a fee details model instance should use the {@link com.sambaash.platform.srv.model.FeeDetails} interface instead.
	 */
	public static final String TABLE_NAME = "SPFeeDetails";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spFeeDetailsId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "feeType", Types.BIGINT },
			{ "feeDesc", Types.VARCHAR },
			{ "calculationBase", Types.VARCHAR },
			{ "amount", Types.VARCHAR },
			{ "displayOrder", Types.BIGINT },
			{ "fundId", Types.BIGINT },
			{ "spCourseId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPFeeDetails (spFeeDetailsId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,feeType BIGINT(20),feeDesc LONGTEXT null,calculationBase VARCHAR(75) null,amount VARCHAR(75) null,displayOrder BIGINT(20),fundId BIGINT(20),spCourseId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPFeeDetails";
	public static final String ORDER_BY_JPQL = " ORDER BY feeDetails.displayOrder ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPFeeDetails.displayOrder ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.FeeDetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.FeeDetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.FeeDetails"),
			true);
	public static long FEETYPE_COLUMN_BITMASK = 1L;
	public static long FUNDID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long SPCOURSEID_COLUMN_BITMASK = 8L;
	public static long DISPLAYORDER_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.FeeDetails"));

	public FeeDetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spFeeDetailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpFeeDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spFeeDetailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return FeeDetails.class;
	}

	@Override
	public String getModelClassName() {
		return FeeDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spFeeDetailsId", getSpFeeDetailsId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("feeType", getFeeType());
		attributes.put("feeDesc", getFeeDesc());
		attributes.put("calculationBase", getCalculationBase());
		attributes.put("amount", getAmount());
		attributes.put("displayOrder", getDisplayOrder());
		attributes.put("fundId", getFundId());
		attributes.put("spCourseId", getSpCourseId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spFeeDetailsId = (Long)attributes.get("spFeeDetailsId");

		if (spFeeDetailsId != null) {
			setSpFeeDetailsId(spFeeDetailsId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long feeType = (Long)attributes.get("feeType");

		if (feeType != null) {
			setFeeType(feeType);
		}

		String feeDesc = (String)attributes.get("feeDesc");

		if (feeDesc != null) {
			setFeeDesc(feeDesc);
		}

		String calculationBase = (String)attributes.get("calculationBase");

		if (calculationBase != null) {
			setCalculationBase(calculationBase);
		}

		String amount = (String)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Long displayOrder = (Long)attributes.get("displayOrder");

		if (displayOrder != null) {
			setDisplayOrder(displayOrder);
		}

		Long fundId = (Long)attributes.get("fundId");

		if (fundId != null) {
			setFundId(fundId);
		}

		Long spCourseId = (Long)attributes.get("spCourseId");

		if (spCourseId != null) {
			setSpCourseId(spCourseId);
		}
	}

	@Override
	public long getSpFeeDetailsId() {
		return _spFeeDetailsId;
	}

	@Override
	public void setSpFeeDetailsId(long spFeeDetailsId) {
		_spFeeDetailsId = spFeeDetailsId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getFeeType() {
		return _feeType;
	}

	@Override
	public void setFeeType(long feeType) {
		_columnBitmask |= FEETYPE_COLUMN_BITMASK;

		if (!_setOriginalFeeType) {
			_setOriginalFeeType = true;

			_originalFeeType = _feeType;
		}

		_feeType = feeType;
	}

	public long getOriginalFeeType() {
		return _originalFeeType;
	}

	@Override
	public String getFeeDesc() {
		if (_feeDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _feeDesc;
		}
	}

	@Override
	public void setFeeDesc(String feeDesc) {
		_feeDesc = feeDesc;
	}

	@Override
	public String getCalculationBase() {
		if (_calculationBase == null) {
			return StringPool.BLANK;
		}
		else {
			return _calculationBase;
		}
	}

	@Override
	public void setCalculationBase(String calculationBase) {
		_calculationBase = calculationBase;
	}

	@Override
	public String getAmount() {
		if (_amount == null) {
			return StringPool.BLANK;
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		_amount = amount;
	}

	@Override
	public long getDisplayOrder() {
		return _displayOrder;
	}

	@Override
	public void setDisplayOrder(long displayOrder) {
		_columnBitmask = -1L;

		_displayOrder = displayOrder;
	}

	@Override
	public long getFundId() {
		return _fundId;
	}

	@Override
	public void setFundId(long fundId) {
		_columnBitmask |= FUNDID_COLUMN_BITMASK;

		if (!_setOriginalFundId) {
			_setOriginalFundId = true;

			_originalFundId = _fundId;
		}

		_fundId = fundId;
	}

	public long getOriginalFundId() {
		return _originalFundId;
	}

	@Override
	public long getSpCourseId() {
		return _spCourseId;
	}

	@Override
	public void setSpCourseId(long spCourseId) {
		_columnBitmask |= SPCOURSEID_COLUMN_BITMASK;

		if (!_setOriginalSpCourseId) {
			_setOriginalSpCourseId = true;

			_originalSpCourseId = _spCourseId;
		}

		_spCourseId = spCourseId;
	}

	public long getOriginalSpCourseId() {
		return _originalSpCourseId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			FeeDetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FeeDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (FeeDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		FeeDetailsImpl feeDetailsImpl = new FeeDetailsImpl();

		feeDetailsImpl.setSpFeeDetailsId(getSpFeeDetailsId());
		feeDetailsImpl.setGroupId(getGroupId());
		feeDetailsImpl.setCompanyId(getCompanyId());
		feeDetailsImpl.setUserId(getUserId());
		feeDetailsImpl.setUserName(getUserName());
		feeDetailsImpl.setCreateDate(getCreateDate());
		feeDetailsImpl.setModifiedDate(getModifiedDate());
		feeDetailsImpl.setFeeType(getFeeType());
		feeDetailsImpl.setFeeDesc(getFeeDesc());
		feeDetailsImpl.setCalculationBase(getCalculationBase());
		feeDetailsImpl.setAmount(getAmount());
		feeDetailsImpl.setDisplayOrder(getDisplayOrder());
		feeDetailsImpl.setFundId(getFundId());
		feeDetailsImpl.setSpCourseId(getSpCourseId());

		feeDetailsImpl.resetOriginalValues();

		return feeDetailsImpl;
	}

	@Override
	public int compareTo(FeeDetails feeDetails) {
		int value = 0;

		if (getDisplayOrder() < feeDetails.getDisplayOrder()) {
			value = -1;
		}
		else if (getDisplayOrder() > feeDetails.getDisplayOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof FeeDetails)) {
			return false;
		}

		FeeDetails feeDetails = (FeeDetails)obj;

		long primaryKey = feeDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FeeDetailsModelImpl feeDetailsModelImpl = this;

		feeDetailsModelImpl._originalGroupId = feeDetailsModelImpl._groupId;

		feeDetailsModelImpl._setOriginalGroupId = false;

		feeDetailsModelImpl._originalFeeType = feeDetailsModelImpl._feeType;

		feeDetailsModelImpl._setOriginalFeeType = false;

		feeDetailsModelImpl._originalFundId = feeDetailsModelImpl._fundId;

		feeDetailsModelImpl._setOriginalFundId = false;

		feeDetailsModelImpl._originalSpCourseId = feeDetailsModelImpl._spCourseId;

		feeDetailsModelImpl._setOriginalSpCourseId = false;

		feeDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FeeDetails> toCacheModel() {
		FeeDetailsCacheModel feeDetailsCacheModel = new FeeDetailsCacheModel();

		feeDetailsCacheModel.spFeeDetailsId = getSpFeeDetailsId();

		feeDetailsCacheModel.groupId = getGroupId();

		feeDetailsCacheModel.companyId = getCompanyId();

		feeDetailsCacheModel.userId = getUserId();

		feeDetailsCacheModel.userName = getUserName();

		String userName = feeDetailsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			feeDetailsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			feeDetailsCacheModel.createDate = createDate.getTime();
		}
		else {
			feeDetailsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			feeDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			feeDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		feeDetailsCacheModel.feeType = getFeeType();

		feeDetailsCacheModel.feeDesc = getFeeDesc();

		String feeDesc = feeDetailsCacheModel.feeDesc;

		if ((feeDesc != null) && (feeDesc.length() == 0)) {
			feeDetailsCacheModel.feeDesc = null;
		}

		feeDetailsCacheModel.calculationBase = getCalculationBase();

		String calculationBase = feeDetailsCacheModel.calculationBase;

		if ((calculationBase != null) && (calculationBase.length() == 0)) {
			feeDetailsCacheModel.calculationBase = null;
		}

		feeDetailsCacheModel.amount = getAmount();

		String amount = feeDetailsCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			feeDetailsCacheModel.amount = null;
		}

		feeDetailsCacheModel.displayOrder = getDisplayOrder();

		feeDetailsCacheModel.fundId = getFundId();

		feeDetailsCacheModel.spCourseId = getSpCourseId();

		return feeDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{spFeeDetailsId=");
		sb.append(getSpFeeDetailsId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", feeType=");
		sb.append(getFeeType());
		sb.append(", feeDesc=");
		sb.append(getFeeDesc());
		sb.append(", calculationBase=");
		sb.append(getCalculationBase());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", displayOrder=");
		sb.append(getDisplayOrder());
		sb.append(", fundId=");
		sb.append(getFundId());
		sb.append(", spCourseId=");
		sb.append(getSpCourseId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.FeeDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spFeeDetailsId</column-name><column-value><![CDATA[");
		sb.append(getSpFeeDetailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feeType</column-name><column-value><![CDATA[");
		sb.append(getFeeType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feeDesc</column-name><column-value><![CDATA[");
		sb.append(getFeeDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>calculationBase</column-name><column-value><![CDATA[");
		sb.append(getCalculationBase());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayOrder</column-name><column-value><![CDATA[");
		sb.append(getDisplayOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fundId</column-name><column-value><![CDATA[");
		sb.append(getFundId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spCourseId</column-name><column-value><![CDATA[");
		sb.append(getSpCourseId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FeeDetails.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			FeeDetails.class
		};
	private long _spFeeDetailsId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _feeType;
	private long _originalFeeType;
	private boolean _setOriginalFeeType;
	private String _feeDesc;
	private String _calculationBase;
	private String _amount;
	private long _displayOrder;
	private long _fundId;
	private long _originalFundId;
	private boolean _setOriginalFundId;
	private long _spCourseId;
	private long _originalSpCourseId;
	private boolean _setOriginalSpCourseId;
	private long _columnBitmask;
	private FeeDetails _escapedModel;
}
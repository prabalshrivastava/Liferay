/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.SPSiteSetup;
import com.sambaash.platform.srv.spservices.model.SPSiteSetupModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPSiteSetup service. Represents a row in the &quot;SPSiteSetup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.SPSiteSetupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPSiteSetupImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPSiteSetupImpl
 * @see com.sambaash.platform.srv.spservices.model.SPSiteSetup
 * @see com.sambaash.platform.srv.spservices.model.SPSiteSetupModel
 * @generated
 */
public class SPSiteSetupModelImpl extends BaseModelImpl<SPSiteSetup>
	implements SPSiteSetupModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p site setup model instance should use the {@link com.sambaash.platform.srv.spservices.model.SPSiteSetup} interface instead.
	 */
	public static final String TABLE_NAME = "SPSiteSetup";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spSiteSetupId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "productId", Types.BIGINT },
			{ "productName", Types.VARCHAR },
			{ "subProductId", Types.BIGINT },
			{ "subProductName", Types.VARCHAR },
			{ "virtualHostId", Types.BIGINT },
			{ "backOfficeVirtualHostId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "modifiedBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSiteSetup (uuid_ VARCHAR(75) null,spSiteSetupId BIGINT(20) not null primary key,groupId BIGINT(20),productId BIGINT(20),productName VARCHAR(75) null,subProductId BIGINT(20),subProductName VARCHAR(75) null,virtualHostId BIGINT(20),backOfficeVirtualHostId BIGINT(20),companyId BIGINT(20),createdBy BIGINT(20),modifiedBy BIGINT(20),createdDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPSiteSetup";
	public static final String ORDER_BY_JPQL = " ORDER BY spSiteSetup.spSiteSetupId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSiteSetup.spSiteSetupId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.SPSiteSetup"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.SPSiteSetup"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.SPSiteSetup"),
			true);
	public static long BACKOFFICEVIRTUALHOSTID_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long PRODUCTID_COLUMN_BITMASK = 8L;
	public static long PRODUCTNAME_COLUMN_BITMASK = 16L;
	public static long SUBPRODUCTID_COLUMN_BITMASK = 32L;
	public static long SUBPRODUCTNAME_COLUMN_BITMASK = 64L;
	public static long UUID_COLUMN_BITMASK = 128L;
	public static long VIRTUALHOSTID_COLUMN_BITMASK = 256L;
	public static long SPSITESETUPID_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.SPSiteSetup"));

	public SPSiteSetupModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spSiteSetupId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpSiteSetupId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spSiteSetupId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPSiteSetup.class;
	}

	@Override
	public String getModelClassName() {
		return SPSiteSetup.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spSiteSetupId", getSpSiteSetupId());
		attributes.put("groupId", getGroupId());
		attributes.put("productId", getProductId());
		attributes.put("productName", getProductName());
		attributes.put("subProductId", getSubProductId());
		attributes.put("subProductName", getSubProductName());
		attributes.put("virtualHostId", getVirtualHostId());
		attributes.put("backOfficeVirtualHostId", getBackOfficeVirtualHostId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spSiteSetupId = (Long)attributes.get("spSiteSetupId");

		if (spSiteSetupId != null) {
			setSpSiteSetupId(spSiteSetupId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long productId = (Long)attributes.get("productId");

		if (productId != null) {
			setProductId(productId);
		}

		String productName = (String)attributes.get("productName");

		if (productName != null) {
			setProductName(productName);
		}

		Long subProductId = (Long)attributes.get("subProductId");

		if (subProductId != null) {
			setSubProductId(subProductId);
		}

		String subProductName = (String)attributes.get("subProductName");

		if (subProductName != null) {
			setSubProductName(subProductName);
		}

		Long virtualHostId = (Long)attributes.get("virtualHostId");

		if (virtualHostId != null) {
			setVirtualHostId(virtualHostId);
		}

		Long backOfficeVirtualHostId = (Long)attributes.get(
				"backOfficeVirtualHostId");

		if (backOfficeVirtualHostId != null) {
			setBackOfficeVirtualHostId(backOfficeVirtualHostId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpSiteSetupId() {
		return _spSiteSetupId;
	}

	@Override
	public void setSpSiteSetupId(long spSiteSetupId) {
		_spSiteSetupId = spSiteSetupId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getProductId() {
		return _productId;
	}

	@Override
	public void setProductId(long productId) {
		_columnBitmask |= PRODUCTID_COLUMN_BITMASK;

		if (!_setOriginalProductId) {
			_setOriginalProductId = true;

			_originalProductId = _productId;
		}

		_productId = productId;
	}

	public long getOriginalProductId() {
		return _originalProductId;
	}

	@Override
	public String getProductName() {
		if (_productName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productName;
		}
	}

	@Override
	public void setProductName(String productName) {
		_columnBitmask |= PRODUCTNAME_COLUMN_BITMASK;

		if (_originalProductName == null) {
			_originalProductName = _productName;
		}

		_productName = productName;
	}

	public String getOriginalProductName() {
		return GetterUtil.getString(_originalProductName);
	}

	@Override
	public long getSubProductId() {
		return _subProductId;
	}

	@Override
	public void setSubProductId(long subProductId) {
		_columnBitmask |= SUBPRODUCTID_COLUMN_BITMASK;

		if (!_setOriginalSubProductId) {
			_setOriginalSubProductId = true;

			_originalSubProductId = _subProductId;
		}

		_subProductId = subProductId;
	}

	public long getOriginalSubProductId() {
		return _originalSubProductId;
	}

	@Override
	public String getSubProductName() {
		if (_subProductName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subProductName;
		}
	}

	@Override
	public void setSubProductName(String subProductName) {
		_columnBitmask |= SUBPRODUCTNAME_COLUMN_BITMASK;

		if (_originalSubProductName == null) {
			_originalSubProductName = _subProductName;
		}

		_subProductName = subProductName;
	}

	public String getOriginalSubProductName() {
		return GetterUtil.getString(_originalSubProductName);
	}

	@Override
	public long getVirtualHostId() {
		return _virtualHostId;
	}

	@Override
	public void setVirtualHostId(long virtualHostId) {
		_columnBitmask |= VIRTUALHOSTID_COLUMN_BITMASK;

		if (!_setOriginalVirtualHostId) {
			_setOriginalVirtualHostId = true;

			_originalVirtualHostId = _virtualHostId;
		}

		_virtualHostId = virtualHostId;
	}

	public long getOriginalVirtualHostId() {
		return _originalVirtualHostId;
	}

	@Override
	public long getBackOfficeVirtualHostId() {
		return _backOfficeVirtualHostId;
	}

	@Override
	public void setBackOfficeVirtualHostId(long backOfficeVirtualHostId) {
		_columnBitmask |= BACKOFFICEVIRTUALHOSTID_COLUMN_BITMASK;

		if (!_setOriginalBackOfficeVirtualHostId) {
			_setOriginalBackOfficeVirtualHostId = true;

			_originalBackOfficeVirtualHostId = _backOfficeVirtualHostId;
		}

		_backOfficeVirtualHostId = backOfficeVirtualHostId;
	}

	public long getOriginalBackOfficeVirtualHostId() {
		return _originalBackOfficeVirtualHostId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPSiteSetup.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPSiteSetup toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPSiteSetup)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPSiteSetupImpl spSiteSetupImpl = new SPSiteSetupImpl();

		spSiteSetupImpl.setUuid(getUuid());
		spSiteSetupImpl.setSpSiteSetupId(getSpSiteSetupId());
		spSiteSetupImpl.setGroupId(getGroupId());
		spSiteSetupImpl.setProductId(getProductId());
		spSiteSetupImpl.setProductName(getProductName());
		spSiteSetupImpl.setSubProductId(getSubProductId());
		spSiteSetupImpl.setSubProductName(getSubProductName());
		spSiteSetupImpl.setVirtualHostId(getVirtualHostId());
		spSiteSetupImpl.setBackOfficeVirtualHostId(getBackOfficeVirtualHostId());
		spSiteSetupImpl.setCompanyId(getCompanyId());
		spSiteSetupImpl.setCreatedBy(getCreatedBy());
		spSiteSetupImpl.setModifiedBy(getModifiedBy());
		spSiteSetupImpl.setCreatedDate(getCreatedDate());
		spSiteSetupImpl.setModifiedDate(getModifiedDate());

		spSiteSetupImpl.resetOriginalValues();

		return spSiteSetupImpl;
	}

	@Override
	public int compareTo(SPSiteSetup spSiteSetup) {
		long primaryKey = spSiteSetup.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPSiteSetup)) {
			return false;
		}

		SPSiteSetup spSiteSetup = (SPSiteSetup)obj;

		long primaryKey = spSiteSetup.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPSiteSetupModelImpl spSiteSetupModelImpl = this;

		spSiteSetupModelImpl._originalUuid = spSiteSetupModelImpl._uuid;

		spSiteSetupModelImpl._originalGroupId = spSiteSetupModelImpl._groupId;

		spSiteSetupModelImpl._setOriginalGroupId = false;

		spSiteSetupModelImpl._originalProductId = spSiteSetupModelImpl._productId;

		spSiteSetupModelImpl._setOriginalProductId = false;

		spSiteSetupModelImpl._originalProductName = spSiteSetupModelImpl._productName;

		spSiteSetupModelImpl._originalSubProductId = spSiteSetupModelImpl._subProductId;

		spSiteSetupModelImpl._setOriginalSubProductId = false;

		spSiteSetupModelImpl._originalSubProductName = spSiteSetupModelImpl._subProductName;

		spSiteSetupModelImpl._originalVirtualHostId = spSiteSetupModelImpl._virtualHostId;

		spSiteSetupModelImpl._setOriginalVirtualHostId = false;

		spSiteSetupModelImpl._originalBackOfficeVirtualHostId = spSiteSetupModelImpl._backOfficeVirtualHostId;

		spSiteSetupModelImpl._setOriginalBackOfficeVirtualHostId = false;

		spSiteSetupModelImpl._originalCompanyId = spSiteSetupModelImpl._companyId;

		spSiteSetupModelImpl._setOriginalCompanyId = false;

		spSiteSetupModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPSiteSetup> toCacheModel() {
		SPSiteSetupCacheModel spSiteSetupCacheModel = new SPSiteSetupCacheModel();

		spSiteSetupCacheModel.uuid = getUuid();

		String uuid = spSiteSetupCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spSiteSetupCacheModel.uuid = null;
		}

		spSiteSetupCacheModel.spSiteSetupId = getSpSiteSetupId();

		spSiteSetupCacheModel.groupId = getGroupId();

		spSiteSetupCacheModel.productId = getProductId();

		spSiteSetupCacheModel.productName = getProductName();

		String productName = spSiteSetupCacheModel.productName;

		if ((productName != null) && (productName.length() == 0)) {
			spSiteSetupCacheModel.productName = null;
		}

		spSiteSetupCacheModel.subProductId = getSubProductId();

		spSiteSetupCacheModel.subProductName = getSubProductName();

		String subProductName = spSiteSetupCacheModel.subProductName;

		if ((subProductName != null) && (subProductName.length() == 0)) {
			spSiteSetupCacheModel.subProductName = null;
		}

		spSiteSetupCacheModel.virtualHostId = getVirtualHostId();

		spSiteSetupCacheModel.backOfficeVirtualHostId = getBackOfficeVirtualHostId();

		spSiteSetupCacheModel.companyId = getCompanyId();

		spSiteSetupCacheModel.createdBy = getCreatedBy();

		spSiteSetupCacheModel.modifiedBy = getModifiedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			spSiteSetupCacheModel.createdDate = createdDate.getTime();
		}
		else {
			spSiteSetupCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spSiteSetupCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spSiteSetupCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spSiteSetupCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spSiteSetupId=");
		sb.append(getSpSiteSetupId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", productId=");
		sb.append(getProductId());
		sb.append(", productName=");
		sb.append(getProductName());
		sb.append(", subProductId=");
		sb.append(getSubProductId());
		sb.append(", subProductName=");
		sb.append(getSubProductName());
		sb.append(", virtualHostId=");
		sb.append(getVirtualHostId());
		sb.append(", backOfficeVirtualHostId=");
		sb.append(getBackOfficeVirtualHostId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spservices.model.SPSiteSetup");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spSiteSetupId</column-name><column-value><![CDATA[");
		sb.append(getSpSiteSetupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productId</column-name><column-value><![CDATA[");
		sb.append(getProductId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productName</column-name><column-value><![CDATA[");
		sb.append(getProductName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subProductId</column-name><column-value><![CDATA[");
		sb.append(getSubProductId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subProductName</column-name><column-value><![CDATA[");
		sb.append(getSubProductName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>virtualHostId</column-name><column-value><![CDATA[");
		sb.append(getVirtualHostId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>backOfficeVirtualHostId</column-name><column-value><![CDATA[");
		sb.append(getBackOfficeVirtualHostId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPSiteSetup.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPSiteSetup.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spSiteSetupId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _productId;
	private long _originalProductId;
	private boolean _setOriginalProductId;
	private String _productName;
	private String _originalProductName;
	private long _subProductId;
	private long _originalSubProductId;
	private boolean _setOriginalSubProductId;
	private String _subProductName;
	private String _originalSubProductName;
	private long _virtualHostId;
	private long _originalVirtualHostId;
	private boolean _setOriginalVirtualHostId;
	private long _backOfficeVirtualHostId;
	private long _originalBackOfficeVirtualHostId;
	private boolean _setOriginalBackOfficeVirtualHostId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _createdBy;
	private long _modifiedBy;
	private Date _createdDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private SPSiteSetup _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.processbuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.processbuilder.model.PEProcess;
import com.sambaash.platform.srv.processbuilder.model.PEProcessModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PEProcess service. Represents a row in the &quot;SPPEProcess&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.processbuilder.model.PEProcessModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PEProcessImpl}.
 * </p>
 *
 * @author nareshchebolu
 * @see PEProcessImpl
 * @see com.sambaash.platform.srv.processbuilder.model.PEProcess
 * @see com.sambaash.platform.srv.processbuilder.model.PEProcessModel
 * @generated
 */
public class PEProcessModelImpl extends BaseModelImpl<PEProcess>
	implements PEProcessModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a p e process model instance should use the {@link com.sambaash.platform.srv.processbuilder.model.PEProcess} interface instead.
	 */
	public static final String TABLE_NAME = "SPPEProcess";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spPEProcessId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "definiton", Types.CLOB },
			{ "entityClassId", Types.BIGINT },
			{ "agentEnabled", Types.BOOLEAN },
			{ "agentRoleIds", Types.VARCHAR },
			{ "approveRoleIds", Types.VARCHAR },
			{ "miscData", Types.VARCHAR },
			{ "diagramData", Types.CLOB },
			{ "entityTitle", Types.VARCHAR },
			{ "approverPageName", Types.VARCHAR },
			{ "userPageName", Types.VARCHAR },
			{ "agentPageName", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "applicantRoleId", Types.BIGINT },
			{ "supervisorRoleIds", Types.VARCHAR },
			{ "supervisorPageName", Types.VARCHAR },
			{ "closedReasonVocId", Types.BIGINT },
			{ "accountCreationEmailEnabled", Types.BOOLEAN },
			{ "enableAssignment", Types.BOOLEAN },
			{ "editFeeDetails", Types.BOOLEAN },
			{ "scheduleModelId", Types.BIGINT },
			{ "enableSingleSubmission", Types.BOOLEAN },
			{ "orientation", Types.VARCHAR },
			{ "showHeader", Types.BOOLEAN },
			{ "enableFirstStepProgress", Types.BOOLEAN },
			{ "subProductTypeId", Types.BIGINT },
			{ "productTypeId", Types.BIGINT },
			{ "singleSubmissionErrorMsg", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPPEProcess (uuid_ VARCHAR(75) null,spPEProcessId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,name VARCHAR(75) null,definiton LONGTEXT null,entityClassId BIGINT(20),agentEnabled BOOLEAN,agentRoleIds VARCHAR(75) null,approveRoleIds VARCHAR(75) null,miscData LONGTEXT null,diagramData LONGTEXT null,entityTitle VARCHAR(75) null,approverPageName VARCHAR(75) null,userPageName VARCHAR(75) null,agentPageName VARCHAR(75) null,status INTEGER,applicantRoleId BIGINT(20),supervisorRoleIds VARCHAR(75) null,supervisorPageName VARCHAR(75) null,closedReasonVocId BIGINT(20),accountCreationEmailEnabled BOOLEAN,enableAssignment BOOLEAN,editFeeDetails BOOLEAN,scheduleModelId BIGINT(20),enableSingleSubmission BOOLEAN,orientation VARCHAR(75) null,showHeader BOOLEAN,enableFirstStepProgress BOOLEAN,subProductTypeId BIGINT(20),productTypeId BIGINT(20),singleSubmissionErrorMsg VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPPEProcess";
	public static final String ORDER_BY_JPQL = " ORDER BY peProcess.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPPEProcess.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.processbuilder.model.PEProcess"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.processbuilder.model.PEProcess"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.processbuilder.model.PEProcess"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long NAME_COLUMN_BITMASK = 4L;
	public static long SPPEPROCESSID_COLUMN_BITMASK = 8L;
	public static long STATUS_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.processbuilder.model.PEProcess"));

	public PEProcessModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spPEProcessId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpPEProcessId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spPEProcessId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PEProcess.class;
	}

	@Override
	public String getModelClassName() {
		return PEProcess.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spPEProcessId", getSpPEProcessId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("definiton", getDefiniton());
		attributes.put("entityClassId", getEntityClassId());
		attributes.put("agentEnabled", getAgentEnabled());
		attributes.put("agentRoleIds", getAgentRoleIds());
		attributes.put("approveRoleIds", getApproveRoleIds());
		attributes.put("miscData", getMiscData());
		attributes.put("diagramData", getDiagramData());
		attributes.put("entityTitle", getEntityTitle());
		attributes.put("approverPageName", getApproverPageName());
		attributes.put("userPageName", getUserPageName());
		attributes.put("agentPageName", getAgentPageName());
		attributes.put("status", getStatus());
		attributes.put("applicantRoleId", getApplicantRoleId());
		attributes.put("supervisorRoleIds", getSupervisorRoleIds());
		attributes.put("supervisorPageName", getSupervisorPageName());
		attributes.put("closedReasonVocId", getClosedReasonVocId());
		attributes.put("accountCreationEmailEnabled",
			getAccountCreationEmailEnabled());
		attributes.put("enableAssignment", getEnableAssignment());
		attributes.put("editFeeDetails", getEditFeeDetails());
		attributes.put("scheduleModelId", getScheduleModelId());
		attributes.put("enableSingleSubmission", getEnableSingleSubmission());
		attributes.put("orientation", getOrientation());
		attributes.put("showHeader", getShowHeader());
		attributes.put("enableFirstStepProgress", getEnableFirstStepProgress());
		attributes.put("subProductTypeId", getSubProductTypeId());
		attributes.put("productTypeId", getProductTypeId());
		attributes.put("singleSubmissionErrorMsg", getSingleSubmissionErrorMsg());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spPEProcessId = (Long)attributes.get("spPEProcessId");

		if (spPEProcessId != null) {
			setSpPEProcessId(spPEProcessId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String definiton = (String)attributes.get("definiton");

		if (definiton != null) {
			setDefiniton(definiton);
		}

		Long entityClassId = (Long)attributes.get("entityClassId");

		if (entityClassId != null) {
			setEntityClassId(entityClassId);
		}

		Boolean agentEnabled = (Boolean)attributes.get("agentEnabled");

		if (agentEnabled != null) {
			setAgentEnabled(agentEnabled);
		}

		String agentRoleIds = (String)attributes.get("agentRoleIds");

		if (agentRoleIds != null) {
			setAgentRoleIds(agentRoleIds);
		}

		String approveRoleIds = (String)attributes.get("approveRoleIds");

		if (approveRoleIds != null) {
			setApproveRoleIds(approveRoleIds);
		}

		String miscData = (String)attributes.get("miscData");

		if (miscData != null) {
			setMiscData(miscData);
		}

		String diagramData = (String)attributes.get("diagramData");

		if (diagramData != null) {
			setDiagramData(diagramData);
		}

		String entityTitle = (String)attributes.get("entityTitle");

		if (entityTitle != null) {
			setEntityTitle(entityTitle);
		}

		String approverPageName = (String)attributes.get("approverPageName");

		if (approverPageName != null) {
			setApproverPageName(approverPageName);
		}

		String userPageName = (String)attributes.get("userPageName");

		if (userPageName != null) {
			setUserPageName(userPageName);
		}

		String agentPageName = (String)attributes.get("agentPageName");

		if (agentPageName != null) {
			setAgentPageName(agentPageName);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long applicantRoleId = (Long)attributes.get("applicantRoleId");

		if (applicantRoleId != null) {
			setApplicantRoleId(applicantRoleId);
		}

		String supervisorRoleIds = (String)attributes.get("supervisorRoleIds");

		if (supervisorRoleIds != null) {
			setSupervisorRoleIds(supervisorRoleIds);
		}

		String supervisorPageName = (String)attributes.get("supervisorPageName");

		if (supervisorPageName != null) {
			setSupervisorPageName(supervisorPageName);
		}

		Long closedReasonVocId = (Long)attributes.get("closedReasonVocId");

		if (closedReasonVocId != null) {
			setClosedReasonVocId(closedReasonVocId);
		}

		Boolean accountCreationEmailEnabled = (Boolean)attributes.get(
				"accountCreationEmailEnabled");

		if (accountCreationEmailEnabled != null) {
			setAccountCreationEmailEnabled(accountCreationEmailEnabled);
		}

		Boolean enableAssignment = (Boolean)attributes.get("enableAssignment");

		if (enableAssignment != null) {
			setEnableAssignment(enableAssignment);
		}

		Boolean editFeeDetails = (Boolean)attributes.get("editFeeDetails");

		if (editFeeDetails != null) {
			setEditFeeDetails(editFeeDetails);
		}

		Long scheduleModelId = (Long)attributes.get("scheduleModelId");

		if (scheduleModelId != null) {
			setScheduleModelId(scheduleModelId);
		}

		Boolean enableSingleSubmission = (Boolean)attributes.get(
				"enableSingleSubmission");

		if (enableSingleSubmission != null) {
			setEnableSingleSubmission(enableSingleSubmission);
		}

		String orientation = (String)attributes.get("orientation");

		if (orientation != null) {
			setOrientation(orientation);
		}

		Boolean showHeader = (Boolean)attributes.get("showHeader");

		if (showHeader != null) {
			setShowHeader(showHeader);
		}

		Boolean enableFirstStepProgress = (Boolean)attributes.get(
				"enableFirstStepProgress");

		if (enableFirstStepProgress != null) {
			setEnableFirstStepProgress(enableFirstStepProgress);
		}

		Long subProductTypeId = (Long)attributes.get("subProductTypeId");

		if (subProductTypeId != null) {
			setSubProductTypeId(subProductTypeId);
		}

		Long productTypeId = (Long)attributes.get("productTypeId");

		if (productTypeId != null) {
			setProductTypeId(productTypeId);
		}

		String singleSubmissionErrorMsg = (String)attributes.get(
				"singleSubmissionErrorMsg");

		if (singleSubmissionErrorMsg != null) {
			setSingleSubmissionErrorMsg(singleSubmissionErrorMsg);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpPEProcessId() {
		return _spPEProcessId;
	}

	@Override
	public void setSpPEProcessId(long spPEProcessId) {
		_columnBitmask |= SPPEPROCESSID_COLUMN_BITMASK;

		if (!_setOriginalSpPEProcessId) {
			_setOriginalSpPEProcessId = true;

			_originalSpPEProcessId = _spPEProcessId;
		}

		_spPEProcessId = spPEProcessId;
	}

	public long getOriginalSpPEProcessId() {
		return _originalSpPEProcessId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getDefiniton() {
		if (_definiton == null) {
			return StringPool.BLANK;
		}
		else {
			return _definiton;
		}
	}

	@Override
	public void setDefiniton(String definiton) {
		_definiton = definiton;
	}

	@Override
	public long getEntityClassId() {
		return _entityClassId;
	}

	@Override
	public void setEntityClassId(long entityClassId) {
		_entityClassId = entityClassId;
	}

	@Override
	public boolean getAgentEnabled() {
		return _agentEnabled;
	}

	@Override
	public boolean isAgentEnabled() {
		return _agentEnabled;
	}

	@Override
	public void setAgentEnabled(boolean agentEnabled) {
		_agentEnabled = agentEnabled;
	}

	@Override
	public String getAgentRoleIds() {
		if (_agentRoleIds == null) {
			return StringPool.BLANK;
		}
		else {
			return _agentRoleIds;
		}
	}

	@Override
	public void setAgentRoleIds(String agentRoleIds) {
		_agentRoleIds = agentRoleIds;
	}

	@Override
	public String getApproveRoleIds() {
		if (_approveRoleIds == null) {
			return StringPool.BLANK;
		}
		else {
			return _approveRoleIds;
		}
	}

	@Override
	public void setApproveRoleIds(String approveRoleIds) {
		_approveRoleIds = approveRoleIds;
	}

	@Override
	public String getMiscData() {
		if (_miscData == null) {
			return StringPool.BLANK;
		}
		else {
			return _miscData;
		}
	}

	@Override
	public void setMiscData(String miscData) {
		_miscData = miscData;
	}

	@Override
	public String getDiagramData() {
		if (_diagramData == null) {
			return StringPool.BLANK;
		}
		else {
			return _diagramData;
		}
	}

	@Override
	public void setDiagramData(String diagramData) {
		_diagramData = diagramData;
	}

	@Override
	public String getEntityTitle() {
		if (_entityTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _entityTitle;
		}
	}

	@Override
	public void setEntityTitle(String entityTitle) {
		_entityTitle = entityTitle;
	}

	@Override
	public String getApproverPageName() {
		if (_approverPageName == null) {
			return StringPool.BLANK;
		}
		else {
			return _approverPageName;
		}
	}

	@Override
	public void setApproverPageName(String approverPageName) {
		_approverPageName = approverPageName;
	}

	@Override
	public String getUserPageName() {
		if (_userPageName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userPageName;
		}
	}

	@Override
	public void setUserPageName(String userPageName) {
		_userPageName = userPageName;
	}

	@Override
	public String getAgentPageName() {
		if (_agentPageName == null) {
			return StringPool.BLANK;
		}
		else {
			return _agentPageName;
		}
	}

	@Override
	public void setAgentPageName(String agentPageName) {
		_agentPageName = agentPageName;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public long getApplicantRoleId() {
		return _applicantRoleId;
	}

	@Override
	public void setApplicantRoleId(long applicantRoleId) {
		_applicantRoleId = applicantRoleId;
	}

	@Override
	public String getSupervisorRoleIds() {
		if (_supervisorRoleIds == null) {
			return StringPool.BLANK;
		}
		else {
			return _supervisorRoleIds;
		}
	}

	@Override
	public void setSupervisorRoleIds(String supervisorRoleIds) {
		_supervisorRoleIds = supervisorRoleIds;
	}

	@Override
	public String getSupervisorPageName() {
		if (_supervisorPageName == null) {
			return StringPool.BLANK;
		}
		else {
			return _supervisorPageName;
		}
	}

	@Override
	public void setSupervisorPageName(String supervisorPageName) {
		_supervisorPageName = supervisorPageName;
	}

	@Override
	public long getClosedReasonVocId() {
		return _closedReasonVocId;
	}

	@Override
	public void setClosedReasonVocId(long closedReasonVocId) {
		_closedReasonVocId = closedReasonVocId;
	}

	@Override
	public boolean getAccountCreationEmailEnabled() {
		return _accountCreationEmailEnabled;
	}

	@Override
	public boolean isAccountCreationEmailEnabled() {
		return _accountCreationEmailEnabled;
	}

	@Override
	public void setAccountCreationEmailEnabled(
		boolean accountCreationEmailEnabled) {
		_accountCreationEmailEnabled = accountCreationEmailEnabled;
	}

	@Override
	public boolean getEnableAssignment() {
		return _enableAssignment;
	}

	@Override
	public boolean isEnableAssignment() {
		return _enableAssignment;
	}

	@Override
	public void setEnableAssignment(boolean enableAssignment) {
		_enableAssignment = enableAssignment;
	}

	@Override
	public boolean getEditFeeDetails() {
		return _editFeeDetails;
	}

	@Override
	public boolean isEditFeeDetails() {
		return _editFeeDetails;
	}

	@Override
	public void setEditFeeDetails(boolean editFeeDetails) {
		_editFeeDetails = editFeeDetails;
	}

	@Override
	public long getScheduleModelId() {
		return _scheduleModelId;
	}

	@Override
	public void setScheduleModelId(long scheduleModelId) {
		_scheduleModelId = scheduleModelId;
	}

	@Override
	public boolean getEnableSingleSubmission() {
		return _enableSingleSubmission;
	}

	@Override
	public boolean isEnableSingleSubmission() {
		return _enableSingleSubmission;
	}

	@Override
	public void setEnableSingleSubmission(boolean enableSingleSubmission) {
		_enableSingleSubmission = enableSingleSubmission;
	}

	@Override
	public String getOrientation() {
		if (_orientation == null) {
			return StringPool.BLANK;
		}
		else {
			return _orientation;
		}
	}

	@Override
	public void setOrientation(String orientation) {
		_orientation = orientation;
	}

	@Override
	public boolean getShowHeader() {
		return _showHeader;
	}

	@Override
	public boolean isShowHeader() {
		return _showHeader;
	}

	@Override
	public void setShowHeader(boolean showHeader) {
		_showHeader = showHeader;
	}

	@Override
	public boolean getEnableFirstStepProgress() {
		return _enableFirstStepProgress;
	}

	@Override
	public boolean isEnableFirstStepProgress() {
		return _enableFirstStepProgress;
	}

	@Override
	public void setEnableFirstStepProgress(boolean enableFirstStepProgress) {
		_enableFirstStepProgress = enableFirstStepProgress;
	}

	@Override
	public long getSubProductTypeId() {
		return _subProductTypeId;
	}

	@Override
	public void setSubProductTypeId(long subProductTypeId) {
		_subProductTypeId = subProductTypeId;
	}

	@Override
	public long getProductTypeId() {
		return _productTypeId;
	}

	@Override
	public void setProductTypeId(long productTypeId) {
		_productTypeId = productTypeId;
	}

	@Override
	public String getSingleSubmissionErrorMsg() {
		if (_singleSubmissionErrorMsg == null) {
			return StringPool.BLANK;
		}
		else {
			return _singleSubmissionErrorMsg;
		}
	}

	@Override
	public void setSingleSubmissionErrorMsg(String singleSubmissionErrorMsg) {
		_singleSubmissionErrorMsg = singleSubmissionErrorMsg;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PEProcess.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PEProcess.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PEProcess toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PEProcess)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PEProcessImpl peProcessImpl = new PEProcessImpl();

		peProcessImpl.setUuid(getUuid());
		peProcessImpl.setSpPEProcessId(getSpPEProcessId());
		peProcessImpl.setGroupId(getGroupId());
		peProcessImpl.setCompanyId(getCompanyId());
		peProcessImpl.setUserId(getUserId());
		peProcessImpl.setUserName(getUserName());
		peProcessImpl.setCreateDate(getCreateDate());
		peProcessImpl.setModifiedDate(getModifiedDate());
		peProcessImpl.setName(getName());
		peProcessImpl.setDefiniton(getDefiniton());
		peProcessImpl.setEntityClassId(getEntityClassId());
		peProcessImpl.setAgentEnabled(getAgentEnabled());
		peProcessImpl.setAgentRoleIds(getAgentRoleIds());
		peProcessImpl.setApproveRoleIds(getApproveRoleIds());
		peProcessImpl.setMiscData(getMiscData());
		peProcessImpl.setDiagramData(getDiagramData());
		peProcessImpl.setEntityTitle(getEntityTitle());
		peProcessImpl.setApproverPageName(getApproverPageName());
		peProcessImpl.setUserPageName(getUserPageName());
		peProcessImpl.setAgentPageName(getAgentPageName());
		peProcessImpl.setStatus(getStatus());
		peProcessImpl.setApplicantRoleId(getApplicantRoleId());
		peProcessImpl.setSupervisorRoleIds(getSupervisorRoleIds());
		peProcessImpl.setSupervisorPageName(getSupervisorPageName());
		peProcessImpl.setClosedReasonVocId(getClosedReasonVocId());
		peProcessImpl.setAccountCreationEmailEnabled(getAccountCreationEmailEnabled());
		peProcessImpl.setEnableAssignment(getEnableAssignment());
		peProcessImpl.setEditFeeDetails(getEditFeeDetails());
		peProcessImpl.setScheduleModelId(getScheduleModelId());
		peProcessImpl.setEnableSingleSubmission(getEnableSingleSubmission());
		peProcessImpl.setOrientation(getOrientation());
		peProcessImpl.setShowHeader(getShowHeader());
		peProcessImpl.setEnableFirstStepProgress(getEnableFirstStepProgress());
		peProcessImpl.setSubProductTypeId(getSubProductTypeId());
		peProcessImpl.setProductTypeId(getProductTypeId());
		peProcessImpl.setSingleSubmissionErrorMsg(getSingleSubmissionErrorMsg());

		peProcessImpl.resetOriginalValues();

		return peProcessImpl;
	}

	@Override
	public int compareTo(PEProcess peProcess) {
		int value = 0;

		value = getName().compareTo(peProcess.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PEProcess)) {
			return false;
		}

		PEProcess peProcess = (PEProcess)obj;

		long primaryKey = peProcess.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PEProcessModelImpl peProcessModelImpl = this;

		peProcessModelImpl._originalUuid = peProcessModelImpl._uuid;

		peProcessModelImpl._originalSpPEProcessId = peProcessModelImpl._spPEProcessId;

		peProcessModelImpl._setOriginalSpPEProcessId = false;

		peProcessModelImpl._originalGroupId = peProcessModelImpl._groupId;

		peProcessModelImpl._setOriginalGroupId = false;

		peProcessModelImpl._originalCompanyId = peProcessModelImpl._companyId;

		peProcessModelImpl._setOriginalCompanyId = false;

		peProcessModelImpl._originalName = peProcessModelImpl._name;

		peProcessModelImpl._originalStatus = peProcessModelImpl._status;

		peProcessModelImpl._setOriginalStatus = false;

		peProcessModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PEProcess> toCacheModel() {
		PEProcessCacheModel peProcessCacheModel = new PEProcessCacheModel();

		peProcessCacheModel.uuid = getUuid();

		String uuid = peProcessCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			peProcessCacheModel.uuid = null;
		}

		peProcessCacheModel.spPEProcessId = getSpPEProcessId();

		peProcessCacheModel.groupId = getGroupId();

		peProcessCacheModel.companyId = getCompanyId();

		peProcessCacheModel.userId = getUserId();

		peProcessCacheModel.userName = getUserName();

		String userName = peProcessCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			peProcessCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			peProcessCacheModel.createDate = createDate.getTime();
		}
		else {
			peProcessCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			peProcessCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			peProcessCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		peProcessCacheModel.name = getName();

		String name = peProcessCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			peProcessCacheModel.name = null;
		}

		peProcessCacheModel.definiton = getDefiniton();

		String definiton = peProcessCacheModel.definiton;

		if ((definiton != null) && (definiton.length() == 0)) {
			peProcessCacheModel.definiton = null;
		}

		peProcessCacheModel.entityClassId = getEntityClassId();

		peProcessCacheModel.agentEnabled = getAgentEnabled();

		peProcessCacheModel.agentRoleIds = getAgentRoleIds();

		String agentRoleIds = peProcessCacheModel.agentRoleIds;

		if ((agentRoleIds != null) && (agentRoleIds.length() == 0)) {
			peProcessCacheModel.agentRoleIds = null;
		}

		peProcessCacheModel.approveRoleIds = getApproveRoleIds();

		String approveRoleIds = peProcessCacheModel.approveRoleIds;

		if ((approveRoleIds != null) && (approveRoleIds.length() == 0)) {
			peProcessCacheModel.approveRoleIds = null;
		}

		peProcessCacheModel.miscData = getMiscData();

		String miscData = peProcessCacheModel.miscData;

		if ((miscData != null) && (miscData.length() == 0)) {
			peProcessCacheModel.miscData = null;
		}

		peProcessCacheModel.diagramData = getDiagramData();

		String diagramData = peProcessCacheModel.diagramData;

		if ((diagramData != null) && (diagramData.length() == 0)) {
			peProcessCacheModel.diagramData = null;
		}

		peProcessCacheModel.entityTitle = getEntityTitle();

		String entityTitle = peProcessCacheModel.entityTitle;

		if ((entityTitle != null) && (entityTitle.length() == 0)) {
			peProcessCacheModel.entityTitle = null;
		}

		peProcessCacheModel.approverPageName = getApproverPageName();

		String approverPageName = peProcessCacheModel.approverPageName;

		if ((approverPageName != null) && (approverPageName.length() == 0)) {
			peProcessCacheModel.approverPageName = null;
		}

		peProcessCacheModel.userPageName = getUserPageName();

		String userPageName = peProcessCacheModel.userPageName;

		if ((userPageName != null) && (userPageName.length() == 0)) {
			peProcessCacheModel.userPageName = null;
		}

		peProcessCacheModel.agentPageName = getAgentPageName();

		String agentPageName = peProcessCacheModel.agentPageName;

		if ((agentPageName != null) && (agentPageName.length() == 0)) {
			peProcessCacheModel.agentPageName = null;
		}

		peProcessCacheModel.status = getStatus();

		peProcessCacheModel.applicantRoleId = getApplicantRoleId();

		peProcessCacheModel.supervisorRoleIds = getSupervisorRoleIds();

		String supervisorRoleIds = peProcessCacheModel.supervisorRoleIds;

		if ((supervisorRoleIds != null) && (supervisorRoleIds.length() == 0)) {
			peProcessCacheModel.supervisorRoleIds = null;
		}

		peProcessCacheModel.supervisorPageName = getSupervisorPageName();

		String supervisorPageName = peProcessCacheModel.supervisorPageName;

		if ((supervisorPageName != null) && (supervisorPageName.length() == 0)) {
			peProcessCacheModel.supervisorPageName = null;
		}

		peProcessCacheModel.closedReasonVocId = getClosedReasonVocId();

		peProcessCacheModel.accountCreationEmailEnabled = getAccountCreationEmailEnabled();

		peProcessCacheModel.enableAssignment = getEnableAssignment();

		peProcessCacheModel.editFeeDetails = getEditFeeDetails();

		peProcessCacheModel.scheduleModelId = getScheduleModelId();

		peProcessCacheModel.enableSingleSubmission = getEnableSingleSubmission();

		peProcessCacheModel.orientation = getOrientation();

		String orientation = peProcessCacheModel.orientation;

		if ((orientation != null) && (orientation.length() == 0)) {
			peProcessCacheModel.orientation = null;
		}

		peProcessCacheModel.showHeader = getShowHeader();

		peProcessCacheModel.enableFirstStepProgress = getEnableFirstStepProgress();

		peProcessCacheModel.subProductTypeId = getSubProductTypeId();

		peProcessCacheModel.productTypeId = getProductTypeId();

		peProcessCacheModel.singleSubmissionErrorMsg = getSingleSubmissionErrorMsg();

		String singleSubmissionErrorMsg = peProcessCacheModel.singleSubmissionErrorMsg;

		if ((singleSubmissionErrorMsg != null) &&
				(singleSubmissionErrorMsg.length() == 0)) {
			peProcessCacheModel.singleSubmissionErrorMsg = null;
		}

		return peProcessCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(73);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spPEProcessId=");
		sb.append(getSpPEProcessId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", definiton=");
		sb.append(getDefiniton());
		sb.append(", entityClassId=");
		sb.append(getEntityClassId());
		sb.append(", agentEnabled=");
		sb.append(getAgentEnabled());
		sb.append(", agentRoleIds=");
		sb.append(getAgentRoleIds());
		sb.append(", approveRoleIds=");
		sb.append(getApproveRoleIds());
		sb.append(", miscData=");
		sb.append(getMiscData());
		sb.append(", diagramData=");
		sb.append(getDiagramData());
		sb.append(", entityTitle=");
		sb.append(getEntityTitle());
		sb.append(", approverPageName=");
		sb.append(getApproverPageName());
		sb.append(", userPageName=");
		sb.append(getUserPageName());
		sb.append(", agentPageName=");
		sb.append(getAgentPageName());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", applicantRoleId=");
		sb.append(getApplicantRoleId());
		sb.append(", supervisorRoleIds=");
		sb.append(getSupervisorRoleIds());
		sb.append(", supervisorPageName=");
		sb.append(getSupervisorPageName());
		sb.append(", closedReasonVocId=");
		sb.append(getClosedReasonVocId());
		sb.append(", accountCreationEmailEnabled=");
		sb.append(getAccountCreationEmailEnabled());
		sb.append(", enableAssignment=");
		sb.append(getEnableAssignment());
		sb.append(", editFeeDetails=");
		sb.append(getEditFeeDetails());
		sb.append(", scheduleModelId=");
		sb.append(getScheduleModelId());
		sb.append(", enableSingleSubmission=");
		sb.append(getEnableSingleSubmission());
		sb.append(", orientation=");
		sb.append(getOrientation());
		sb.append(", showHeader=");
		sb.append(getShowHeader());
		sb.append(", enableFirstStepProgress=");
		sb.append(getEnableFirstStepProgress());
		sb.append(", subProductTypeId=");
		sb.append(getSubProductTypeId());
		sb.append(", productTypeId=");
		sb.append(getProductTypeId());
		sb.append(", singleSubmissionErrorMsg=");
		sb.append(getSingleSubmissionErrorMsg());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(112);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.processbuilder.model.PEProcess");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPEProcessId</column-name><column-value><![CDATA[");
		sb.append(getSpPEProcessId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>definiton</column-name><column-value><![CDATA[");
		sb.append(getDefiniton());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityClassId</column-name><column-value><![CDATA[");
		sb.append(getEntityClassId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agentEnabled</column-name><column-value><![CDATA[");
		sb.append(getAgentEnabled());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agentRoleIds</column-name><column-value><![CDATA[");
		sb.append(getAgentRoleIds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approveRoleIds</column-name><column-value><![CDATA[");
		sb.append(getApproveRoleIds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>miscData</column-name><column-value><![CDATA[");
		sb.append(getMiscData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diagramData</column-name><column-value><![CDATA[");
		sb.append(getDiagramData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityTitle</column-name><column-value><![CDATA[");
		sb.append(getEntityTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverPageName</column-name><column-value><![CDATA[");
		sb.append(getApproverPageName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userPageName</column-name><column-value><![CDATA[");
		sb.append(getUserPageName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>agentPageName</column-name><column-value><![CDATA[");
		sb.append(getAgentPageName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantRoleId</column-name><column-value><![CDATA[");
		sb.append(getApplicantRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supervisorRoleIds</column-name><column-value><![CDATA[");
		sb.append(getSupervisorRoleIds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supervisorPageName</column-name><column-value><![CDATA[");
		sb.append(getSupervisorPageName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>closedReasonVocId</column-name><column-value><![CDATA[");
		sb.append(getClosedReasonVocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountCreationEmailEnabled</column-name><column-value><![CDATA[");
		sb.append(getAccountCreationEmailEnabled());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableAssignment</column-name><column-value><![CDATA[");
		sb.append(getEnableAssignment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>editFeeDetails</column-name><column-value><![CDATA[");
		sb.append(getEditFeeDetails());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scheduleModelId</column-name><column-value><![CDATA[");
		sb.append(getScheduleModelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableSingleSubmission</column-name><column-value><![CDATA[");
		sb.append(getEnableSingleSubmission());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orientation</column-name><column-value><![CDATA[");
		sb.append(getOrientation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>showHeader</column-name><column-value><![CDATA[");
		sb.append(getShowHeader());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enableFirstStepProgress</column-name><column-value><![CDATA[");
		sb.append(getEnableFirstStepProgress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subProductTypeId</column-name><column-value><![CDATA[");
		sb.append(getSubProductTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productTypeId</column-name><column-value><![CDATA[");
		sb.append(getProductTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>singleSubmissionErrorMsg</column-name><column-value><![CDATA[");
		sb.append(getSingleSubmissionErrorMsg());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PEProcess.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PEProcess.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spPEProcessId;
	private long _originalSpPEProcessId;
	private boolean _setOriginalSpPEProcessId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _originalName;
	private String _definiton;
	private long _entityClassId;
	private boolean _agentEnabled;
	private String _agentRoleIds;
	private String _approveRoleIds;
	private String _miscData;
	private String _diagramData;
	private String _entityTitle;
	private String _approverPageName;
	private String _userPageName;
	private String _agentPageName;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _applicantRoleId;
	private String _supervisorRoleIds;
	private String _supervisorPageName;
	private long _closedReasonVocId;
	private boolean _accountCreationEmailEnabled;
	private boolean _enableAssignment;
	private boolean _editFeeDetails;
	private long _scheduleModelId;
	private boolean _enableSingleSubmission;
	private String _orientation;
	private boolean _showHeader;
	private boolean _enableFirstStepProgress;
	private long _subProductTypeId;
	private long _productTypeId;
	private String _singleSubmissionErrorMsg;
	private long _columnBitmask;
	private PEProcess _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.validation.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.validation.model.SPStudentProgramme;
import com.sambaash.platform.srv.validation.model.SPStudentProgrammeModel;
import com.sambaash.platform.srv.validation.model.SPStudentProgrammeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SPStudentProgramme service. Represents a row in the &quot;SPStudentProgramme&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.validation.model.SPStudentProgrammeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPStudentProgrammeImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPStudentProgrammeImpl
 * @see com.sambaash.platform.srv.validation.model.SPStudentProgramme
 * @see com.sambaash.platform.srv.validation.model.SPStudentProgrammeModel
 * @generated
 */
@JSON(strict = true)
public class SPStudentProgrammeModelImpl extends BaseModelImpl<SPStudentProgramme>
	implements SPStudentProgrammeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p student programme model instance should use the {@link com.sambaash.platform.srv.validation.model.SPStudentProgramme} interface instead.
	 */
	public static final String TABLE_NAME = "SPStudentProgramme";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spStudentCourseId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "nric", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "programme", Types.VARCHAR },
			{ "courseCentre", Types.VARCHAR },
			{ "courseStartDate", Types.TIMESTAMP },
			{ "courseEndDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPStudentProgramme (spStudentCourseId BIGINT(20) not null primary key,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,nric VARCHAR(75) null,emailAddress VARCHAR(75) null,programme VARCHAR(75) null,courseCentre VARCHAR(75) null,courseStartDate DATETIME null,courseEndDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPStudentProgramme";
	public static final String ORDER_BY_JPQL = " ORDER BY spStudentProgramme.courseEndDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPStudentProgramme.courseEndDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgramme"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgramme"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgramme"),
			true);
	public static long EMAILADDRESS_COLUMN_BITMASK = 1L;
	public static long NRIC_COLUMN_BITMASK = 2L;
	public static long PROGRAMME_COLUMN_BITMASK = 4L;
	public static long COURSEENDDATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SPStudentProgramme toModel(SPStudentProgrammeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SPStudentProgramme model = new SPStudentProgrammeImpl();

		model.setSpStudentCourseId(soapModel.getSpStudentCourseId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setNric(soapModel.getNric());
		model.setEmailAddress(soapModel.getEmailAddress());
		model.setProgramme(soapModel.getProgramme());
		model.setCourseCentre(soapModel.getCourseCentre());
		model.setCourseStartDate(soapModel.getCourseStartDate());
		model.setCourseEndDate(soapModel.getCourseEndDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SPStudentProgramme> toModels(
		SPStudentProgrammeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SPStudentProgramme> models = new ArrayList<SPStudentProgramme>(soapModels.length);

		for (SPStudentProgrammeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.validation.model.SPStudentProgramme"));

	public SPStudentProgrammeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spStudentCourseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpStudentCourseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spStudentCourseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPStudentProgramme.class;
	}

	@Override
	public String getModelClassName() {
		return SPStudentProgramme.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spStudentCourseId", getSpStudentCourseId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("nric", getNric());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("programme", getProgramme());
		attributes.put("courseCentre", getCourseCentre());
		attributes.put("courseStartDate", getCourseStartDate());
		attributes.put("courseEndDate", getCourseEndDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spStudentCourseId = (Long)attributes.get("spStudentCourseId");

		if (spStudentCourseId != null) {
			setSpStudentCourseId(spStudentCourseId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String nric = (String)attributes.get("nric");

		if (nric != null) {
			setNric(nric);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String programme = (String)attributes.get("programme");

		if (programme != null) {
			setProgramme(programme);
		}

		String courseCentre = (String)attributes.get("courseCentre");

		if (courseCentre != null) {
			setCourseCentre(courseCentre);
		}

		Date courseStartDate = (Date)attributes.get("courseStartDate");

		if (courseStartDate != null) {
			setCourseStartDate(courseStartDate);
		}

		Date courseEndDate = (Date)attributes.get("courseEndDate");

		if (courseEndDate != null) {
			setCourseEndDate(courseEndDate);
		}
	}

	@JSON
	@Override
	public long getSpStudentCourseId() {
		return _spStudentCourseId;
	}

	@Override
	public void setSpStudentCourseId(long spStudentCourseId) {
		_spStudentCourseId = spStudentCourseId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNric() {
		if (_nric == null) {
			return StringPool.BLANK;
		}
		else {
			return _nric;
		}
	}

	@Override
	public void setNric(String nric) {
		_columnBitmask |= NRIC_COLUMN_BITMASK;

		if (_originalNric == null) {
			_originalNric = _nric;
		}

		_nric = nric;
	}

	public String getOriginalNric() {
		return GetterUtil.getString(_originalNric);
	}

	@JSON
	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_columnBitmask |= EMAILADDRESS_COLUMN_BITMASK;

		if (_originalEmailAddress == null) {
			_originalEmailAddress = _emailAddress;
		}

		_emailAddress = emailAddress;
	}

	public String getOriginalEmailAddress() {
		return GetterUtil.getString(_originalEmailAddress);
	}

	@JSON
	@Override
	public String getProgramme() {
		if (_programme == null) {
			return StringPool.BLANK;
		}
		else {
			return _programme;
		}
	}

	@Override
	public void setProgramme(String programme) {
		_columnBitmask |= PROGRAMME_COLUMN_BITMASK;

		if (_originalProgramme == null) {
			_originalProgramme = _programme;
		}

		_programme = programme;
	}

	public String getOriginalProgramme() {
		return GetterUtil.getString(_originalProgramme);
	}

	@JSON
	@Override
	public String getCourseCentre() {
		if (_courseCentre == null) {
			return StringPool.BLANK;
		}
		else {
			return _courseCentre;
		}
	}

	@Override
	public void setCourseCentre(String courseCentre) {
		_courseCentre = courseCentre;
	}

	@JSON
	@Override
	public Date getCourseStartDate() {
		return _courseStartDate;
	}

	@Override
	public void setCourseStartDate(Date courseStartDate) {
		_courseStartDate = courseStartDate;
	}

	@JSON
	@Override
	public Date getCourseEndDate() {
		return _courseEndDate;
	}

	@Override
	public void setCourseEndDate(Date courseEndDate) {
		_columnBitmask = -1L;

		_courseEndDate = courseEndDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPStudentProgramme.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPStudentProgramme toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPStudentProgramme)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPStudentProgrammeImpl spStudentProgrammeImpl = new SPStudentProgrammeImpl();

		spStudentProgrammeImpl.setSpStudentCourseId(getSpStudentCourseId());
		spStudentProgrammeImpl.setCompanyId(getCompanyId());
		spStudentProgrammeImpl.setUserId(getUserId());
		spStudentProgrammeImpl.setUserName(getUserName());
		spStudentProgrammeImpl.setCreateDate(getCreateDate());
		spStudentProgrammeImpl.setModifiedDate(getModifiedDate());
		spStudentProgrammeImpl.setNric(getNric());
		spStudentProgrammeImpl.setEmailAddress(getEmailAddress());
		spStudentProgrammeImpl.setProgramme(getProgramme());
		spStudentProgrammeImpl.setCourseCentre(getCourseCentre());
		spStudentProgrammeImpl.setCourseStartDate(getCourseStartDate());
		spStudentProgrammeImpl.setCourseEndDate(getCourseEndDate());

		spStudentProgrammeImpl.resetOriginalValues();

		return spStudentProgrammeImpl;
	}

	@Override
	public int compareTo(SPStudentProgramme spStudentProgramme) {
		int value = 0;

		value = DateUtil.compareTo(getCourseEndDate(),
				spStudentProgramme.getCourseEndDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPStudentProgramme)) {
			return false;
		}

		SPStudentProgramme spStudentProgramme = (SPStudentProgramme)obj;

		long primaryKey = spStudentProgramme.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPStudentProgrammeModelImpl spStudentProgrammeModelImpl = this;

		spStudentProgrammeModelImpl._originalNric = spStudentProgrammeModelImpl._nric;

		spStudentProgrammeModelImpl._originalEmailAddress = spStudentProgrammeModelImpl._emailAddress;

		spStudentProgrammeModelImpl._originalProgramme = spStudentProgrammeModelImpl._programme;

		spStudentProgrammeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPStudentProgramme> toCacheModel() {
		SPStudentProgrammeCacheModel spStudentProgrammeCacheModel = new SPStudentProgrammeCacheModel();

		spStudentProgrammeCacheModel.spStudentCourseId = getSpStudentCourseId();

		spStudentProgrammeCacheModel.companyId = getCompanyId();

		spStudentProgrammeCacheModel.userId = getUserId();

		spStudentProgrammeCacheModel.userName = getUserName();

		String userName = spStudentProgrammeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spStudentProgrammeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spStudentProgrammeCacheModel.createDate = createDate.getTime();
		}
		else {
			spStudentProgrammeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spStudentProgrammeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spStudentProgrammeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spStudentProgrammeCacheModel.nric = getNric();

		String nric = spStudentProgrammeCacheModel.nric;

		if ((nric != null) && (nric.length() == 0)) {
			spStudentProgrammeCacheModel.nric = null;
		}

		spStudentProgrammeCacheModel.emailAddress = getEmailAddress();

		String emailAddress = spStudentProgrammeCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			spStudentProgrammeCacheModel.emailAddress = null;
		}

		spStudentProgrammeCacheModel.programme = getProgramme();

		String programme = spStudentProgrammeCacheModel.programme;

		if ((programme != null) && (programme.length() == 0)) {
			spStudentProgrammeCacheModel.programme = null;
		}

		spStudentProgrammeCacheModel.courseCentre = getCourseCentre();

		String courseCentre = spStudentProgrammeCacheModel.courseCentre;

		if ((courseCentre != null) && (courseCentre.length() == 0)) {
			spStudentProgrammeCacheModel.courseCentre = null;
		}

		Date courseStartDate = getCourseStartDate();

		if (courseStartDate != null) {
			spStudentProgrammeCacheModel.courseStartDate = courseStartDate.getTime();
		}
		else {
			spStudentProgrammeCacheModel.courseStartDate = Long.MIN_VALUE;
		}

		Date courseEndDate = getCourseEndDate();

		if (courseEndDate != null) {
			spStudentProgrammeCacheModel.courseEndDate = courseEndDate.getTime();
		}
		else {
			spStudentProgrammeCacheModel.courseEndDate = Long.MIN_VALUE;
		}

		return spStudentProgrammeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{spStudentCourseId=");
		sb.append(getSpStudentCourseId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", nric=");
		sb.append(getNric());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", programme=");
		sb.append(getProgramme());
		sb.append(", courseCentre=");
		sb.append(getCourseCentre());
		sb.append(", courseStartDate=");
		sb.append(getCourseStartDate());
		sb.append(", courseEndDate=");
		sb.append(getCourseEndDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.validation.model.SPStudentProgramme");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spStudentCourseId</column-name><column-value><![CDATA[");
		sb.append(getSpStudentCourseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nric</column-name><column-value><![CDATA[");
		sb.append(getNric());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>programme</column-name><column-value><![CDATA[");
		sb.append(getProgramme());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseCentre</column-name><column-value><![CDATA[");
		sb.append(getCourseCentre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseStartDate</column-name><column-value><![CDATA[");
		sb.append(getCourseStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseEndDate</column-name><column-value><![CDATA[");
		sb.append(getCourseEndDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPStudentProgramme.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPStudentProgramme.class
		};
	private long _spStudentCourseId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _nric;
	private String _originalNric;
	private String _emailAddress;
	private String _originalEmailAddress;
	private String _programme;
	private String _originalProgramme;
	private String _courseCentre;
	private Date _courseStartDate;
	private Date _courseEndDate;
	private long _columnBitmask;
	private SPStudentProgramme _escapedModel;
}
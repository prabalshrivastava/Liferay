/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.startupprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.startupprofile.model.EmployeeInfo;
import com.sambaash.platform.srv.startupprofile.model.EmployeeInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EmployeeInfo service. Represents a row in the &quot;SPEmployeeInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.startupprofile.model.EmployeeInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeeInfoImpl}.
 * </p>
 *
 * @author pradeep
 * @see EmployeeInfoImpl
 * @see com.sambaash.platform.srv.startupprofile.model.EmployeeInfo
 * @see com.sambaash.platform.srv.startupprofile.model.EmployeeInfoModel
 * @generated
 */
public class EmployeeInfoModelImpl extends BaseModelImpl<EmployeeInfo>
	implements EmployeeInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a employee info model instance should use the {@link com.sambaash.platform.srv.startupprofile.model.EmployeeInfo} interface instead.
	 */
	public static final String TABLE_NAME = "SPEmployeeInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "employeeInfoId", Types.BIGINT },
			{ "organizationId", Types.BIGINT },
			{ "employees", Types.VARCHAR },
			{ "directors", Types.VARCHAR },
			{ "financeEmployees", Types.VARCHAR },
			{ "professionalCandidates", Types.VARCHAR },
			{ "foundationCandidates", Types.VARCHAR },
			{ "accountancyCandidates", Types.VARCHAR },
			{ "ISCAAccountants", Types.VARCHAR },
			{ "ICASAccountants", Types.VARCHAR },
			{ "ICAEWAccountants", Types.VARCHAR },
			{ "CAIAccountants", Types.VARCHAR },
			{ "ACCAAccountants", Types.VARCHAR },
			{ "CPAAccountants", Types.VARCHAR },
			{ "CAANZAccountants", Types.VARCHAR },
			{ "CPACanadaAccountants", Types.VARCHAR },
			{ "HKCPAAccountants", Types.VARCHAR },
			{ "SAICAAccountants", Types.VARCHAR },
			{ "JICPAAccountants", Types.VARCHAR },
			{ "AICPAAccountants", Types.VARCHAR },
			{ "CIMAAccountants", Types.VARCHAR },
			{ "othersAccountants", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPEmployeeInfo (uuid_ VARCHAR(75) null,employeeInfoId BIGINT(20) not null primary key,organizationId BIGINT(20),employees VARCHAR(75) null,directors VARCHAR(75) null,financeEmployees VARCHAR(75) null,professionalCandidates VARCHAR(75) null,foundationCandidates VARCHAR(75) null,accountancyCandidates VARCHAR(75) null,ISCAAccountants VARCHAR(75) null,ICASAccountants VARCHAR(75) null,ICAEWAccountants VARCHAR(75) null,CAIAccountants VARCHAR(75) null,ACCAAccountants VARCHAR(75) null,CPAAccountants VARCHAR(75) null,CAANZAccountants VARCHAR(75) null,CPACanadaAccountants VARCHAR(75) null,HKCPAAccountants VARCHAR(75) null,SAICAAccountants VARCHAR(75) null,JICPAAccountants VARCHAR(75) null,AICPAAccountants VARCHAR(75) null,CIMAAccountants VARCHAR(75) null,othersAccountants VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPEmployeeInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY employeeInfo.employeeInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPEmployeeInfo.employeeInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.startupprofile.model.EmployeeInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.startupprofile.model.EmployeeInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.startupprofile.model.EmployeeInfo"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long UUID_COLUMN_BITMASK = 2L;
	public static long EMPLOYEEINFOID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.startupprofile.model.EmployeeInfo"));

	public EmployeeInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmployeeInfo.class;
	}

	@Override
	public String getModelClassName() {
		return EmployeeInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("employeeInfoId", getEmployeeInfoId());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("employees", getEmployees());
		attributes.put("directors", getDirectors());
		attributes.put("financeEmployees", getFinanceEmployees());
		attributes.put("professionalCandidates", getProfessionalCandidates());
		attributes.put("foundationCandidates", getFoundationCandidates());
		attributes.put("accountancyCandidates", getAccountancyCandidates());
		attributes.put("ISCAAccountants", getISCAAccountants());
		attributes.put("ICASAccountants", getICASAccountants());
		attributes.put("ICAEWAccountants", getICAEWAccountants());
		attributes.put("CAIAccountants", getCAIAccountants());
		attributes.put("ACCAAccountants", getACCAAccountants());
		attributes.put("CPAAccountants", getCPAAccountants());
		attributes.put("CAANZAccountants", getCAANZAccountants());
		attributes.put("CPACanadaAccountants", getCPACanadaAccountants());
		attributes.put("HKCPAAccountants", getHKCPAAccountants());
		attributes.put("SAICAAccountants", getSAICAAccountants());
		attributes.put("JICPAAccountants", getJICPAAccountants());
		attributes.put("AICPAAccountants", getAICPAAccountants());
		attributes.put("CIMAAccountants", getCIMAAccountants());
		attributes.put("othersAccountants", getOthersAccountants());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long employeeInfoId = (Long)attributes.get("employeeInfoId");

		if (employeeInfoId != null) {
			setEmployeeInfoId(employeeInfoId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String employees = (String)attributes.get("employees");

		if (employees != null) {
			setEmployees(employees);
		}

		String directors = (String)attributes.get("directors");

		if (directors != null) {
			setDirectors(directors);
		}

		String financeEmployees = (String)attributes.get("financeEmployees");

		if (financeEmployees != null) {
			setFinanceEmployees(financeEmployees);
		}

		String professionalCandidates = (String)attributes.get(
				"professionalCandidates");

		if (professionalCandidates != null) {
			setProfessionalCandidates(professionalCandidates);
		}

		String foundationCandidates = (String)attributes.get(
				"foundationCandidates");

		if (foundationCandidates != null) {
			setFoundationCandidates(foundationCandidates);
		}

		String accountancyCandidates = (String)attributes.get(
				"accountancyCandidates");

		if (accountancyCandidates != null) {
			setAccountancyCandidates(accountancyCandidates);
		}

		String ISCAAccountants = (String)attributes.get("ISCAAccountants");

		if (ISCAAccountants != null) {
			setISCAAccountants(ISCAAccountants);
		}

		String ICASAccountants = (String)attributes.get("ICASAccountants");

		if (ICASAccountants != null) {
			setICASAccountants(ICASAccountants);
		}

		String ICAEWAccountants = (String)attributes.get("ICAEWAccountants");

		if (ICAEWAccountants != null) {
			setICAEWAccountants(ICAEWAccountants);
		}

		String CAIAccountants = (String)attributes.get("CAIAccountants");

		if (CAIAccountants != null) {
			setCAIAccountants(CAIAccountants);
		}

		String ACCAAccountants = (String)attributes.get("ACCAAccountants");

		if (ACCAAccountants != null) {
			setACCAAccountants(ACCAAccountants);
		}

		String CPAAccountants = (String)attributes.get("CPAAccountants");

		if (CPAAccountants != null) {
			setCPAAccountants(CPAAccountants);
		}

		String CAANZAccountants = (String)attributes.get("CAANZAccountants");

		if (CAANZAccountants != null) {
			setCAANZAccountants(CAANZAccountants);
		}

		String CPACanadaAccountants = (String)attributes.get(
				"CPACanadaAccountants");

		if (CPACanadaAccountants != null) {
			setCPACanadaAccountants(CPACanadaAccountants);
		}

		String HKCPAAccountants = (String)attributes.get("HKCPAAccountants");

		if (HKCPAAccountants != null) {
			setHKCPAAccountants(HKCPAAccountants);
		}

		String SAICAAccountants = (String)attributes.get("SAICAAccountants");

		if (SAICAAccountants != null) {
			setSAICAAccountants(SAICAAccountants);
		}

		String JICPAAccountants = (String)attributes.get("JICPAAccountants");

		if (JICPAAccountants != null) {
			setJICPAAccountants(JICPAAccountants);
		}

		String AICPAAccountants = (String)attributes.get("AICPAAccountants");

		if (AICPAAccountants != null) {
			setAICPAAccountants(AICPAAccountants);
		}

		String CIMAAccountants = (String)attributes.get("CIMAAccountants");

		if (CIMAAccountants != null) {
			setCIMAAccountants(CIMAAccountants);
		}

		String othersAccountants = (String)attributes.get("othersAccountants");

		if (othersAccountants != null) {
			setOthersAccountants(othersAccountants);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEmployeeInfoId() {
		return _employeeInfoId;
	}

	@Override
	public void setEmployeeInfoId(long employeeInfoId) {
		_employeeInfoId = employeeInfoId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public String getEmployees() {
		if (_employees == null) {
			return StringPool.BLANK;
		}
		else {
			return _employees;
		}
	}

	@Override
	public void setEmployees(String employees) {
		_employees = employees;
	}

	@Override
	public String getDirectors() {
		if (_directors == null) {
			return StringPool.BLANK;
		}
		else {
			return _directors;
		}
	}

	@Override
	public void setDirectors(String directors) {
		_directors = directors;
	}

	@Override
	public String getFinanceEmployees() {
		if (_financeEmployees == null) {
			return StringPool.BLANK;
		}
		else {
			return _financeEmployees;
		}
	}

	@Override
	public void setFinanceEmployees(String financeEmployees) {
		_financeEmployees = financeEmployees;
	}

	@Override
	public String getProfessionalCandidates() {
		if (_professionalCandidates == null) {
			return StringPool.BLANK;
		}
		else {
			return _professionalCandidates;
		}
	}

	@Override
	public void setProfessionalCandidates(String professionalCandidates) {
		_professionalCandidates = professionalCandidates;
	}

	@Override
	public String getFoundationCandidates() {
		if (_foundationCandidates == null) {
			return StringPool.BLANK;
		}
		else {
			return _foundationCandidates;
		}
	}

	@Override
	public void setFoundationCandidates(String foundationCandidates) {
		_foundationCandidates = foundationCandidates;
	}

	@Override
	public String getAccountancyCandidates() {
		if (_accountancyCandidates == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountancyCandidates;
		}
	}

	@Override
	public void setAccountancyCandidates(String accountancyCandidates) {
		_accountancyCandidates = accountancyCandidates;
	}

	@Override
	public String getISCAAccountants() {
		if (_ISCAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _ISCAAccountants;
		}
	}

	@Override
	public void setISCAAccountants(String ISCAAccountants) {
		_ISCAAccountants = ISCAAccountants;
	}

	@Override
	public String getICASAccountants() {
		if (_ICASAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _ICASAccountants;
		}
	}

	@Override
	public void setICASAccountants(String ICASAccountants) {
		_ICASAccountants = ICASAccountants;
	}

	@Override
	public String getICAEWAccountants() {
		if (_ICAEWAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _ICAEWAccountants;
		}
	}

	@Override
	public void setICAEWAccountants(String ICAEWAccountants) {
		_ICAEWAccountants = ICAEWAccountants;
	}

	@Override
	public String getCAIAccountants() {
		if (_CAIAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _CAIAccountants;
		}
	}

	@Override
	public void setCAIAccountants(String CAIAccountants) {
		_CAIAccountants = CAIAccountants;
	}

	@Override
	public String getACCAAccountants() {
		if (_ACCAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _ACCAAccountants;
		}
	}

	@Override
	public void setACCAAccountants(String ACCAAccountants) {
		_ACCAAccountants = ACCAAccountants;
	}

	@Override
	public String getCPAAccountants() {
		if (_CPAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _CPAAccountants;
		}
	}

	@Override
	public void setCPAAccountants(String CPAAccountants) {
		_CPAAccountants = CPAAccountants;
	}

	@Override
	public String getCAANZAccountants() {
		if (_CAANZAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _CAANZAccountants;
		}
	}

	@Override
	public void setCAANZAccountants(String CAANZAccountants) {
		_CAANZAccountants = CAANZAccountants;
	}

	@Override
	public String getCPACanadaAccountants() {
		if (_CPACanadaAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _CPACanadaAccountants;
		}
	}

	@Override
	public void setCPACanadaAccountants(String CPACanadaAccountants) {
		_CPACanadaAccountants = CPACanadaAccountants;
	}

	@Override
	public String getHKCPAAccountants() {
		if (_HKCPAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _HKCPAAccountants;
		}
	}

	@Override
	public void setHKCPAAccountants(String HKCPAAccountants) {
		_HKCPAAccountants = HKCPAAccountants;
	}

	@Override
	public String getSAICAAccountants() {
		if (_SAICAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _SAICAAccountants;
		}
	}

	@Override
	public void setSAICAAccountants(String SAICAAccountants) {
		_SAICAAccountants = SAICAAccountants;
	}

	@Override
	public String getJICPAAccountants() {
		if (_JICPAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _JICPAAccountants;
		}
	}

	@Override
	public void setJICPAAccountants(String JICPAAccountants) {
		_JICPAAccountants = JICPAAccountants;
	}

	@Override
	public String getAICPAAccountants() {
		if (_AICPAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _AICPAAccountants;
		}
	}

	@Override
	public void setAICPAAccountants(String AICPAAccountants) {
		_AICPAAccountants = AICPAAccountants;
	}

	@Override
	public String getCIMAAccountants() {
		if (_CIMAAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _CIMAAccountants;
		}
	}

	@Override
	public void setCIMAAccountants(String CIMAAccountants) {
		_CIMAAccountants = CIMAAccountants;
	}

	@Override
	public String getOthersAccountants() {
		if (_othersAccountants == null) {
			return StringPool.BLANK;
		}
		else {
			return _othersAccountants;
		}
	}

	@Override
	public void setOthersAccountants(String othersAccountants) {
		_othersAccountants = othersAccountants;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			EmployeeInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmployeeInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmployeeInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmployeeInfoImpl employeeInfoImpl = new EmployeeInfoImpl();

		employeeInfoImpl.setUuid(getUuid());
		employeeInfoImpl.setEmployeeInfoId(getEmployeeInfoId());
		employeeInfoImpl.setOrganizationId(getOrganizationId());
		employeeInfoImpl.setEmployees(getEmployees());
		employeeInfoImpl.setDirectors(getDirectors());
		employeeInfoImpl.setFinanceEmployees(getFinanceEmployees());
		employeeInfoImpl.setProfessionalCandidates(getProfessionalCandidates());
		employeeInfoImpl.setFoundationCandidates(getFoundationCandidates());
		employeeInfoImpl.setAccountancyCandidates(getAccountancyCandidates());
		employeeInfoImpl.setISCAAccountants(getISCAAccountants());
		employeeInfoImpl.setICASAccountants(getICASAccountants());
		employeeInfoImpl.setICAEWAccountants(getICAEWAccountants());
		employeeInfoImpl.setCAIAccountants(getCAIAccountants());
		employeeInfoImpl.setACCAAccountants(getACCAAccountants());
		employeeInfoImpl.setCPAAccountants(getCPAAccountants());
		employeeInfoImpl.setCAANZAccountants(getCAANZAccountants());
		employeeInfoImpl.setCPACanadaAccountants(getCPACanadaAccountants());
		employeeInfoImpl.setHKCPAAccountants(getHKCPAAccountants());
		employeeInfoImpl.setSAICAAccountants(getSAICAAccountants());
		employeeInfoImpl.setJICPAAccountants(getJICPAAccountants());
		employeeInfoImpl.setAICPAAccountants(getAICPAAccountants());
		employeeInfoImpl.setCIMAAccountants(getCIMAAccountants());
		employeeInfoImpl.setOthersAccountants(getOthersAccountants());

		employeeInfoImpl.resetOriginalValues();

		return employeeInfoImpl;
	}

	@Override
	public int compareTo(EmployeeInfo employeeInfo) {
		long primaryKey = employeeInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmployeeInfo)) {
			return false;
		}

		EmployeeInfo employeeInfo = (EmployeeInfo)obj;

		long primaryKey = employeeInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmployeeInfoModelImpl employeeInfoModelImpl = this;

		employeeInfoModelImpl._originalUuid = employeeInfoModelImpl._uuid;

		employeeInfoModelImpl._originalOrganizationId = employeeInfoModelImpl._organizationId;

		employeeInfoModelImpl._setOriginalOrganizationId = false;

		employeeInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmployeeInfo> toCacheModel() {
		EmployeeInfoCacheModel employeeInfoCacheModel = new EmployeeInfoCacheModel();

		employeeInfoCacheModel.uuid = getUuid();

		String uuid = employeeInfoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			employeeInfoCacheModel.uuid = null;
		}

		employeeInfoCacheModel.employeeInfoId = getEmployeeInfoId();

		employeeInfoCacheModel.organizationId = getOrganizationId();

		employeeInfoCacheModel.employees = getEmployees();

		String employees = employeeInfoCacheModel.employees;

		if ((employees != null) && (employees.length() == 0)) {
			employeeInfoCacheModel.employees = null;
		}

		employeeInfoCacheModel.directors = getDirectors();

		String directors = employeeInfoCacheModel.directors;

		if ((directors != null) && (directors.length() == 0)) {
			employeeInfoCacheModel.directors = null;
		}

		employeeInfoCacheModel.financeEmployees = getFinanceEmployees();

		String financeEmployees = employeeInfoCacheModel.financeEmployees;

		if ((financeEmployees != null) && (financeEmployees.length() == 0)) {
			employeeInfoCacheModel.financeEmployees = null;
		}

		employeeInfoCacheModel.professionalCandidates = getProfessionalCandidates();

		String professionalCandidates = employeeInfoCacheModel.professionalCandidates;

		if ((professionalCandidates != null) &&
				(professionalCandidates.length() == 0)) {
			employeeInfoCacheModel.professionalCandidates = null;
		}

		employeeInfoCacheModel.foundationCandidates = getFoundationCandidates();

		String foundationCandidates = employeeInfoCacheModel.foundationCandidates;

		if ((foundationCandidates != null) &&
				(foundationCandidates.length() == 0)) {
			employeeInfoCacheModel.foundationCandidates = null;
		}

		employeeInfoCacheModel.accountancyCandidates = getAccountancyCandidates();

		String accountancyCandidates = employeeInfoCacheModel.accountancyCandidates;

		if ((accountancyCandidates != null) &&
				(accountancyCandidates.length() == 0)) {
			employeeInfoCacheModel.accountancyCandidates = null;
		}

		employeeInfoCacheModel.ISCAAccountants = getISCAAccountants();

		String ISCAAccountants = employeeInfoCacheModel.ISCAAccountants;

		if ((ISCAAccountants != null) && (ISCAAccountants.length() == 0)) {
			employeeInfoCacheModel.ISCAAccountants = null;
		}

		employeeInfoCacheModel.ICASAccountants = getICASAccountants();

		String ICASAccountants = employeeInfoCacheModel.ICASAccountants;

		if ((ICASAccountants != null) && (ICASAccountants.length() == 0)) {
			employeeInfoCacheModel.ICASAccountants = null;
		}

		employeeInfoCacheModel.ICAEWAccountants = getICAEWAccountants();

		String ICAEWAccountants = employeeInfoCacheModel.ICAEWAccountants;

		if ((ICAEWAccountants != null) && (ICAEWAccountants.length() == 0)) {
			employeeInfoCacheModel.ICAEWAccountants = null;
		}

		employeeInfoCacheModel.CAIAccountants = getCAIAccountants();

		String CAIAccountants = employeeInfoCacheModel.CAIAccountants;

		if ((CAIAccountants != null) && (CAIAccountants.length() == 0)) {
			employeeInfoCacheModel.CAIAccountants = null;
		}

		employeeInfoCacheModel.ACCAAccountants = getACCAAccountants();

		String ACCAAccountants = employeeInfoCacheModel.ACCAAccountants;

		if ((ACCAAccountants != null) && (ACCAAccountants.length() == 0)) {
			employeeInfoCacheModel.ACCAAccountants = null;
		}

		employeeInfoCacheModel.CPAAccountants = getCPAAccountants();

		String CPAAccountants = employeeInfoCacheModel.CPAAccountants;

		if ((CPAAccountants != null) && (CPAAccountants.length() == 0)) {
			employeeInfoCacheModel.CPAAccountants = null;
		}

		employeeInfoCacheModel.CAANZAccountants = getCAANZAccountants();

		String CAANZAccountants = employeeInfoCacheModel.CAANZAccountants;

		if ((CAANZAccountants != null) && (CAANZAccountants.length() == 0)) {
			employeeInfoCacheModel.CAANZAccountants = null;
		}

		employeeInfoCacheModel.CPACanadaAccountants = getCPACanadaAccountants();

		String CPACanadaAccountants = employeeInfoCacheModel.CPACanadaAccountants;

		if ((CPACanadaAccountants != null) &&
				(CPACanadaAccountants.length() == 0)) {
			employeeInfoCacheModel.CPACanadaAccountants = null;
		}

		employeeInfoCacheModel.HKCPAAccountants = getHKCPAAccountants();

		String HKCPAAccountants = employeeInfoCacheModel.HKCPAAccountants;

		if ((HKCPAAccountants != null) && (HKCPAAccountants.length() == 0)) {
			employeeInfoCacheModel.HKCPAAccountants = null;
		}

		employeeInfoCacheModel.SAICAAccountants = getSAICAAccountants();

		String SAICAAccountants = employeeInfoCacheModel.SAICAAccountants;

		if ((SAICAAccountants != null) && (SAICAAccountants.length() == 0)) {
			employeeInfoCacheModel.SAICAAccountants = null;
		}

		employeeInfoCacheModel.JICPAAccountants = getJICPAAccountants();

		String JICPAAccountants = employeeInfoCacheModel.JICPAAccountants;

		if ((JICPAAccountants != null) && (JICPAAccountants.length() == 0)) {
			employeeInfoCacheModel.JICPAAccountants = null;
		}

		employeeInfoCacheModel.AICPAAccountants = getAICPAAccountants();

		String AICPAAccountants = employeeInfoCacheModel.AICPAAccountants;

		if ((AICPAAccountants != null) && (AICPAAccountants.length() == 0)) {
			employeeInfoCacheModel.AICPAAccountants = null;
		}

		employeeInfoCacheModel.CIMAAccountants = getCIMAAccountants();

		String CIMAAccountants = employeeInfoCacheModel.CIMAAccountants;

		if ((CIMAAccountants != null) && (CIMAAccountants.length() == 0)) {
			employeeInfoCacheModel.CIMAAccountants = null;
		}

		employeeInfoCacheModel.othersAccountants = getOthersAccountants();

		String othersAccountants = employeeInfoCacheModel.othersAccountants;

		if ((othersAccountants != null) && (othersAccountants.length() == 0)) {
			employeeInfoCacheModel.othersAccountants = null;
		}

		return employeeInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", employeeInfoId=");
		sb.append(getEmployeeInfoId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", employees=");
		sb.append(getEmployees());
		sb.append(", directors=");
		sb.append(getDirectors());
		sb.append(", financeEmployees=");
		sb.append(getFinanceEmployees());
		sb.append(", professionalCandidates=");
		sb.append(getProfessionalCandidates());
		sb.append(", foundationCandidates=");
		sb.append(getFoundationCandidates());
		sb.append(", accountancyCandidates=");
		sb.append(getAccountancyCandidates());
		sb.append(", ISCAAccountants=");
		sb.append(getISCAAccountants());
		sb.append(", ICASAccountants=");
		sb.append(getICASAccountants());
		sb.append(", ICAEWAccountants=");
		sb.append(getICAEWAccountants());
		sb.append(", CAIAccountants=");
		sb.append(getCAIAccountants());
		sb.append(", ACCAAccountants=");
		sb.append(getACCAAccountants());
		sb.append(", CPAAccountants=");
		sb.append(getCPAAccountants());
		sb.append(", CAANZAccountants=");
		sb.append(getCAANZAccountants());
		sb.append(", CPACanadaAccountants=");
		sb.append(getCPACanadaAccountants());
		sb.append(", HKCPAAccountants=");
		sb.append(getHKCPAAccountants());
		sb.append(", SAICAAccountants=");
		sb.append(getSAICAAccountants());
		sb.append(", JICPAAccountants=");
		sb.append(getJICPAAccountants());
		sb.append(", AICPAAccountants=");
		sb.append(getAICPAAccountants());
		sb.append(", CIMAAccountants=");
		sb.append(getCIMAAccountants());
		sb.append(", othersAccountants=");
		sb.append(getOthersAccountants());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.startupprofile.model.EmployeeInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeInfoId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employees</column-name><column-value><![CDATA[");
		sb.append(getEmployees());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>directors</column-name><column-value><![CDATA[");
		sb.append(getDirectors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financeEmployees</column-name><column-value><![CDATA[");
		sb.append(getFinanceEmployees());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>professionalCandidates</column-name><column-value><![CDATA[");
		sb.append(getProfessionalCandidates());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>foundationCandidates</column-name><column-value><![CDATA[");
		sb.append(getFoundationCandidates());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountancyCandidates</column-name><column-value><![CDATA[");
		sb.append(getAccountancyCandidates());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ISCAAccountants</column-name><column-value><![CDATA[");
		sb.append(getISCAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ICASAccountants</column-name><column-value><![CDATA[");
		sb.append(getICASAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ICAEWAccountants</column-name><column-value><![CDATA[");
		sb.append(getICAEWAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CAIAccountants</column-name><column-value><![CDATA[");
		sb.append(getCAIAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ACCAAccountants</column-name><column-value><![CDATA[");
		sb.append(getACCAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CPAAccountants</column-name><column-value><![CDATA[");
		sb.append(getCPAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CAANZAccountants</column-name><column-value><![CDATA[");
		sb.append(getCAANZAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CPACanadaAccountants</column-name><column-value><![CDATA[");
		sb.append(getCPACanadaAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>HKCPAAccountants</column-name><column-value><![CDATA[");
		sb.append(getHKCPAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SAICAAccountants</column-name><column-value><![CDATA[");
		sb.append(getSAICAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>JICPAAccountants</column-name><column-value><![CDATA[");
		sb.append(getJICPAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AICPAAccountants</column-name><column-value><![CDATA[");
		sb.append(getAICPAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CIMAAccountants</column-name><column-value><![CDATA[");
		sb.append(getCIMAAccountants());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>othersAccountants</column-name><column-value><![CDATA[");
		sb.append(getOthersAccountants());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmployeeInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmployeeInfo.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _employeeInfoId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _employees;
	private String _directors;
	private String _financeEmployees;
	private String _professionalCandidates;
	private String _foundationCandidates;
	private String _accountancyCandidates;
	private String _ISCAAccountants;
	private String _ICASAccountants;
	private String _ICAEWAccountants;
	private String _CAIAccountants;
	private String _ACCAAccountants;
	private String _CPAAccountants;
	private String _CAANZAccountants;
	private String _CPACanadaAccountants;
	private String _HKCPAAccountants;
	private String _SAICAAccountants;
	private String _JICPAAccountants;
	private String _AICPAAccountants;
	private String _CIMAAccountants;
	private String _othersAccountants;
	private long _columnBitmask;
	private EmployeeInfo _escapedModel;
}
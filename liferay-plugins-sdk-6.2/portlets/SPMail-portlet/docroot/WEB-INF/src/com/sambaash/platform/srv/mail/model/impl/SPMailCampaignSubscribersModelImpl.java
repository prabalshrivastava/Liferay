/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.mail.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers;
import com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribersModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPMailCampaignSubscribers service. Represents a row in the &quot;SPMailCampaignSubscribers&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribersModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPMailCampaignSubscribersImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPMailCampaignSubscribersImpl
 * @see com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers
 * @see com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribersModel
 * @generated
 */
public class SPMailCampaignSubscribersModelImpl extends BaseModelImpl<SPMailCampaignSubscribers>
	implements SPMailCampaignSubscribersModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p mail campaign subscribers model instance should use the {@link com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers} interface instead.
	 */
	public static final String TABLE_NAME = "SPMailCampaignSubscribers";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spMailCampaignSubscribersId", Types.BIGINT },
			{ "spMailCampaignId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "parentSubscriberId", Types.BIGINT },
			{ "emailAddress", Types.VARCHAR },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "spMailType", Types.INTEGER },
			{ "messageId", Types.VARCHAR },
			{ "opened", Types.BOOLEAN },
			{ "countryName", Types.VARCHAR },
			{ "city", Types.VARCHAR },
			{ "regionName", Types.VARCHAR },
			{ "areaCode", Types.INTEGER },
			{ "latitude", Types.VARCHAR },
			{ "longitude", Types.VARCHAR },
			{ "ipAddress", Types.VARCHAR },
			{ "webVersion", Types.BOOLEAN },
			{ "openedDate", Types.TIMESTAMP },
			{ "createBy", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMailCampaignSubscribers (spMailCampaignSubscribersId BIGINT(20) not null primary key,spMailCampaignId BIGINT(20),userId BIGINT(20),parentSubscriberId BIGINT(20),emailAddress VARCHAR(75) null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,spMailType INTEGER,messageId VARCHAR(500) null,opened BOOLEAN,countryName VARCHAR(75) null,city VARCHAR(75) null,regionName VARCHAR(75) null,areaCode INTEGER,latitude VARCHAR(50) null,longitude VARCHAR(50) null,ipAddress VARCHAR(15) null,webVersion BOOLEAN,openedDate DATETIME null,createBy BIGINT(20),createDate DATETIME null,modifiedBy BIGINT(20),modifiedDate DATETIME null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SPMailCampaignSubscribers";
	public static final String ORDER_BY_JPQL = " ORDER BY spMailCampaignSubscribers.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMailCampaignSubscribers.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers"),
			true);
	public static long EMAILADDRESS_COLUMN_BITMASK = 1L;
	public static long FIRSTNAME_COLUMN_BITMASK = 2L;
	public static long LASTNAME_COLUMN_BITMASK = 4L;
	public static long MESSAGEID_COLUMN_BITMASK = 8L;
	public static long OPENED_COLUMN_BITMASK = 16L;
	public static long SPMAILCAMPAIGNID_COLUMN_BITMASK = 32L;
	public static long SPMAILTYPE_COLUMN_BITMASK = 64L;
	public static long STATUS_COLUMN_BITMASK = 128L;
	public static long USERID_COLUMN_BITMASK = 256L;
	public static long CREATEDATE_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers"));

	public SPMailCampaignSubscribersModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spMailCampaignSubscribersId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpMailCampaignSubscribersId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spMailCampaignSubscribersId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPMailCampaignSubscribers.class;
	}

	@Override
	public String getModelClassName() {
		return SPMailCampaignSubscribers.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spMailCampaignSubscribersId",
			getSpMailCampaignSubscribersId());
		attributes.put("spMailCampaignId", getSpMailCampaignId());
		attributes.put("userId", getUserId());
		attributes.put("parentSubscriberId", getParentSubscriberId());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("spMailType", getSpMailType());
		attributes.put("messageId", getMessageId());
		attributes.put("opened", getOpened());
		attributes.put("countryName", getCountryName());
		attributes.put("city", getCity());
		attributes.put("regionName", getRegionName());
		attributes.put("areaCode", getAreaCode());
		attributes.put("latitude", getLatitude());
		attributes.put("longitude", getLongitude());
		attributes.put("ipAddress", getIpAddress());
		attributes.put("webVersion", getWebVersion());
		attributes.put("openedDate", getOpenedDate());
		attributes.put("createBy", getCreateBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spMailCampaignSubscribersId = (Long)attributes.get(
				"spMailCampaignSubscribersId");

		if (spMailCampaignSubscribersId != null) {
			setSpMailCampaignSubscribersId(spMailCampaignSubscribersId);
		}

		Long spMailCampaignId = (Long)attributes.get("spMailCampaignId");

		if (spMailCampaignId != null) {
			setSpMailCampaignId(spMailCampaignId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long parentSubscriberId = (Long)attributes.get("parentSubscriberId");

		if (parentSubscriberId != null) {
			setParentSubscriberId(parentSubscriberId);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		Integer spMailType = (Integer)attributes.get("spMailType");

		if (spMailType != null) {
			setSpMailType(spMailType);
		}

		String messageId = (String)attributes.get("messageId");

		if (messageId != null) {
			setMessageId(messageId);
		}

		Boolean opened = (Boolean)attributes.get("opened");

		if (opened != null) {
			setOpened(opened);
		}

		String countryName = (String)attributes.get("countryName");

		if (countryName != null) {
			setCountryName(countryName);
		}

		String city = (String)attributes.get("city");

		if (city != null) {
			setCity(city);
		}

		String regionName = (String)attributes.get("regionName");

		if (regionName != null) {
			setRegionName(regionName);
		}

		Integer areaCode = (Integer)attributes.get("areaCode");

		if (areaCode != null) {
			setAreaCode(areaCode);
		}

		String latitude = (String)attributes.get("latitude");

		if (latitude != null) {
			setLatitude(latitude);
		}

		String longitude = (String)attributes.get("longitude");

		if (longitude != null) {
			setLongitude(longitude);
		}

		String ipAddress = (String)attributes.get("ipAddress");

		if (ipAddress != null) {
			setIpAddress(ipAddress);
		}

		Boolean webVersion = (Boolean)attributes.get("webVersion");

		if (webVersion != null) {
			setWebVersion(webVersion);
		}

		Date openedDate = (Date)attributes.get("openedDate");

		if (openedDate != null) {
			setOpenedDate(openedDate);
		}

		Long createBy = (Long)attributes.get("createBy");

		if (createBy != null) {
			setCreateBy(createBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public long getSpMailCampaignSubscribersId() {
		return _spMailCampaignSubscribersId;
	}

	@Override
	public void setSpMailCampaignSubscribersId(long spMailCampaignSubscribersId) {
		_spMailCampaignSubscribersId = spMailCampaignSubscribersId;
	}

	@Override
	public long getSpMailCampaignId() {
		return _spMailCampaignId;
	}

	@Override
	public void setSpMailCampaignId(long spMailCampaignId) {
		_columnBitmask |= SPMAILCAMPAIGNID_COLUMN_BITMASK;

		if (!_setOriginalSpMailCampaignId) {
			_setOriginalSpMailCampaignId = true;

			_originalSpMailCampaignId = _spMailCampaignId;
		}

		_spMailCampaignId = spMailCampaignId;
	}

	public long getOriginalSpMailCampaignId() {
		return _originalSpMailCampaignId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public long getParentSubscriberId() {
		return _parentSubscriberId;
	}

	@Override
	public void setParentSubscriberId(long parentSubscriberId) {
		_parentSubscriberId = parentSubscriberId;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_columnBitmask |= EMAILADDRESS_COLUMN_BITMASK;

		if (_originalEmailAddress == null) {
			_originalEmailAddress = _emailAddress;
		}

		_emailAddress = emailAddress;
	}

	public String getOriginalEmailAddress() {
		return GetterUtil.getString(_originalEmailAddress);
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_columnBitmask |= FIRSTNAME_COLUMN_BITMASK;

		if (_originalFirstName == null) {
			_originalFirstName = _firstName;
		}

		_firstName = firstName;
	}

	public String getOriginalFirstName() {
		return GetterUtil.getString(_originalFirstName);
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_columnBitmask |= LASTNAME_COLUMN_BITMASK;

		if (_originalLastName == null) {
			_originalLastName = _lastName;
		}

		_lastName = lastName;
	}

	public String getOriginalLastName() {
		return GetterUtil.getString(_originalLastName);
	}

	@Override
	public int getSpMailType() {
		return _spMailType;
	}

	@Override
	public void setSpMailType(int spMailType) {
		_columnBitmask |= SPMAILTYPE_COLUMN_BITMASK;

		if (!_setOriginalSpMailType) {
			_setOriginalSpMailType = true;

			_originalSpMailType = _spMailType;
		}

		_spMailType = spMailType;
	}

	public int getOriginalSpMailType() {
		return _originalSpMailType;
	}

	@Override
	public String getMessageId() {
		if (_messageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _messageId;
		}
	}

	@Override
	public void setMessageId(String messageId) {
		_columnBitmask |= MESSAGEID_COLUMN_BITMASK;

		if (_originalMessageId == null) {
			_originalMessageId = _messageId;
		}

		_messageId = messageId;
	}

	public String getOriginalMessageId() {
		return GetterUtil.getString(_originalMessageId);
	}

	@Override
	public boolean getOpened() {
		return _opened;
	}

	@Override
	public boolean isOpened() {
		return _opened;
	}

	@Override
	public void setOpened(boolean opened) {
		_columnBitmask |= OPENED_COLUMN_BITMASK;

		if (!_setOriginalOpened) {
			_setOriginalOpened = true;

			_originalOpened = _opened;
		}

		_opened = opened;
	}

	public boolean getOriginalOpened() {
		return _originalOpened;
	}

	@Override
	public String getCountryName() {
		if (_countryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _countryName;
		}
	}

	@Override
	public void setCountryName(String countryName) {
		_countryName = countryName;
	}

	@Override
	public String getCity() {
		if (_city == null) {
			return StringPool.BLANK;
		}
		else {
			return _city;
		}
	}

	@Override
	public void setCity(String city) {
		_city = city;
	}

	@Override
	public String getRegionName() {
		if (_regionName == null) {
			return StringPool.BLANK;
		}
		else {
			return _regionName;
		}
	}

	@Override
	public void setRegionName(String regionName) {
		_regionName = regionName;
	}

	@Override
	public int getAreaCode() {
		return _areaCode;
	}

	@Override
	public void setAreaCode(int areaCode) {
		_areaCode = areaCode;
	}

	@Override
	public String getLatitude() {
		if (_latitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _latitude;
		}
	}

	@Override
	public void setLatitude(String latitude) {
		_latitude = latitude;
	}

	@Override
	public String getLongitude() {
		if (_longitude == null) {
			return StringPool.BLANK;
		}
		else {
			return _longitude;
		}
	}

	@Override
	public void setLongitude(String longitude) {
		_longitude = longitude;
	}

	@Override
	public String getIpAddress() {
		if (_ipAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _ipAddress;
		}
	}

	@Override
	public void setIpAddress(String ipAddress) {
		_ipAddress = ipAddress;
	}

	@Override
	public boolean getWebVersion() {
		return _webVersion;
	}

	@Override
	public boolean isWebVersion() {
		return _webVersion;
	}

	@Override
	public void setWebVersion(boolean webVersion) {
		_webVersion = webVersion;
	}

	@Override
	public Date getOpenedDate() {
		return _openedDate;
	}

	@Override
	public void setOpenedDate(Date openedDate) {
		_openedDate = openedDate;
	}

	@Override
	public long getCreateBy() {
		return _createBy;
	}

	@Override
	public void setCreateBy(long createBy) {
		_createBy = createBy;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SPMailCampaignSubscribers.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPMailCampaignSubscribers toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPMailCampaignSubscribers)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPMailCampaignSubscribersImpl spMailCampaignSubscribersImpl = new SPMailCampaignSubscribersImpl();

		spMailCampaignSubscribersImpl.setSpMailCampaignSubscribersId(getSpMailCampaignSubscribersId());
		spMailCampaignSubscribersImpl.setSpMailCampaignId(getSpMailCampaignId());
		spMailCampaignSubscribersImpl.setUserId(getUserId());
		spMailCampaignSubscribersImpl.setParentSubscriberId(getParentSubscriberId());
		spMailCampaignSubscribersImpl.setEmailAddress(getEmailAddress());
		spMailCampaignSubscribersImpl.setFirstName(getFirstName());
		spMailCampaignSubscribersImpl.setLastName(getLastName());
		spMailCampaignSubscribersImpl.setSpMailType(getSpMailType());
		spMailCampaignSubscribersImpl.setMessageId(getMessageId());
		spMailCampaignSubscribersImpl.setOpened(getOpened());
		spMailCampaignSubscribersImpl.setCountryName(getCountryName());
		spMailCampaignSubscribersImpl.setCity(getCity());
		spMailCampaignSubscribersImpl.setRegionName(getRegionName());
		spMailCampaignSubscribersImpl.setAreaCode(getAreaCode());
		spMailCampaignSubscribersImpl.setLatitude(getLatitude());
		spMailCampaignSubscribersImpl.setLongitude(getLongitude());
		spMailCampaignSubscribersImpl.setIpAddress(getIpAddress());
		spMailCampaignSubscribersImpl.setWebVersion(getWebVersion());
		spMailCampaignSubscribersImpl.setOpenedDate(getOpenedDate());
		spMailCampaignSubscribersImpl.setCreateBy(getCreateBy());
		spMailCampaignSubscribersImpl.setCreateDate(getCreateDate());
		spMailCampaignSubscribersImpl.setModifiedBy(getModifiedBy());
		spMailCampaignSubscribersImpl.setModifiedDate(getModifiedDate());
		spMailCampaignSubscribersImpl.setStatus(getStatus());

		spMailCampaignSubscribersImpl.resetOriginalValues();

		return spMailCampaignSubscribersImpl;
	}

	@Override
	public int compareTo(SPMailCampaignSubscribers spMailCampaignSubscribers) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				spMailCampaignSubscribers.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPMailCampaignSubscribers)) {
			return false;
		}

		SPMailCampaignSubscribers spMailCampaignSubscribers = (SPMailCampaignSubscribers)obj;

		long primaryKey = spMailCampaignSubscribers.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPMailCampaignSubscribersModelImpl spMailCampaignSubscribersModelImpl = this;

		spMailCampaignSubscribersModelImpl._originalSpMailCampaignId = spMailCampaignSubscribersModelImpl._spMailCampaignId;

		spMailCampaignSubscribersModelImpl._setOriginalSpMailCampaignId = false;

		spMailCampaignSubscribersModelImpl._originalUserId = spMailCampaignSubscribersModelImpl._userId;

		spMailCampaignSubscribersModelImpl._setOriginalUserId = false;

		spMailCampaignSubscribersModelImpl._originalEmailAddress = spMailCampaignSubscribersModelImpl._emailAddress;

		spMailCampaignSubscribersModelImpl._originalFirstName = spMailCampaignSubscribersModelImpl._firstName;

		spMailCampaignSubscribersModelImpl._originalLastName = spMailCampaignSubscribersModelImpl._lastName;

		spMailCampaignSubscribersModelImpl._originalSpMailType = spMailCampaignSubscribersModelImpl._spMailType;

		spMailCampaignSubscribersModelImpl._setOriginalSpMailType = false;

		spMailCampaignSubscribersModelImpl._originalMessageId = spMailCampaignSubscribersModelImpl._messageId;

		spMailCampaignSubscribersModelImpl._originalOpened = spMailCampaignSubscribersModelImpl._opened;

		spMailCampaignSubscribersModelImpl._setOriginalOpened = false;

		spMailCampaignSubscribersModelImpl._originalStatus = spMailCampaignSubscribersModelImpl._status;

		spMailCampaignSubscribersModelImpl._setOriginalStatus = false;

		spMailCampaignSubscribersModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPMailCampaignSubscribers> toCacheModel() {
		SPMailCampaignSubscribersCacheModel spMailCampaignSubscribersCacheModel = new SPMailCampaignSubscribersCacheModel();

		spMailCampaignSubscribersCacheModel.spMailCampaignSubscribersId = getSpMailCampaignSubscribersId();

		spMailCampaignSubscribersCacheModel.spMailCampaignId = getSpMailCampaignId();

		spMailCampaignSubscribersCacheModel.userId = getUserId();

		spMailCampaignSubscribersCacheModel.parentSubscriberId = getParentSubscriberId();

		spMailCampaignSubscribersCacheModel.emailAddress = getEmailAddress();

		String emailAddress = spMailCampaignSubscribersCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			spMailCampaignSubscribersCacheModel.emailAddress = null;
		}

		spMailCampaignSubscribersCacheModel.firstName = getFirstName();

		String firstName = spMailCampaignSubscribersCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			spMailCampaignSubscribersCacheModel.firstName = null;
		}

		spMailCampaignSubscribersCacheModel.lastName = getLastName();

		String lastName = spMailCampaignSubscribersCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			spMailCampaignSubscribersCacheModel.lastName = null;
		}

		spMailCampaignSubscribersCacheModel.spMailType = getSpMailType();

		spMailCampaignSubscribersCacheModel.messageId = getMessageId();

		String messageId = spMailCampaignSubscribersCacheModel.messageId;

		if ((messageId != null) && (messageId.length() == 0)) {
			spMailCampaignSubscribersCacheModel.messageId = null;
		}

		spMailCampaignSubscribersCacheModel.opened = getOpened();

		spMailCampaignSubscribersCacheModel.countryName = getCountryName();

		String countryName = spMailCampaignSubscribersCacheModel.countryName;

		if ((countryName != null) && (countryName.length() == 0)) {
			spMailCampaignSubscribersCacheModel.countryName = null;
		}

		spMailCampaignSubscribersCacheModel.city = getCity();

		String city = spMailCampaignSubscribersCacheModel.city;

		if ((city != null) && (city.length() == 0)) {
			spMailCampaignSubscribersCacheModel.city = null;
		}

		spMailCampaignSubscribersCacheModel.regionName = getRegionName();

		String regionName = spMailCampaignSubscribersCacheModel.regionName;

		if ((regionName != null) && (regionName.length() == 0)) {
			spMailCampaignSubscribersCacheModel.regionName = null;
		}

		spMailCampaignSubscribersCacheModel.areaCode = getAreaCode();

		spMailCampaignSubscribersCacheModel.latitude = getLatitude();

		String latitude = spMailCampaignSubscribersCacheModel.latitude;

		if ((latitude != null) && (latitude.length() == 0)) {
			spMailCampaignSubscribersCacheModel.latitude = null;
		}

		spMailCampaignSubscribersCacheModel.longitude = getLongitude();

		String longitude = spMailCampaignSubscribersCacheModel.longitude;

		if ((longitude != null) && (longitude.length() == 0)) {
			spMailCampaignSubscribersCacheModel.longitude = null;
		}

		spMailCampaignSubscribersCacheModel.ipAddress = getIpAddress();

		String ipAddress = spMailCampaignSubscribersCacheModel.ipAddress;

		if ((ipAddress != null) && (ipAddress.length() == 0)) {
			spMailCampaignSubscribersCacheModel.ipAddress = null;
		}

		spMailCampaignSubscribersCacheModel.webVersion = getWebVersion();

		Date openedDate = getOpenedDate();

		if (openedDate != null) {
			spMailCampaignSubscribersCacheModel.openedDate = openedDate.getTime();
		}
		else {
			spMailCampaignSubscribersCacheModel.openedDate = Long.MIN_VALUE;
		}

		spMailCampaignSubscribersCacheModel.createBy = getCreateBy();

		Date createDate = getCreateDate();

		if (createDate != null) {
			spMailCampaignSubscribersCacheModel.createDate = createDate.getTime();
		}
		else {
			spMailCampaignSubscribersCacheModel.createDate = Long.MIN_VALUE;
		}

		spMailCampaignSubscribersCacheModel.modifiedBy = getModifiedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spMailCampaignSubscribersCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spMailCampaignSubscribersCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spMailCampaignSubscribersCacheModel.status = getStatus();

		return spMailCampaignSubscribersCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(49);

		sb.append("{spMailCampaignSubscribersId=");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append(", spMailCampaignId=");
		sb.append(getSpMailCampaignId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", parentSubscriberId=");
		sb.append(getParentSubscriberId());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", spMailType=");
		sb.append(getSpMailType());
		sb.append(", messageId=");
		sb.append(getMessageId());
		sb.append(", opened=");
		sb.append(getOpened());
		sb.append(", countryName=");
		sb.append(getCountryName());
		sb.append(", city=");
		sb.append(getCity());
		sb.append(", regionName=");
		sb.append(getRegionName());
		sb.append(", areaCode=");
		sb.append(getAreaCode());
		sb.append(", latitude=");
		sb.append(getLatitude());
		sb.append(", longitude=");
		sb.append(getLongitude());
		sb.append(", ipAddress=");
		sb.append(getIpAddress());
		sb.append(", webVersion=");
		sb.append(getWebVersion());
		sb.append(", openedDate=");
		sb.append(getOpenedDate());
		sb.append(", createBy=");
		sb.append(getCreateBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(76);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.mail.model.SPMailCampaignSubscribers");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spMailCampaignSubscribersId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignSubscribersId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailCampaignId</column-name><column-value><![CDATA[");
		sb.append(getSpMailCampaignId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentSubscriberId</column-name><column-value><![CDATA[");
		sb.append(getParentSubscriberId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spMailType</column-name><column-value><![CDATA[");
		sb.append(getSpMailType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>messageId</column-name><column-value><![CDATA[");
		sb.append(getMessageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>opened</column-name><column-value><![CDATA[");
		sb.append(getOpened());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryName</column-name><column-value><![CDATA[");
		sb.append(getCountryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>city</column-name><column-value><![CDATA[");
		sb.append(getCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionName</column-name><column-value><![CDATA[");
		sb.append(getRegionName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>areaCode</column-name><column-value><![CDATA[");
		sb.append(getAreaCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>latitude</column-name><column-value><![CDATA[");
		sb.append(getLatitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longitude</column-name><column-value><![CDATA[");
		sb.append(getLongitude());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ipAddress</column-name><column-value><![CDATA[");
		sb.append(getIpAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>webVersion</column-name><column-value><![CDATA[");
		sb.append(getWebVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>openedDate</column-name><column-value><![CDATA[");
		sb.append(getOpenedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createBy</column-name><column-value><![CDATA[");
		sb.append(getCreateBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPMailCampaignSubscribers.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPMailCampaignSubscribers.class
		};
	private long _spMailCampaignSubscribersId;
	private long _spMailCampaignId;
	private long _originalSpMailCampaignId;
	private boolean _setOriginalSpMailCampaignId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _parentSubscriberId;
	private String _emailAddress;
	private String _originalEmailAddress;
	private String _firstName;
	private String _originalFirstName;
	private String _lastName;
	private String _originalLastName;
	private int _spMailType;
	private int _originalSpMailType;
	private boolean _setOriginalSpMailType;
	private String _messageId;
	private String _originalMessageId;
	private boolean _opened;
	private boolean _originalOpened;
	private boolean _setOriginalOpened;
	private String _countryName;
	private String _city;
	private String _regionName;
	private int _areaCode;
	private String _latitude;
	private String _longitude;
	private String _ipAddress;
	private boolean _webVersion;
	private Date _openedDate;
	private long _createBy;
	private Date _createDate;
	private long _modifiedBy;
	private Date _modifiedDate;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private SPMailCampaignSubscribers _escapedModel;
}
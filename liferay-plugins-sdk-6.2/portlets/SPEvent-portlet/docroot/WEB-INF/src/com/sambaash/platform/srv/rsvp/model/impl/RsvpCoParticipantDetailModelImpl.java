/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.rsvp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail;
import com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetailModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RsvpCoParticipantDetail service. Represents a row in the &quot;SPRsvpCoParticipantDetail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RsvpCoParticipantDetailImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see RsvpCoParticipantDetailImpl
 * @see com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail
 * @see com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetailModel
 * @generated
 */
public class RsvpCoParticipantDetailModelImpl extends BaseModelImpl<RsvpCoParticipantDetail>
	implements RsvpCoParticipantDetailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rsvp co participant detail model instance should use the {@link com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail} interface instead.
	 */
	public static final String TABLE_NAME = "SPRsvpCoParticipantDetail";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spRsvpCoParticipantDetailId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spRsvpDetailId", Types.BIGINT },
			{ "spRsvpPaymentId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "nric", Types.VARCHAR },
			{ "identificationType", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "rsvpStatus", Types.INTEGER },
			{ "attendance", Types.INTEGER },
			{ "attendanceBy", Types.BIGINT },
			{ "attendanceDate", Types.TIMESTAMP },
			{ "ticketNumber", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPRsvpCoParticipantDetail (uuid_ VARCHAR(75) null,spRsvpCoParticipantDetailId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spRsvpDetailId BIGINT(20),spRsvpPaymentId BIGINT(20),userId BIGINT(20),firstName VARCHAR(75) null,lastName VARCHAR(75) null,nric VARCHAR(75) null,identificationType VARCHAR(75) null,emailAddress VARCHAR(75) null,rsvpStatus INTEGER,attendance INTEGER,attendanceBy BIGINT(20),attendanceDate DATETIME null,ticketNumber VARCHAR(16) null)";
	public static final String TABLE_SQL_DROP = "drop table SPRsvpCoParticipantDetail";
	public static final String ORDER_BY_JPQL = " ORDER BY rsvpCoParticipantDetail.rsvpCoParticipantDetailId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPRsvpCoParticipantDetail.spRsvpCoParticipantDetailId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long RSVPDETAILID_COLUMN_BITMASK = 4L;
	public static long RSVPPAYMENTID_COLUMN_BITMASK = 8L;
	public static long TICKETNUMBER_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long RSVPCOPARTICIPANTDETAILID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail"));

	public RsvpCoParticipantDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _rsvpCoParticipantDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRsvpCoParticipantDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rsvpCoParticipantDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RsvpCoParticipantDetail.class;
	}

	@Override
	public String getModelClassName() {
		return RsvpCoParticipantDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("rsvpCoParticipantDetailId",
			getRsvpCoParticipantDetailId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("rsvpDetailId", getRsvpDetailId());
		attributes.put("rsvpPaymentId", getRsvpPaymentId());
		attributes.put("userId", getUserId());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("nric", getNric());
		attributes.put("identificationType", getIdentificationType());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("rsvpStatus", getRsvpStatus());
		attributes.put("attendance", getAttendance());
		attributes.put("attendanceBy", getAttendanceBy());
		attributes.put("attendanceDate", getAttendanceDate());
		attributes.put("ticketNumber", getTicketNumber());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long rsvpCoParticipantDetailId = (Long)attributes.get(
				"rsvpCoParticipantDetailId");

		if (rsvpCoParticipantDetailId != null) {
			setRsvpCoParticipantDetailId(rsvpCoParticipantDetailId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long rsvpDetailId = (Long)attributes.get("rsvpDetailId");

		if (rsvpDetailId != null) {
			setRsvpDetailId(rsvpDetailId);
		}

		Long rsvpPaymentId = (Long)attributes.get("rsvpPaymentId");

		if (rsvpPaymentId != null) {
			setRsvpPaymentId(rsvpPaymentId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String nric = (String)attributes.get("nric");

		if (nric != null) {
			setNric(nric);
		}

		String identificationType = (String)attributes.get("identificationType");

		if (identificationType != null) {
			setIdentificationType(identificationType);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		Integer rsvpStatus = (Integer)attributes.get("rsvpStatus");

		if (rsvpStatus != null) {
			setRsvpStatus(rsvpStatus);
		}

		Integer attendance = (Integer)attributes.get("attendance");

		if (attendance != null) {
			setAttendance(attendance);
		}

		Long attendanceBy = (Long)attributes.get("attendanceBy");

		if (attendanceBy != null) {
			setAttendanceBy(attendanceBy);
		}

		Date attendanceDate = (Date)attributes.get("attendanceDate");

		if (attendanceDate != null) {
			setAttendanceDate(attendanceDate);
		}

		String ticketNumber = (String)attributes.get("ticketNumber");

		if (ticketNumber != null) {
			setTicketNumber(ticketNumber);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getRsvpCoParticipantDetailId() {
		return _rsvpCoParticipantDetailId;
	}

	@Override
	public void setRsvpCoParticipantDetailId(long rsvpCoParticipantDetailId) {
		_rsvpCoParticipantDetailId = rsvpCoParticipantDetailId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getRsvpDetailId() {
		return _rsvpDetailId;
	}

	@Override
	public void setRsvpDetailId(long rsvpDetailId) {
		_columnBitmask |= RSVPDETAILID_COLUMN_BITMASK;

		if (!_setOriginalRsvpDetailId) {
			_setOriginalRsvpDetailId = true;

			_originalRsvpDetailId = _rsvpDetailId;
		}

		_rsvpDetailId = rsvpDetailId;
	}

	public long getOriginalRsvpDetailId() {
		return _originalRsvpDetailId;
	}

	@Override
	public long getRsvpPaymentId() {
		return _rsvpPaymentId;
	}

	@Override
	public void setRsvpPaymentId(long rsvpPaymentId) {
		_columnBitmask |= RSVPPAYMENTID_COLUMN_BITMASK;

		if (!_setOriginalRsvpPaymentId) {
			_setOriginalRsvpPaymentId = true;

			_originalRsvpPaymentId = _rsvpPaymentId;
		}

		_rsvpPaymentId = rsvpPaymentId;
	}

	public long getOriginalRsvpPaymentId() {
		return _originalRsvpPaymentId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public String getNric() {
		if (_nric == null) {
			return StringPool.BLANK;
		}
		else {
			return _nric;
		}
	}

	@Override
	public void setNric(String nric) {
		_nric = nric;
	}

	@Override
	public String getIdentificationType() {
		if (_identificationType == null) {
			return StringPool.BLANK;
		}
		else {
			return _identificationType;
		}
	}

	@Override
	public void setIdentificationType(String identificationType) {
		_identificationType = identificationType;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public int getRsvpStatus() {
		return _rsvpStatus;
	}

	@Override
	public void setRsvpStatus(int rsvpStatus) {
		_rsvpStatus = rsvpStatus;
	}

	@Override
	public int getAttendance() {
		return _attendance;
	}

	@Override
	public void setAttendance(int attendance) {
		_attendance = attendance;
	}

	@Override
	public long getAttendanceBy() {
		return _attendanceBy;
	}

	@Override
	public void setAttendanceBy(long attendanceBy) {
		_attendanceBy = attendanceBy;
	}

	@Override
	public Date getAttendanceDate() {
		return _attendanceDate;
	}

	@Override
	public void setAttendanceDate(Date attendanceDate) {
		_attendanceDate = attendanceDate;
	}

	@Override
	public String getTicketNumber() {
		if (_ticketNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _ticketNumber;
		}
	}

	@Override
	public void setTicketNumber(String ticketNumber) {
		_columnBitmask |= TICKETNUMBER_COLUMN_BITMASK;

		if (_originalTicketNumber == null) {
			_originalTicketNumber = _ticketNumber;
		}

		_ticketNumber = ticketNumber;
	}

	public String getOriginalTicketNumber() {
		return GetterUtil.getString(_originalTicketNumber);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				RsvpCoParticipantDetail.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			RsvpCoParticipantDetail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public RsvpCoParticipantDetail toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RsvpCoParticipantDetail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RsvpCoParticipantDetailImpl rsvpCoParticipantDetailImpl = new RsvpCoParticipantDetailImpl();

		rsvpCoParticipantDetailImpl.setUuid(getUuid());
		rsvpCoParticipantDetailImpl.setRsvpCoParticipantDetailId(getRsvpCoParticipantDetailId());
		rsvpCoParticipantDetailImpl.setGroupId(getGroupId());
		rsvpCoParticipantDetailImpl.setCompanyId(getCompanyId());
		rsvpCoParticipantDetailImpl.setUserName(getUserName());
		rsvpCoParticipantDetailImpl.setCreateDate(getCreateDate());
		rsvpCoParticipantDetailImpl.setModifiedDate(getModifiedDate());
		rsvpCoParticipantDetailImpl.setRsvpDetailId(getRsvpDetailId());
		rsvpCoParticipantDetailImpl.setRsvpPaymentId(getRsvpPaymentId());
		rsvpCoParticipantDetailImpl.setUserId(getUserId());
		rsvpCoParticipantDetailImpl.setFirstName(getFirstName());
		rsvpCoParticipantDetailImpl.setLastName(getLastName());
		rsvpCoParticipantDetailImpl.setNric(getNric());
		rsvpCoParticipantDetailImpl.setIdentificationType(getIdentificationType());
		rsvpCoParticipantDetailImpl.setEmailAddress(getEmailAddress());
		rsvpCoParticipantDetailImpl.setRsvpStatus(getRsvpStatus());
		rsvpCoParticipantDetailImpl.setAttendance(getAttendance());
		rsvpCoParticipantDetailImpl.setAttendanceBy(getAttendanceBy());
		rsvpCoParticipantDetailImpl.setAttendanceDate(getAttendanceDate());
		rsvpCoParticipantDetailImpl.setTicketNumber(getTicketNumber());

		rsvpCoParticipantDetailImpl.resetOriginalValues();

		return rsvpCoParticipantDetailImpl;
	}

	@Override
	public int compareTo(RsvpCoParticipantDetail rsvpCoParticipantDetail) {
		long primaryKey = rsvpCoParticipantDetail.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RsvpCoParticipantDetail)) {
			return false;
		}

		RsvpCoParticipantDetail rsvpCoParticipantDetail = (RsvpCoParticipantDetail)obj;

		long primaryKey = rsvpCoParticipantDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		RsvpCoParticipantDetailModelImpl rsvpCoParticipantDetailModelImpl = this;

		rsvpCoParticipantDetailModelImpl._originalUuid = rsvpCoParticipantDetailModelImpl._uuid;

		rsvpCoParticipantDetailModelImpl._originalGroupId = rsvpCoParticipantDetailModelImpl._groupId;

		rsvpCoParticipantDetailModelImpl._setOriginalGroupId = false;

		rsvpCoParticipantDetailModelImpl._originalCompanyId = rsvpCoParticipantDetailModelImpl._companyId;

		rsvpCoParticipantDetailModelImpl._setOriginalCompanyId = false;

		rsvpCoParticipantDetailModelImpl._originalRsvpDetailId = rsvpCoParticipantDetailModelImpl._rsvpDetailId;

		rsvpCoParticipantDetailModelImpl._setOriginalRsvpDetailId = false;

		rsvpCoParticipantDetailModelImpl._originalRsvpPaymentId = rsvpCoParticipantDetailModelImpl._rsvpPaymentId;

		rsvpCoParticipantDetailModelImpl._setOriginalRsvpPaymentId = false;

		rsvpCoParticipantDetailModelImpl._originalTicketNumber = rsvpCoParticipantDetailModelImpl._ticketNumber;

		rsvpCoParticipantDetailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<RsvpCoParticipantDetail> toCacheModel() {
		RsvpCoParticipantDetailCacheModel rsvpCoParticipantDetailCacheModel = new RsvpCoParticipantDetailCacheModel();

		rsvpCoParticipantDetailCacheModel.uuid = getUuid();

		String uuid = rsvpCoParticipantDetailCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.uuid = null;
		}

		rsvpCoParticipantDetailCacheModel.rsvpCoParticipantDetailId = getRsvpCoParticipantDetailId();

		rsvpCoParticipantDetailCacheModel.groupId = getGroupId();

		rsvpCoParticipantDetailCacheModel.companyId = getCompanyId();

		rsvpCoParticipantDetailCacheModel.userName = getUserName();

		String userName = rsvpCoParticipantDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			rsvpCoParticipantDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			rsvpCoParticipantDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			rsvpCoParticipantDetailCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			rsvpCoParticipantDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		rsvpCoParticipantDetailCacheModel.rsvpDetailId = getRsvpDetailId();

		rsvpCoParticipantDetailCacheModel.rsvpPaymentId = getRsvpPaymentId();

		rsvpCoParticipantDetailCacheModel.userId = getUserId();

		rsvpCoParticipantDetailCacheModel.firstName = getFirstName();

		String firstName = rsvpCoParticipantDetailCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.firstName = null;
		}

		rsvpCoParticipantDetailCacheModel.lastName = getLastName();

		String lastName = rsvpCoParticipantDetailCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.lastName = null;
		}

		rsvpCoParticipantDetailCacheModel.nric = getNric();

		String nric = rsvpCoParticipantDetailCacheModel.nric;

		if ((nric != null) && (nric.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.nric = null;
		}

		rsvpCoParticipantDetailCacheModel.identificationType = getIdentificationType();

		String identificationType = rsvpCoParticipantDetailCacheModel.identificationType;

		if ((identificationType != null) && (identificationType.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.identificationType = null;
		}

		rsvpCoParticipantDetailCacheModel.emailAddress = getEmailAddress();

		String emailAddress = rsvpCoParticipantDetailCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.emailAddress = null;
		}

		rsvpCoParticipantDetailCacheModel.rsvpStatus = getRsvpStatus();

		rsvpCoParticipantDetailCacheModel.attendance = getAttendance();

		rsvpCoParticipantDetailCacheModel.attendanceBy = getAttendanceBy();

		Date attendanceDate = getAttendanceDate();

		if (attendanceDate != null) {
			rsvpCoParticipantDetailCacheModel.attendanceDate = attendanceDate.getTime();
		}
		else {
			rsvpCoParticipantDetailCacheModel.attendanceDate = Long.MIN_VALUE;
		}

		rsvpCoParticipantDetailCacheModel.ticketNumber = getTicketNumber();

		String ticketNumber = rsvpCoParticipantDetailCacheModel.ticketNumber;

		if ((ticketNumber != null) && (ticketNumber.length() == 0)) {
			rsvpCoParticipantDetailCacheModel.ticketNumber = null;
		}

		return rsvpCoParticipantDetailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", rsvpCoParticipantDetailId=");
		sb.append(getRsvpCoParticipantDetailId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", rsvpDetailId=");
		sb.append(getRsvpDetailId());
		sb.append(", rsvpPaymentId=");
		sb.append(getRsvpPaymentId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", nric=");
		sb.append(getNric());
		sb.append(", identificationType=");
		sb.append(getIdentificationType());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", rsvpStatus=");
		sb.append(getRsvpStatus());
		sb.append(", attendance=");
		sb.append(getAttendance());
		sb.append(", attendanceBy=");
		sb.append(getAttendanceBy());
		sb.append(", attendanceDate=");
		sb.append(getAttendanceDate());
		sb.append(", ticketNumber=");
		sb.append(getTicketNumber());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpCoParticipantDetailId</column-name><column-value><![CDATA[");
		sb.append(getRsvpCoParticipantDetailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpDetailId</column-name><column-value><![CDATA[");
		sb.append(getRsvpDetailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpPaymentId</column-name><column-value><![CDATA[");
		sb.append(getRsvpPaymentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nric</column-name><column-value><![CDATA[");
		sb.append(getNric());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identificationType</column-name><column-value><![CDATA[");
		sb.append(getIdentificationType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsvpStatus</column-name><column-value><![CDATA[");
		sb.append(getRsvpStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendance</column-name><column-value><![CDATA[");
		sb.append(getAttendance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendanceBy</column-name><column-value><![CDATA[");
		sb.append(getAttendanceBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attendanceDate</column-name><column-value><![CDATA[");
		sb.append(getAttendanceDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ticketNumber</column-name><column-value><![CDATA[");
		sb.append(getTicketNumber());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = RsvpCoParticipantDetail.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			RsvpCoParticipantDetail.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _rsvpCoParticipantDetailId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _rsvpDetailId;
	private long _originalRsvpDetailId;
	private boolean _setOriginalRsvpDetailId;
	private long _rsvpPaymentId;
	private long _originalRsvpPaymentId;
	private boolean _setOriginalRsvpPaymentId;
	private long _userId;
	private String _userUuid;
	private String _firstName;
	private String _lastName;
	private String _nric;
	private String _identificationType;
	private String _emailAddress;
	private int _rsvpStatus;
	private int _attendance;
	private long _attendanceBy;
	private Date _attendanceDate;
	private String _ticketNumber;
	private String _originalTicketNumber;
	private long _columnBitmask;
	private RsvpCoParticipantDetail _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spsocialprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail;
import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetailModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SocialProfileDetail service. Represents a row in the &quot;SPSocialProfileDetail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialProfileDetailImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SocialProfileDetailImpl
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetailModel
 * @generated
 */
public class SocialProfileDetailModelImpl extends BaseModelImpl<SocialProfileDetail>
	implements SocialProfileDetailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a social profile detail model instance should use the {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail} interface instead.
	 */
	public static final String TABLE_NAME = "SPSocialProfileDetail";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spSocialProfileDetailId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "userJobId", Types.VARCHAR },
			{ "companyName", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSocialProfileDetail (uuid_ VARCHAR(75) null,spSocialProfileDetailId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,userJobId VARCHAR(75) null,companyName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPSocialProfileDetail";
	public static final String ORDER_BY_JPQL = " ORDER BY socialProfileDetail.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSocialProfileDetail.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long COMPANYNAME_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static long USERJOBID_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long CREATEDATE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail"));

	public SocialProfileDetailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _socialProfileDetailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSocialProfileDetailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _socialProfileDetailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SocialProfileDetail.class;
	}

	@Override
	public String getModelClassName() {
		return SocialProfileDetail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("socialProfileDetailId", getSocialProfileDetailId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("userJobId", getUserJobId());
		attributes.put("companyName", getCompanyName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long socialProfileDetailId = (Long)attributes.get(
				"socialProfileDetailId");

		if (socialProfileDetailId != null) {
			setSocialProfileDetailId(socialProfileDetailId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String userJobId = (String)attributes.get("userJobId");

		if (userJobId != null) {
			setUserJobId(userJobId);
		}

		String companyName = (String)attributes.get("companyName");

		if (companyName != null) {
			setCompanyName(companyName);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSocialProfileDetailId() {
		return _socialProfileDetailId;
	}

	@Override
	public void setSocialProfileDetailId(long socialProfileDetailId) {
		_socialProfileDetailId = socialProfileDetailId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getUserJobId() {
		if (_userJobId == null) {
			return StringPool.BLANK;
		}
		else {
			return _userJobId;
		}
	}

	@Override
	public void setUserJobId(String userJobId) {
		_columnBitmask |= USERJOBID_COLUMN_BITMASK;

		if (_originalUserJobId == null) {
			_originalUserJobId = _userJobId;
		}

		_userJobId = userJobId;
	}

	public String getOriginalUserJobId() {
		return GetterUtil.getString(_originalUserJobId);
	}

	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		_columnBitmask |= COMPANYNAME_COLUMN_BITMASK;

		if (_originalCompanyName == null) {
			_originalCompanyName = _companyName;
		}

		_companyName = companyName;
	}

	public String getOriginalCompanyName() {
		return GetterUtil.getString(_originalCompanyName);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SocialProfileDetail.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SocialProfileDetail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SocialProfileDetail toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SocialProfileDetail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SocialProfileDetailImpl socialProfileDetailImpl = new SocialProfileDetailImpl();

		socialProfileDetailImpl.setUuid(getUuid());
		socialProfileDetailImpl.setSocialProfileDetailId(getSocialProfileDetailId());
		socialProfileDetailImpl.setGroupId(getGroupId());
		socialProfileDetailImpl.setCompanyId(getCompanyId());
		socialProfileDetailImpl.setUserId(getUserId());
		socialProfileDetailImpl.setUserName(getUserName());
		socialProfileDetailImpl.setCreateDate(getCreateDate());
		socialProfileDetailImpl.setModifiedDate(getModifiedDate());
		socialProfileDetailImpl.setUserJobId(getUserJobId());
		socialProfileDetailImpl.setCompanyName(getCompanyName());

		socialProfileDetailImpl.resetOriginalValues();

		return socialProfileDetailImpl;
	}

	@Override
	public int compareTo(SocialProfileDetail socialProfileDetail) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				socialProfileDetail.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SocialProfileDetail)) {
			return false;
		}

		SocialProfileDetail socialProfileDetail = (SocialProfileDetail)obj;

		long primaryKey = socialProfileDetail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SocialProfileDetailModelImpl socialProfileDetailModelImpl = this;

		socialProfileDetailModelImpl._originalUuid = socialProfileDetailModelImpl._uuid;

		socialProfileDetailModelImpl._originalGroupId = socialProfileDetailModelImpl._groupId;

		socialProfileDetailModelImpl._setOriginalGroupId = false;

		socialProfileDetailModelImpl._originalCompanyId = socialProfileDetailModelImpl._companyId;

		socialProfileDetailModelImpl._setOriginalCompanyId = false;

		socialProfileDetailModelImpl._originalUserId = socialProfileDetailModelImpl._userId;

		socialProfileDetailModelImpl._setOriginalUserId = false;

		socialProfileDetailModelImpl._originalUserJobId = socialProfileDetailModelImpl._userJobId;

		socialProfileDetailModelImpl._originalCompanyName = socialProfileDetailModelImpl._companyName;

		socialProfileDetailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SocialProfileDetail> toCacheModel() {
		SocialProfileDetailCacheModel socialProfileDetailCacheModel = new SocialProfileDetailCacheModel();

		socialProfileDetailCacheModel.uuid = getUuid();

		String uuid = socialProfileDetailCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			socialProfileDetailCacheModel.uuid = null;
		}

		socialProfileDetailCacheModel.socialProfileDetailId = getSocialProfileDetailId();

		socialProfileDetailCacheModel.groupId = getGroupId();

		socialProfileDetailCacheModel.companyId = getCompanyId();

		socialProfileDetailCacheModel.userId = getUserId();

		socialProfileDetailCacheModel.userName = getUserName();

		String userName = socialProfileDetailCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			socialProfileDetailCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			socialProfileDetailCacheModel.createDate = createDate.getTime();
		}
		else {
			socialProfileDetailCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			socialProfileDetailCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			socialProfileDetailCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		socialProfileDetailCacheModel.userJobId = getUserJobId();

		String userJobId = socialProfileDetailCacheModel.userJobId;

		if ((userJobId != null) && (userJobId.length() == 0)) {
			socialProfileDetailCacheModel.userJobId = null;
		}

		socialProfileDetailCacheModel.companyName = getCompanyName();

		String companyName = socialProfileDetailCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			socialProfileDetailCacheModel.companyName = null;
		}

		return socialProfileDetailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", socialProfileDetailId=");
		sb.append(getSocialProfileDetailId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", userJobId=");
		sb.append(getUserJobId());
		sb.append(", companyName=");
		sb.append(getCompanyName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spsocialprofile.model.SocialProfileDetail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialProfileDetailId</column-name><column-value><![CDATA[");
		sb.append(getSocialProfileDetailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userJobId</column-name><column-value><![CDATA[");
		sb.append(getUserJobId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyName</column-name><column-value><![CDATA[");
		sb.append(getCompanyName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SocialProfileDetail.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SocialProfileDetail.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _socialProfileDetailId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _userJobId;
	private String _originalUserJobId;
	private String _companyName;
	private String _originalCompanyName;
	private long _columnBitmask;
	private SocialProfileDetail _escapedModel;
}
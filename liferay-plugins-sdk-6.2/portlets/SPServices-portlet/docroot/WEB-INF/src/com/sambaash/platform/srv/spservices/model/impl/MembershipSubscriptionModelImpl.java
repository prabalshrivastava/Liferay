/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.MembershipSubscription;
import com.sambaash.platform.srv.spservices.model.MembershipSubscriptionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MembershipSubscription service. Represents a row in the &quot;SPMembershipSubscription&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.MembershipSubscriptionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MembershipSubscriptionImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see MembershipSubscriptionImpl
 * @see com.sambaash.platform.srv.spservices.model.MembershipSubscription
 * @see com.sambaash.platform.srv.spservices.model.MembershipSubscriptionModel
 * @generated
 */
public class MembershipSubscriptionModelImpl extends BaseModelImpl<MembershipSubscription>
	implements MembershipSubscriptionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a membership subscription model instance should use the {@link com.sambaash.platform.srv.spservices.model.MembershipSubscription} interface instead.
	 */
	public static final String TABLE_NAME = "SPMembershipSubscription";
	public static final Object[][] TABLE_COLUMNS = {
			{ "msId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "mporder_1", Types.VARCHAR },
			{ "mpId_1", Types.VARCHAR },
			{ "mpName_1", Types.VARCHAR },
			{ "mpQty_1", Types.INTEGER },
			{ "mpPrice_1", Types.FLOAT },
			{ "mpPriceCurrency_1", Types.VARCHAR },
			{ "mporder_2", Types.VARCHAR },
			{ "mpId_2", Types.VARCHAR },
			{ "mpName_2", Types.VARCHAR },
			{ "mpQty_2", Types.INTEGER },
			{ "mpPrice_2", Types.FLOAT },
			{ "mpPriceCurrency_2", Types.VARCHAR },
			{ "mporder_3", Types.VARCHAR },
			{ "mpId_3", Types.VARCHAR },
			{ "mpName_3", Types.VARCHAR },
			{ "mpQty_3", Types.INTEGER },
			{ "mpPrice_3", Types.FLOAT },
			{ "mpPriceCurrency_3", Types.VARCHAR },
			{ "mporder_4", Types.VARCHAR },
			{ "mpId_4", Types.VARCHAR },
			{ "mpName_4", Types.VARCHAR },
			{ "mpQty_4", Types.INTEGER },
			{ "mpPrice_4", Types.FLOAT },
			{ "mpPriceCurrency_4", Types.VARCHAR },
			{ "mpSubtotal", Types.FLOAT },
			{ "mpSubtotalCurrency", Types.VARCHAR },
			{ "addOnSubtotal", Types.FLOAT },
			{ "addOnSubtotalCurrency", Types.VARCHAR },
			{ "tax", Types.FLOAT },
			{ "comments", Types.VARCHAR },
			{ "promotionCode", Types.VARCHAR },
			{ "promotionFrom", Types.TIMESTAMP },
			{ "promotionTo", Types.TIMESTAMP },
			{ "discount", Types.VARCHAR },
			{ "nettotal", Types.FLOAT },
			{ "nettotalCurrency", Types.VARCHAR },
			{ "ppTxnId", Types.VARCHAR },
			{ "ppPaymentStatus", Types.VARCHAR },
			{ "ppPaymentGross", Types.FLOAT },
			{ "ppReceiverEmail", Types.VARCHAR },
			{ "ppPayerEmail", Types.VARCHAR },
			{ "sendOrderEmail", Types.VARCHAR },
			{ "sendShippingEmail", Types.VARCHAR },
			{ "effectiveFromDate", Types.TIMESTAMP },
			{ "effectiveToDate", Types.TIMESTAMP },
			{ "altShipping", Types.INTEGER },
			{ "shipping", Types.DOUBLE },
			{ "requiresShipping", Types.BOOLEAN },
			{ "insure", Types.BOOLEAN },
			{ "insurance", Types.DOUBLE },
			{ "billingFirstName", Types.VARCHAR },
			{ "billingLastName", Types.VARCHAR },
			{ "billingEmailAddress", Types.VARCHAR },
			{ "billingCompany", Types.VARCHAR },
			{ "billingStreet", Types.VARCHAR },
			{ "billingCity", Types.VARCHAR },
			{ "billingState", Types.VARCHAR },
			{ "billingZip", Types.VARCHAR },
			{ "billingCountry", Types.VARCHAR },
			{ "billingPhone", Types.VARCHAR },
			{ "shipToBilling", Types.BOOLEAN },
			{ "shippingFirstName", Types.VARCHAR },
			{ "shippingLastName", Types.VARCHAR },
			{ "shippingEmailAddress", Types.VARCHAR },
			{ "shippingCompany", Types.VARCHAR },
			{ "shippingStreet", Types.VARCHAR },
			{ "shippingCity", Types.VARCHAR },
			{ "shippingState", Types.VARCHAR },
			{ "shippingZip", Types.VARCHAR },
			{ "shippingCountry", Types.VARCHAR },
			{ "shippingPhone", Types.VARCHAR },
			{ "ccName", Types.VARCHAR },
			{ "ccType", Types.VARCHAR },
			{ "ccNumber", Types.VARCHAR },
			{ "ccExpMonth", Types.INTEGER },
			{ "ccExpYear", Types.INTEGER },
			{ "ccVerNumber", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMembershipSubscription (msId BIGINT(20) not null primary key,name VARCHAR(75) null,description VARCHAR(75) null,mporder_1 VARCHAR(75) null,mpId_1 VARCHAR(75) null,mpName_1 VARCHAR(75) null,mpQty_1 INTEGER,mpPrice_1 DOUBLE,mpPriceCurrency_1 VARCHAR(75) null,mporder_2 VARCHAR(75) null,mpId_2 VARCHAR(75) null,mpName_2 VARCHAR(75) null,mpQty_2 INTEGER,mpPrice_2 DOUBLE,mpPriceCurrency_2 VARCHAR(75) null,mporder_3 VARCHAR(75) null,mpId_3 VARCHAR(75) null,mpName_3 VARCHAR(75) null,mpQty_3 INTEGER,mpPrice_3 DOUBLE,mpPriceCurrency_3 VARCHAR(75) null,mporder_4 VARCHAR(75) null,mpId_4 VARCHAR(75) null,mpName_4 VARCHAR(75) null,mpQty_4 INTEGER,mpPrice_4 DOUBLE,mpPriceCurrency_4 VARCHAR(75) null,mpSubtotal DOUBLE,mpSubtotalCurrency VARCHAR(75) null,addOnSubtotal DOUBLE,addOnSubtotalCurrency VARCHAR(75) null,tax DOUBLE,comments VARCHAR(75) null,promotionCode VARCHAR(75) null,promotionFrom DATETIME null,promotionTo DATETIME null,discount VARCHAR(75) null,nettotal DOUBLE,nettotalCurrency VARCHAR(75) null,ppTxnId VARCHAR(75) null,ppPaymentStatus VARCHAR(75) null,ppPaymentGross DOUBLE,ppReceiverEmail VARCHAR(75) null,ppPayerEmail VARCHAR(75) null,sendOrderEmail VARCHAR(75) null,sendShippingEmail VARCHAR(75) null,effectiveFromDate DATETIME null,effectiveToDate DATETIME null,altShipping INTEGER,shipping DOUBLE,requiresShipping BOOLEAN,insure BOOLEAN,insurance DOUBLE,billingFirstName VARCHAR(75) null,billingLastName VARCHAR(75) null,billingEmailAddress VARCHAR(75) null,billingCompany VARCHAR(75) null,billingStreet VARCHAR(75) null,billingCity VARCHAR(75) null,billingState VARCHAR(75) null,billingZip VARCHAR(75) null,billingCountry VARCHAR(75) null,billingPhone VARCHAR(75) null,shipToBilling BOOLEAN,shippingFirstName VARCHAR(75) null,shippingLastName VARCHAR(75) null,shippingEmailAddress VARCHAR(75) null,shippingCompany VARCHAR(75) null,shippingStreet VARCHAR(75) null,shippingCity VARCHAR(75) null,shippingState VARCHAR(75) null,shippingZip VARCHAR(75) null,shippingCountry VARCHAR(75) null,shippingPhone VARCHAR(75) null,ccName VARCHAR(75) null,ccType VARCHAR(75) null,ccNumber VARCHAR(75) null,ccExpMonth INTEGER,ccExpYear INTEGER,ccVerNumber VARCHAR(75) null,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPMembershipSubscription";
	public static final String ORDER_BY_JPQL = " ORDER BY membershipSubscription.msId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMembershipSubscription.msId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipSubscription"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipSubscription"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.MembershipSubscription"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long MPID_1_COLUMN_BITMASK = 2L;
	public static long NAME_COLUMN_BITMASK = 4L;
	public static long NETTOTAL_COLUMN_BITMASK = 8L;
	public static long PPPAYMENTSTATUS_COLUMN_BITMASK = 16L;
	public static long SHIPPINGEMAILADDRESS_COLUMN_BITMASK = 32L;
	public static long USERID_COLUMN_BITMASK = 64L;
	public static long USERNAME_COLUMN_BITMASK = 128L;
	public static long MSID_COLUMN_BITMASK = 256L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.MembershipSubscription"));

	public MembershipSubscriptionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _msId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _msId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MembershipSubscription.class;
	}

	@Override
	public String getModelClassName() {
		return MembershipSubscription.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("msId", getMsId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("mporder_1", getMporder_1());
		attributes.put("mpId_1", getMpId_1());
		attributes.put("mpName_1", getMpName_1());
		attributes.put("mpQty_1", getMpQty_1());
		attributes.put("mpPrice_1", getMpPrice_1());
		attributes.put("mpPriceCurrency_1", getMpPriceCurrency_1());
		attributes.put("mporder_2", getMporder_2());
		attributes.put("mpId_2", getMpId_2());
		attributes.put("mpName_2", getMpName_2());
		attributes.put("mpQty_2", getMpQty_2());
		attributes.put("mpPrice_2", getMpPrice_2());
		attributes.put("mpPriceCurrency_2", getMpPriceCurrency_2());
		attributes.put("mporder_3", getMporder_3());
		attributes.put("mpId_3", getMpId_3());
		attributes.put("mpName_3", getMpName_3());
		attributes.put("mpQty_3", getMpQty_3());
		attributes.put("mpPrice_3", getMpPrice_3());
		attributes.put("mpPriceCurrency_3", getMpPriceCurrency_3());
		attributes.put("mporder_4", getMporder_4());
		attributes.put("mpId_4", getMpId_4());
		attributes.put("mpName_4", getMpName_4());
		attributes.put("mpQty_4", getMpQty_4());
		attributes.put("mpPrice_4", getMpPrice_4());
		attributes.put("mpPriceCurrency_4", getMpPriceCurrency_4());
		attributes.put("mpSubtotal", getMpSubtotal());
		attributes.put("mpSubtotalCurrency", getMpSubtotalCurrency());
		attributes.put("addOnSubtotal", getAddOnSubtotal());
		attributes.put("addOnSubtotalCurrency", getAddOnSubtotalCurrency());
		attributes.put("tax", getTax());
		attributes.put("comments", getComments());
		attributes.put("promotionCode", getPromotionCode());
		attributes.put("promotionFrom", getPromotionFrom());
		attributes.put("promotionTo", getPromotionTo());
		attributes.put("discount", getDiscount());
		attributes.put("nettotal", getNettotal());
		attributes.put("nettotalCurrency", getNettotalCurrency());
		attributes.put("ppTxnId", getPpTxnId());
		attributes.put("ppPaymentStatus", getPpPaymentStatus());
		attributes.put("ppPaymentGross", getPpPaymentGross());
		attributes.put("ppReceiverEmail", getPpReceiverEmail());
		attributes.put("ppPayerEmail", getPpPayerEmail());
		attributes.put("sendOrderEmail", getSendOrderEmail());
		attributes.put("sendShippingEmail", getSendShippingEmail());
		attributes.put("effectiveFromDate", getEffectiveFromDate());
		attributes.put("effectiveToDate", getEffectiveToDate());
		attributes.put("altShipping", getAltShipping());
		attributes.put("shipping", getShipping());
		attributes.put("requiresShipping", getRequiresShipping());
		attributes.put("insure", getInsure());
		attributes.put("insurance", getInsurance());
		attributes.put("billingFirstName", getBillingFirstName());
		attributes.put("billingLastName", getBillingLastName());
		attributes.put("billingEmailAddress", getBillingEmailAddress());
		attributes.put("billingCompany", getBillingCompany());
		attributes.put("billingStreet", getBillingStreet());
		attributes.put("billingCity", getBillingCity());
		attributes.put("billingState", getBillingState());
		attributes.put("billingZip", getBillingZip());
		attributes.put("billingCountry", getBillingCountry());
		attributes.put("billingPhone", getBillingPhone());
		attributes.put("shipToBilling", getShipToBilling());
		attributes.put("shippingFirstName", getShippingFirstName());
		attributes.put("shippingLastName", getShippingLastName());
		attributes.put("shippingEmailAddress", getShippingEmailAddress());
		attributes.put("shippingCompany", getShippingCompany());
		attributes.put("shippingStreet", getShippingStreet());
		attributes.put("shippingCity", getShippingCity());
		attributes.put("shippingState", getShippingState());
		attributes.put("shippingZip", getShippingZip());
		attributes.put("shippingCountry", getShippingCountry());
		attributes.put("shippingPhone", getShippingPhone());
		attributes.put("ccName", getCcName());
		attributes.put("ccType", getCcType());
		attributes.put("ccNumber", getCcNumber());
		attributes.put("ccExpMonth", getCcExpMonth());
		attributes.put("ccExpYear", getCcExpYear());
		attributes.put("ccVerNumber", getCcVerNumber());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long msId = (Long)attributes.get("msId");

		if (msId != null) {
			setMsId(msId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String mporder_1 = (String)attributes.get("mporder_1");

		if (mporder_1 != null) {
			setMporder_1(mporder_1);
		}

		String mpId_1 = (String)attributes.get("mpId_1");

		if (mpId_1 != null) {
			setMpId_1(mpId_1);
		}

		String mpName_1 = (String)attributes.get("mpName_1");

		if (mpName_1 != null) {
			setMpName_1(mpName_1);
		}

		Integer mpQty_1 = (Integer)attributes.get("mpQty_1");

		if (mpQty_1 != null) {
			setMpQty_1(mpQty_1);
		}

		Float mpPrice_1 = (Float)attributes.get("mpPrice_1");

		if (mpPrice_1 != null) {
			setMpPrice_1(mpPrice_1);
		}

		String mpPriceCurrency_1 = (String)attributes.get("mpPriceCurrency_1");

		if (mpPriceCurrency_1 != null) {
			setMpPriceCurrency_1(mpPriceCurrency_1);
		}

		String mporder_2 = (String)attributes.get("mporder_2");

		if (mporder_2 != null) {
			setMporder_2(mporder_2);
		}

		String mpId_2 = (String)attributes.get("mpId_2");

		if (mpId_2 != null) {
			setMpId_2(mpId_2);
		}

		String mpName_2 = (String)attributes.get("mpName_2");

		if (mpName_2 != null) {
			setMpName_2(mpName_2);
		}

		Integer mpQty_2 = (Integer)attributes.get("mpQty_2");

		if (mpQty_2 != null) {
			setMpQty_2(mpQty_2);
		}

		Float mpPrice_2 = (Float)attributes.get("mpPrice_2");

		if (mpPrice_2 != null) {
			setMpPrice_2(mpPrice_2);
		}

		String mpPriceCurrency_2 = (String)attributes.get("mpPriceCurrency_2");

		if (mpPriceCurrency_2 != null) {
			setMpPriceCurrency_2(mpPriceCurrency_2);
		}

		String mporder_3 = (String)attributes.get("mporder_3");

		if (mporder_3 != null) {
			setMporder_3(mporder_3);
		}

		String mpId_3 = (String)attributes.get("mpId_3");

		if (mpId_3 != null) {
			setMpId_3(mpId_3);
		}

		String mpName_3 = (String)attributes.get("mpName_3");

		if (mpName_3 != null) {
			setMpName_3(mpName_3);
		}

		Integer mpQty_3 = (Integer)attributes.get("mpQty_3");

		if (mpQty_3 != null) {
			setMpQty_3(mpQty_3);
		}

		Float mpPrice_3 = (Float)attributes.get("mpPrice_3");

		if (mpPrice_3 != null) {
			setMpPrice_3(mpPrice_3);
		}

		String mpPriceCurrency_3 = (String)attributes.get("mpPriceCurrency_3");

		if (mpPriceCurrency_3 != null) {
			setMpPriceCurrency_3(mpPriceCurrency_3);
		}

		String mporder_4 = (String)attributes.get("mporder_4");

		if (mporder_4 != null) {
			setMporder_4(mporder_4);
		}

		String mpId_4 = (String)attributes.get("mpId_4");

		if (mpId_4 != null) {
			setMpId_4(mpId_4);
		}

		String mpName_4 = (String)attributes.get("mpName_4");

		if (mpName_4 != null) {
			setMpName_4(mpName_4);
		}

		Integer mpQty_4 = (Integer)attributes.get("mpQty_4");

		if (mpQty_4 != null) {
			setMpQty_4(mpQty_4);
		}

		Float mpPrice_4 = (Float)attributes.get("mpPrice_4");

		if (mpPrice_4 != null) {
			setMpPrice_4(mpPrice_4);
		}

		String mpPriceCurrency_4 = (String)attributes.get("mpPriceCurrency_4");

		if (mpPriceCurrency_4 != null) {
			setMpPriceCurrency_4(mpPriceCurrency_4);
		}

		Float mpSubtotal = (Float)attributes.get("mpSubtotal");

		if (mpSubtotal != null) {
			setMpSubtotal(mpSubtotal);
		}

		String mpSubtotalCurrency = (String)attributes.get("mpSubtotalCurrency");

		if (mpSubtotalCurrency != null) {
			setMpSubtotalCurrency(mpSubtotalCurrency);
		}

		Float addOnSubtotal = (Float)attributes.get("addOnSubtotal");

		if (addOnSubtotal != null) {
			setAddOnSubtotal(addOnSubtotal);
		}

		String addOnSubtotalCurrency = (String)attributes.get(
				"addOnSubtotalCurrency");

		if (addOnSubtotalCurrency != null) {
			setAddOnSubtotalCurrency(addOnSubtotalCurrency);
		}

		Float tax = (Float)attributes.get("tax");

		if (tax != null) {
			setTax(tax);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		String promotionCode = (String)attributes.get("promotionCode");

		if (promotionCode != null) {
			setPromotionCode(promotionCode);
		}

		Date promotionFrom = (Date)attributes.get("promotionFrom");

		if (promotionFrom != null) {
			setPromotionFrom(promotionFrom);
		}

		Date promotionTo = (Date)attributes.get("promotionTo");

		if (promotionTo != null) {
			setPromotionTo(promotionTo);
		}

		String discount = (String)attributes.get("discount");

		if (discount != null) {
			setDiscount(discount);
		}

		Float nettotal = (Float)attributes.get("nettotal");

		if (nettotal != null) {
			setNettotal(nettotal);
		}

		String nettotalCurrency = (String)attributes.get("nettotalCurrency");

		if (nettotalCurrency != null) {
			setNettotalCurrency(nettotalCurrency);
		}

		String ppTxnId = (String)attributes.get("ppTxnId");

		if (ppTxnId != null) {
			setPpTxnId(ppTxnId);
		}

		String ppPaymentStatus = (String)attributes.get("ppPaymentStatus");

		if (ppPaymentStatus != null) {
			setPpPaymentStatus(ppPaymentStatus);
		}

		Float ppPaymentGross = (Float)attributes.get("ppPaymentGross");

		if (ppPaymentGross != null) {
			setPpPaymentGross(ppPaymentGross);
		}

		String ppReceiverEmail = (String)attributes.get("ppReceiverEmail");

		if (ppReceiverEmail != null) {
			setPpReceiverEmail(ppReceiverEmail);
		}

		String ppPayerEmail = (String)attributes.get("ppPayerEmail");

		if (ppPayerEmail != null) {
			setPpPayerEmail(ppPayerEmail);
		}

		String sendOrderEmail = (String)attributes.get("sendOrderEmail");

		if (sendOrderEmail != null) {
			setSendOrderEmail(sendOrderEmail);
		}

		String sendShippingEmail = (String)attributes.get("sendShippingEmail");

		if (sendShippingEmail != null) {
			setSendShippingEmail(sendShippingEmail);
		}

		Date effectiveFromDate = (Date)attributes.get("effectiveFromDate");

		if (effectiveFromDate != null) {
			setEffectiveFromDate(effectiveFromDate);
		}

		Date effectiveToDate = (Date)attributes.get("effectiveToDate");

		if (effectiveToDate != null) {
			setEffectiveToDate(effectiveToDate);
		}

		Integer altShipping = (Integer)attributes.get("altShipping");

		if (altShipping != null) {
			setAltShipping(altShipping);
		}

		Double shipping = (Double)attributes.get("shipping");

		if (shipping != null) {
			setShipping(shipping);
		}

		Boolean requiresShipping = (Boolean)attributes.get("requiresShipping");

		if (requiresShipping != null) {
			setRequiresShipping(requiresShipping);
		}

		Boolean insure = (Boolean)attributes.get("insure");

		if (insure != null) {
			setInsure(insure);
		}

		Double insurance = (Double)attributes.get("insurance");

		if (insurance != null) {
			setInsurance(insurance);
		}

		String billingFirstName = (String)attributes.get("billingFirstName");

		if (billingFirstName != null) {
			setBillingFirstName(billingFirstName);
		}

		String billingLastName = (String)attributes.get("billingLastName");

		if (billingLastName != null) {
			setBillingLastName(billingLastName);
		}

		String billingEmailAddress = (String)attributes.get(
				"billingEmailAddress");

		if (billingEmailAddress != null) {
			setBillingEmailAddress(billingEmailAddress);
		}

		String billingCompany = (String)attributes.get("billingCompany");

		if (billingCompany != null) {
			setBillingCompany(billingCompany);
		}

		String billingStreet = (String)attributes.get("billingStreet");

		if (billingStreet != null) {
			setBillingStreet(billingStreet);
		}

		String billingCity = (String)attributes.get("billingCity");

		if (billingCity != null) {
			setBillingCity(billingCity);
		}

		String billingState = (String)attributes.get("billingState");

		if (billingState != null) {
			setBillingState(billingState);
		}

		String billingZip = (String)attributes.get("billingZip");

		if (billingZip != null) {
			setBillingZip(billingZip);
		}

		String billingCountry = (String)attributes.get("billingCountry");

		if (billingCountry != null) {
			setBillingCountry(billingCountry);
		}

		String billingPhone = (String)attributes.get("billingPhone");

		if (billingPhone != null) {
			setBillingPhone(billingPhone);
		}

		Boolean shipToBilling = (Boolean)attributes.get("shipToBilling");

		if (shipToBilling != null) {
			setShipToBilling(shipToBilling);
		}

		String shippingFirstName = (String)attributes.get("shippingFirstName");

		if (shippingFirstName != null) {
			setShippingFirstName(shippingFirstName);
		}

		String shippingLastName = (String)attributes.get("shippingLastName");

		if (shippingLastName != null) {
			setShippingLastName(shippingLastName);
		}

		String shippingEmailAddress = (String)attributes.get(
				"shippingEmailAddress");

		if (shippingEmailAddress != null) {
			setShippingEmailAddress(shippingEmailAddress);
		}

		String shippingCompany = (String)attributes.get("shippingCompany");

		if (shippingCompany != null) {
			setShippingCompany(shippingCompany);
		}

		String shippingStreet = (String)attributes.get("shippingStreet");

		if (shippingStreet != null) {
			setShippingStreet(shippingStreet);
		}

		String shippingCity = (String)attributes.get("shippingCity");

		if (shippingCity != null) {
			setShippingCity(shippingCity);
		}

		String shippingState = (String)attributes.get("shippingState");

		if (shippingState != null) {
			setShippingState(shippingState);
		}

		String shippingZip = (String)attributes.get("shippingZip");

		if (shippingZip != null) {
			setShippingZip(shippingZip);
		}

		String shippingCountry = (String)attributes.get("shippingCountry");

		if (shippingCountry != null) {
			setShippingCountry(shippingCountry);
		}

		String shippingPhone = (String)attributes.get("shippingPhone");

		if (shippingPhone != null) {
			setShippingPhone(shippingPhone);
		}

		String ccName = (String)attributes.get("ccName");

		if (ccName != null) {
			setCcName(ccName);
		}

		String ccType = (String)attributes.get("ccType");

		if (ccType != null) {
			setCcType(ccType);
		}

		String ccNumber = (String)attributes.get("ccNumber");

		if (ccNumber != null) {
			setCcNumber(ccNumber);
		}

		Integer ccExpMonth = (Integer)attributes.get("ccExpMonth");

		if (ccExpMonth != null) {
			setCcExpMonth(ccExpMonth);
		}

		Integer ccExpYear = (Integer)attributes.get("ccExpYear");

		if (ccExpYear != null) {
			setCcExpYear(ccExpYear);
		}

		String ccVerNumber = (String)attributes.get("ccVerNumber");

		if (ccVerNumber != null) {
			setCcVerNumber(ccVerNumber);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getMsId() {
		return _msId;
	}

	@Override
	public void setMsId(long msId) {
		_msId = msId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getMporder_1() {
		if (_mporder_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mporder_1;
		}
	}

	@Override
	public void setMporder_1(String mporder_1) {
		_mporder_1 = mporder_1;
	}

	@Override
	public String getMpId_1() {
		if (_mpId_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpId_1;
		}
	}

	@Override
	public void setMpId_1(String mpId_1) {
		_columnBitmask |= MPID_1_COLUMN_BITMASK;

		if (_originalMpId_1 == null) {
			_originalMpId_1 = _mpId_1;
		}

		_mpId_1 = mpId_1;
	}

	public String getOriginalMpId_1() {
		return GetterUtil.getString(_originalMpId_1);
	}

	@Override
	public String getMpName_1() {
		if (_mpName_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpName_1;
		}
	}

	@Override
	public void setMpName_1(String mpName_1) {
		_mpName_1 = mpName_1;
	}

	@Override
	public int getMpQty_1() {
		return _mpQty_1;
	}

	@Override
	public void setMpQty_1(int mpQty_1) {
		_mpQty_1 = mpQty_1;
	}

	@Override
	public float getMpPrice_1() {
		return _mpPrice_1;
	}

	@Override
	public void setMpPrice_1(float mpPrice_1) {
		_mpPrice_1 = mpPrice_1;
	}

	@Override
	public String getMpPriceCurrency_1() {
		if (_mpPriceCurrency_1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpPriceCurrency_1;
		}
	}

	@Override
	public void setMpPriceCurrency_1(String mpPriceCurrency_1) {
		_mpPriceCurrency_1 = mpPriceCurrency_1;
	}

	@Override
	public String getMporder_2() {
		if (_mporder_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mporder_2;
		}
	}

	@Override
	public void setMporder_2(String mporder_2) {
		_mporder_2 = mporder_2;
	}

	@Override
	public String getMpId_2() {
		if (_mpId_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpId_2;
		}
	}

	@Override
	public void setMpId_2(String mpId_2) {
		_mpId_2 = mpId_2;
	}

	@Override
	public String getMpName_2() {
		if (_mpName_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpName_2;
		}
	}

	@Override
	public void setMpName_2(String mpName_2) {
		_mpName_2 = mpName_2;
	}

	@Override
	public int getMpQty_2() {
		return _mpQty_2;
	}

	@Override
	public void setMpQty_2(int mpQty_2) {
		_mpQty_2 = mpQty_2;
	}

	@Override
	public float getMpPrice_2() {
		return _mpPrice_2;
	}

	@Override
	public void setMpPrice_2(float mpPrice_2) {
		_mpPrice_2 = mpPrice_2;
	}

	@Override
	public String getMpPriceCurrency_2() {
		if (_mpPriceCurrency_2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpPriceCurrency_2;
		}
	}

	@Override
	public void setMpPriceCurrency_2(String mpPriceCurrency_2) {
		_mpPriceCurrency_2 = mpPriceCurrency_2;
	}

	@Override
	public String getMporder_3() {
		if (_mporder_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mporder_3;
		}
	}

	@Override
	public void setMporder_3(String mporder_3) {
		_mporder_3 = mporder_3;
	}

	@Override
	public String getMpId_3() {
		if (_mpId_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpId_3;
		}
	}

	@Override
	public void setMpId_3(String mpId_3) {
		_mpId_3 = mpId_3;
	}

	@Override
	public String getMpName_3() {
		if (_mpName_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpName_3;
		}
	}

	@Override
	public void setMpName_3(String mpName_3) {
		_mpName_3 = mpName_3;
	}

	@Override
	public int getMpQty_3() {
		return _mpQty_3;
	}

	@Override
	public void setMpQty_3(int mpQty_3) {
		_mpQty_3 = mpQty_3;
	}

	@Override
	public float getMpPrice_3() {
		return _mpPrice_3;
	}

	@Override
	public void setMpPrice_3(float mpPrice_3) {
		_mpPrice_3 = mpPrice_3;
	}

	@Override
	public String getMpPriceCurrency_3() {
		if (_mpPriceCurrency_3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpPriceCurrency_3;
		}
	}

	@Override
	public void setMpPriceCurrency_3(String mpPriceCurrency_3) {
		_mpPriceCurrency_3 = mpPriceCurrency_3;
	}

	@Override
	public String getMporder_4() {
		if (_mporder_4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mporder_4;
		}
	}

	@Override
	public void setMporder_4(String mporder_4) {
		_mporder_4 = mporder_4;
	}

	@Override
	public String getMpId_4() {
		if (_mpId_4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpId_4;
		}
	}

	@Override
	public void setMpId_4(String mpId_4) {
		_mpId_4 = mpId_4;
	}

	@Override
	public String getMpName_4() {
		if (_mpName_4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpName_4;
		}
	}

	@Override
	public void setMpName_4(String mpName_4) {
		_mpName_4 = mpName_4;
	}

	@Override
	public int getMpQty_4() {
		return _mpQty_4;
	}

	@Override
	public void setMpQty_4(int mpQty_4) {
		_mpQty_4 = mpQty_4;
	}

	@Override
	public float getMpPrice_4() {
		return _mpPrice_4;
	}

	@Override
	public void setMpPrice_4(float mpPrice_4) {
		_mpPrice_4 = mpPrice_4;
	}

	@Override
	public String getMpPriceCurrency_4() {
		if (_mpPriceCurrency_4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpPriceCurrency_4;
		}
	}

	@Override
	public void setMpPriceCurrency_4(String mpPriceCurrency_4) {
		_mpPriceCurrency_4 = mpPriceCurrency_4;
	}

	@Override
	public float getMpSubtotal() {
		return _mpSubtotal;
	}

	@Override
	public void setMpSubtotal(float mpSubtotal) {
		_mpSubtotal = mpSubtotal;
	}

	@Override
	public String getMpSubtotalCurrency() {
		if (_mpSubtotalCurrency == null) {
			return StringPool.BLANK;
		}
		else {
			return _mpSubtotalCurrency;
		}
	}

	@Override
	public void setMpSubtotalCurrency(String mpSubtotalCurrency) {
		_mpSubtotalCurrency = mpSubtotalCurrency;
	}

	@Override
	public float getAddOnSubtotal() {
		return _addOnSubtotal;
	}

	@Override
	public void setAddOnSubtotal(float addOnSubtotal) {
		_addOnSubtotal = addOnSubtotal;
	}

	@Override
	public String getAddOnSubtotalCurrency() {
		if (_addOnSubtotalCurrency == null) {
			return StringPool.BLANK;
		}
		else {
			return _addOnSubtotalCurrency;
		}
	}

	@Override
	public void setAddOnSubtotalCurrency(String addOnSubtotalCurrency) {
		_addOnSubtotalCurrency = addOnSubtotalCurrency;
	}

	@Override
	public float getTax() {
		return _tax;
	}

	@Override
	public void setTax(float tax) {
		_tax = tax;
	}

	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@Override
	public String getPromotionCode() {
		if (_promotionCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _promotionCode;
		}
	}

	@Override
	public void setPromotionCode(String promotionCode) {
		_promotionCode = promotionCode;
	}

	@Override
	public Date getPromotionFrom() {
		return _promotionFrom;
	}

	@Override
	public void setPromotionFrom(Date promotionFrom) {
		_promotionFrom = promotionFrom;
	}

	@Override
	public Date getPromotionTo() {
		return _promotionTo;
	}

	@Override
	public void setPromotionTo(Date promotionTo) {
		_promotionTo = promotionTo;
	}

	@Override
	public String getDiscount() {
		if (_discount == null) {
			return StringPool.BLANK;
		}
		else {
			return _discount;
		}
	}

	@Override
	public void setDiscount(String discount) {
		_discount = discount;
	}

	@Override
	public float getNettotal() {
		return _nettotal;
	}

	@Override
	public void setNettotal(float nettotal) {
		_columnBitmask |= NETTOTAL_COLUMN_BITMASK;

		if (!_setOriginalNettotal) {
			_setOriginalNettotal = true;

			_originalNettotal = _nettotal;
		}

		_nettotal = nettotal;
	}

	public float getOriginalNettotal() {
		return _originalNettotal;
	}

	@Override
	public String getNettotalCurrency() {
		if (_nettotalCurrency == null) {
			return StringPool.BLANK;
		}
		else {
			return _nettotalCurrency;
		}
	}

	@Override
	public void setNettotalCurrency(String nettotalCurrency) {
		_nettotalCurrency = nettotalCurrency;
	}

	@Override
	public String getPpTxnId() {
		if (_ppTxnId == null) {
			return StringPool.BLANK;
		}
		else {
			return _ppTxnId;
		}
	}

	@Override
	public void setPpTxnId(String ppTxnId) {
		_ppTxnId = ppTxnId;
	}

	@Override
	public String getPpPaymentStatus() {
		if (_ppPaymentStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _ppPaymentStatus;
		}
	}

	@Override
	public void setPpPaymentStatus(String ppPaymentStatus) {
		_columnBitmask |= PPPAYMENTSTATUS_COLUMN_BITMASK;

		if (_originalPpPaymentStatus == null) {
			_originalPpPaymentStatus = _ppPaymentStatus;
		}

		_ppPaymentStatus = ppPaymentStatus;
	}

	public String getOriginalPpPaymentStatus() {
		return GetterUtil.getString(_originalPpPaymentStatus);
	}

	@Override
	public float getPpPaymentGross() {
		return _ppPaymentGross;
	}

	@Override
	public void setPpPaymentGross(float ppPaymentGross) {
		_ppPaymentGross = ppPaymentGross;
	}

	@Override
	public String getPpReceiverEmail() {
		if (_ppReceiverEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _ppReceiverEmail;
		}
	}

	@Override
	public void setPpReceiverEmail(String ppReceiverEmail) {
		_ppReceiverEmail = ppReceiverEmail;
	}

	@Override
	public String getPpPayerEmail() {
		if (_ppPayerEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _ppPayerEmail;
		}
	}

	@Override
	public void setPpPayerEmail(String ppPayerEmail) {
		_ppPayerEmail = ppPayerEmail;
	}

	@Override
	public String getSendOrderEmail() {
		if (_sendOrderEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _sendOrderEmail;
		}
	}

	@Override
	public void setSendOrderEmail(String sendOrderEmail) {
		_sendOrderEmail = sendOrderEmail;
	}

	@Override
	public String getSendShippingEmail() {
		if (_sendShippingEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _sendShippingEmail;
		}
	}

	@Override
	public void setSendShippingEmail(String sendShippingEmail) {
		_sendShippingEmail = sendShippingEmail;
	}

	@Override
	public Date getEffectiveFromDate() {
		return _effectiveFromDate;
	}

	@Override
	public void setEffectiveFromDate(Date effectiveFromDate) {
		_effectiveFromDate = effectiveFromDate;
	}

	@Override
	public Date getEffectiveToDate() {
		return _effectiveToDate;
	}

	@Override
	public void setEffectiveToDate(Date effectiveToDate) {
		_effectiveToDate = effectiveToDate;
	}

	@Override
	public int getAltShipping() {
		return _altShipping;
	}

	@Override
	public void setAltShipping(int altShipping) {
		_altShipping = altShipping;
	}

	@Override
	public double getShipping() {
		return _shipping;
	}

	@Override
	public void setShipping(double shipping) {
		_shipping = shipping;
	}

	@Override
	public boolean getRequiresShipping() {
		return _requiresShipping;
	}

	@Override
	public boolean isRequiresShipping() {
		return _requiresShipping;
	}

	@Override
	public void setRequiresShipping(boolean requiresShipping) {
		_requiresShipping = requiresShipping;
	}

	@Override
	public boolean getInsure() {
		return _insure;
	}

	@Override
	public boolean isInsure() {
		return _insure;
	}

	@Override
	public void setInsure(boolean insure) {
		_insure = insure;
	}

	@Override
	public double getInsurance() {
		return _insurance;
	}

	@Override
	public void setInsurance(double insurance) {
		_insurance = insurance;
	}

	@Override
	public String getBillingFirstName() {
		if (_billingFirstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingFirstName;
		}
	}

	@Override
	public void setBillingFirstName(String billingFirstName) {
		_billingFirstName = billingFirstName;
	}

	@Override
	public String getBillingLastName() {
		if (_billingLastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingLastName;
		}
	}

	@Override
	public void setBillingLastName(String billingLastName) {
		_billingLastName = billingLastName;
	}

	@Override
	public String getBillingEmailAddress() {
		if (_billingEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingEmailAddress;
		}
	}

	@Override
	public void setBillingEmailAddress(String billingEmailAddress) {
		_billingEmailAddress = billingEmailAddress;
	}

	@Override
	public String getBillingCompany() {
		if (_billingCompany == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingCompany;
		}
	}

	@Override
	public void setBillingCompany(String billingCompany) {
		_billingCompany = billingCompany;
	}

	@Override
	public String getBillingStreet() {
		if (_billingStreet == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingStreet;
		}
	}

	@Override
	public void setBillingStreet(String billingStreet) {
		_billingStreet = billingStreet;
	}

	@Override
	public String getBillingCity() {
		if (_billingCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingCity;
		}
	}

	@Override
	public void setBillingCity(String billingCity) {
		_billingCity = billingCity;
	}

	@Override
	public String getBillingState() {
		if (_billingState == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingState;
		}
	}

	@Override
	public void setBillingState(String billingState) {
		_billingState = billingState;
	}

	@Override
	public String getBillingZip() {
		if (_billingZip == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingZip;
		}
	}

	@Override
	public void setBillingZip(String billingZip) {
		_billingZip = billingZip;
	}

	@Override
	public String getBillingCountry() {
		if (_billingCountry == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingCountry;
		}
	}

	@Override
	public void setBillingCountry(String billingCountry) {
		_billingCountry = billingCountry;
	}

	@Override
	public String getBillingPhone() {
		if (_billingPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _billingPhone;
		}
	}

	@Override
	public void setBillingPhone(String billingPhone) {
		_billingPhone = billingPhone;
	}

	@Override
	public boolean getShipToBilling() {
		return _shipToBilling;
	}

	@Override
	public boolean isShipToBilling() {
		return _shipToBilling;
	}

	@Override
	public void setShipToBilling(boolean shipToBilling) {
		_shipToBilling = shipToBilling;
	}

	@Override
	public String getShippingFirstName() {
		if (_shippingFirstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingFirstName;
		}
	}

	@Override
	public void setShippingFirstName(String shippingFirstName) {
		_shippingFirstName = shippingFirstName;
	}

	@Override
	public String getShippingLastName() {
		if (_shippingLastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingLastName;
		}
	}

	@Override
	public void setShippingLastName(String shippingLastName) {
		_shippingLastName = shippingLastName;
	}

	@Override
	public String getShippingEmailAddress() {
		if (_shippingEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingEmailAddress;
		}
	}

	@Override
	public void setShippingEmailAddress(String shippingEmailAddress) {
		_columnBitmask |= SHIPPINGEMAILADDRESS_COLUMN_BITMASK;

		if (_originalShippingEmailAddress == null) {
			_originalShippingEmailAddress = _shippingEmailAddress;
		}

		_shippingEmailAddress = shippingEmailAddress;
	}

	public String getOriginalShippingEmailAddress() {
		return GetterUtil.getString(_originalShippingEmailAddress);
	}

	@Override
	public String getShippingCompany() {
		if (_shippingCompany == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingCompany;
		}
	}

	@Override
	public void setShippingCompany(String shippingCompany) {
		_shippingCompany = shippingCompany;
	}

	@Override
	public String getShippingStreet() {
		if (_shippingStreet == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingStreet;
		}
	}

	@Override
	public void setShippingStreet(String shippingStreet) {
		_shippingStreet = shippingStreet;
	}

	@Override
	public String getShippingCity() {
		if (_shippingCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingCity;
		}
	}

	@Override
	public void setShippingCity(String shippingCity) {
		_shippingCity = shippingCity;
	}

	@Override
	public String getShippingState() {
		if (_shippingState == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingState;
		}
	}

	@Override
	public void setShippingState(String shippingState) {
		_shippingState = shippingState;
	}

	@Override
	public String getShippingZip() {
		if (_shippingZip == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingZip;
		}
	}

	@Override
	public void setShippingZip(String shippingZip) {
		_shippingZip = shippingZip;
	}

	@Override
	public String getShippingCountry() {
		if (_shippingCountry == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingCountry;
		}
	}

	@Override
	public void setShippingCountry(String shippingCountry) {
		_shippingCountry = shippingCountry;
	}

	@Override
	public String getShippingPhone() {
		if (_shippingPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _shippingPhone;
		}
	}

	@Override
	public void setShippingPhone(String shippingPhone) {
		_shippingPhone = shippingPhone;
	}

	@Override
	public String getCcName() {
		if (_ccName == null) {
			return StringPool.BLANK;
		}
		else {
			return _ccName;
		}
	}

	@Override
	public void setCcName(String ccName) {
		_ccName = ccName;
	}

	@Override
	public String getCcType() {
		if (_ccType == null) {
			return StringPool.BLANK;
		}
		else {
			return _ccType;
		}
	}

	@Override
	public void setCcType(String ccType) {
		_ccType = ccType;
	}

	@Override
	public String getCcNumber() {
		if (_ccNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _ccNumber;
		}
	}

	@Override
	public void setCcNumber(String ccNumber) {
		_ccNumber = ccNumber;
	}

	@Override
	public int getCcExpMonth() {
		return _ccExpMonth;
	}

	@Override
	public void setCcExpMonth(int ccExpMonth) {
		_ccExpMonth = ccExpMonth;
	}

	@Override
	public int getCcExpYear() {
		return _ccExpYear;
	}

	@Override
	public void setCcExpYear(int ccExpYear) {
		_ccExpYear = ccExpYear;
	}

	@Override
	public String getCcVerNumber() {
		if (_ccVerNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _ccVerNumber;
		}
	}

	@Override
	public void setCcVerNumber(String ccVerNumber) {
		_ccVerNumber = ccVerNumber;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_columnBitmask |= USERNAME_COLUMN_BITMASK;

		if (_originalUserName == null) {
			_originalUserName = _userName;
		}

		_userName = userName;
	}

	public String getOriginalUserName() {
		return GetterUtil.getString(_originalUserName);
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			MembershipSubscription.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MembershipSubscription toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MembershipSubscription)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MembershipSubscriptionImpl membershipSubscriptionImpl = new MembershipSubscriptionImpl();

		membershipSubscriptionImpl.setMsId(getMsId());
		membershipSubscriptionImpl.setName(getName());
		membershipSubscriptionImpl.setDescription(getDescription());
		membershipSubscriptionImpl.setMporder_1(getMporder_1());
		membershipSubscriptionImpl.setMpId_1(getMpId_1());
		membershipSubscriptionImpl.setMpName_1(getMpName_1());
		membershipSubscriptionImpl.setMpQty_1(getMpQty_1());
		membershipSubscriptionImpl.setMpPrice_1(getMpPrice_1());
		membershipSubscriptionImpl.setMpPriceCurrency_1(getMpPriceCurrency_1());
		membershipSubscriptionImpl.setMporder_2(getMporder_2());
		membershipSubscriptionImpl.setMpId_2(getMpId_2());
		membershipSubscriptionImpl.setMpName_2(getMpName_2());
		membershipSubscriptionImpl.setMpQty_2(getMpQty_2());
		membershipSubscriptionImpl.setMpPrice_2(getMpPrice_2());
		membershipSubscriptionImpl.setMpPriceCurrency_2(getMpPriceCurrency_2());
		membershipSubscriptionImpl.setMporder_3(getMporder_3());
		membershipSubscriptionImpl.setMpId_3(getMpId_3());
		membershipSubscriptionImpl.setMpName_3(getMpName_3());
		membershipSubscriptionImpl.setMpQty_3(getMpQty_3());
		membershipSubscriptionImpl.setMpPrice_3(getMpPrice_3());
		membershipSubscriptionImpl.setMpPriceCurrency_3(getMpPriceCurrency_3());
		membershipSubscriptionImpl.setMporder_4(getMporder_4());
		membershipSubscriptionImpl.setMpId_4(getMpId_4());
		membershipSubscriptionImpl.setMpName_4(getMpName_4());
		membershipSubscriptionImpl.setMpQty_4(getMpQty_4());
		membershipSubscriptionImpl.setMpPrice_4(getMpPrice_4());
		membershipSubscriptionImpl.setMpPriceCurrency_4(getMpPriceCurrency_4());
		membershipSubscriptionImpl.setMpSubtotal(getMpSubtotal());
		membershipSubscriptionImpl.setMpSubtotalCurrency(getMpSubtotalCurrency());
		membershipSubscriptionImpl.setAddOnSubtotal(getAddOnSubtotal());
		membershipSubscriptionImpl.setAddOnSubtotalCurrency(getAddOnSubtotalCurrency());
		membershipSubscriptionImpl.setTax(getTax());
		membershipSubscriptionImpl.setComments(getComments());
		membershipSubscriptionImpl.setPromotionCode(getPromotionCode());
		membershipSubscriptionImpl.setPromotionFrom(getPromotionFrom());
		membershipSubscriptionImpl.setPromotionTo(getPromotionTo());
		membershipSubscriptionImpl.setDiscount(getDiscount());
		membershipSubscriptionImpl.setNettotal(getNettotal());
		membershipSubscriptionImpl.setNettotalCurrency(getNettotalCurrency());
		membershipSubscriptionImpl.setPpTxnId(getPpTxnId());
		membershipSubscriptionImpl.setPpPaymentStatus(getPpPaymentStatus());
		membershipSubscriptionImpl.setPpPaymentGross(getPpPaymentGross());
		membershipSubscriptionImpl.setPpReceiverEmail(getPpReceiverEmail());
		membershipSubscriptionImpl.setPpPayerEmail(getPpPayerEmail());
		membershipSubscriptionImpl.setSendOrderEmail(getSendOrderEmail());
		membershipSubscriptionImpl.setSendShippingEmail(getSendShippingEmail());
		membershipSubscriptionImpl.setEffectiveFromDate(getEffectiveFromDate());
		membershipSubscriptionImpl.setEffectiveToDate(getEffectiveToDate());
		membershipSubscriptionImpl.setAltShipping(getAltShipping());
		membershipSubscriptionImpl.setShipping(getShipping());
		membershipSubscriptionImpl.setRequiresShipping(getRequiresShipping());
		membershipSubscriptionImpl.setInsure(getInsure());
		membershipSubscriptionImpl.setInsurance(getInsurance());
		membershipSubscriptionImpl.setBillingFirstName(getBillingFirstName());
		membershipSubscriptionImpl.setBillingLastName(getBillingLastName());
		membershipSubscriptionImpl.setBillingEmailAddress(getBillingEmailAddress());
		membershipSubscriptionImpl.setBillingCompany(getBillingCompany());
		membershipSubscriptionImpl.setBillingStreet(getBillingStreet());
		membershipSubscriptionImpl.setBillingCity(getBillingCity());
		membershipSubscriptionImpl.setBillingState(getBillingState());
		membershipSubscriptionImpl.setBillingZip(getBillingZip());
		membershipSubscriptionImpl.setBillingCountry(getBillingCountry());
		membershipSubscriptionImpl.setBillingPhone(getBillingPhone());
		membershipSubscriptionImpl.setShipToBilling(getShipToBilling());
		membershipSubscriptionImpl.setShippingFirstName(getShippingFirstName());
		membershipSubscriptionImpl.setShippingLastName(getShippingLastName());
		membershipSubscriptionImpl.setShippingEmailAddress(getShippingEmailAddress());
		membershipSubscriptionImpl.setShippingCompany(getShippingCompany());
		membershipSubscriptionImpl.setShippingStreet(getShippingStreet());
		membershipSubscriptionImpl.setShippingCity(getShippingCity());
		membershipSubscriptionImpl.setShippingState(getShippingState());
		membershipSubscriptionImpl.setShippingZip(getShippingZip());
		membershipSubscriptionImpl.setShippingCountry(getShippingCountry());
		membershipSubscriptionImpl.setShippingPhone(getShippingPhone());
		membershipSubscriptionImpl.setCcName(getCcName());
		membershipSubscriptionImpl.setCcType(getCcType());
		membershipSubscriptionImpl.setCcNumber(getCcNumber());
		membershipSubscriptionImpl.setCcExpMonth(getCcExpMonth());
		membershipSubscriptionImpl.setCcExpYear(getCcExpYear());
		membershipSubscriptionImpl.setCcVerNumber(getCcVerNumber());
		membershipSubscriptionImpl.setGroupId(getGroupId());
		membershipSubscriptionImpl.setCompanyId(getCompanyId());
		membershipSubscriptionImpl.setUserId(getUserId());
		membershipSubscriptionImpl.setUserName(getUserName());
		membershipSubscriptionImpl.setCreateDate(getCreateDate());
		membershipSubscriptionImpl.setModifiedDate(getModifiedDate());

		membershipSubscriptionImpl.resetOriginalValues();

		return membershipSubscriptionImpl;
	}

	@Override
	public int compareTo(MembershipSubscription membershipSubscription) {
		long primaryKey = membershipSubscription.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MembershipSubscription)) {
			return false;
		}

		MembershipSubscription membershipSubscription = (MembershipSubscription)obj;

		long primaryKey = membershipSubscription.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MembershipSubscriptionModelImpl membershipSubscriptionModelImpl = this;

		membershipSubscriptionModelImpl._originalName = membershipSubscriptionModelImpl._name;

		membershipSubscriptionModelImpl._originalMpId_1 = membershipSubscriptionModelImpl._mpId_1;

		membershipSubscriptionModelImpl._originalNettotal = membershipSubscriptionModelImpl._nettotal;

		membershipSubscriptionModelImpl._setOriginalNettotal = false;

		membershipSubscriptionModelImpl._originalPpPaymentStatus = membershipSubscriptionModelImpl._ppPaymentStatus;

		membershipSubscriptionModelImpl._originalShippingEmailAddress = membershipSubscriptionModelImpl._shippingEmailAddress;

		membershipSubscriptionModelImpl._originalGroupId = membershipSubscriptionModelImpl._groupId;

		membershipSubscriptionModelImpl._setOriginalGroupId = false;

		membershipSubscriptionModelImpl._originalUserId = membershipSubscriptionModelImpl._userId;

		membershipSubscriptionModelImpl._setOriginalUserId = false;

		membershipSubscriptionModelImpl._originalUserName = membershipSubscriptionModelImpl._userName;

		membershipSubscriptionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MembershipSubscription> toCacheModel() {
		MembershipSubscriptionCacheModel membershipSubscriptionCacheModel = new MembershipSubscriptionCacheModel();

		membershipSubscriptionCacheModel.msId = getMsId();

		membershipSubscriptionCacheModel.name = getName();

		String name = membershipSubscriptionCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			membershipSubscriptionCacheModel.name = null;
		}

		membershipSubscriptionCacheModel.description = getDescription();

		String description = membershipSubscriptionCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			membershipSubscriptionCacheModel.description = null;
		}

		membershipSubscriptionCacheModel.mporder_1 = getMporder_1();

		String mporder_1 = membershipSubscriptionCacheModel.mporder_1;

		if ((mporder_1 != null) && (mporder_1.length() == 0)) {
			membershipSubscriptionCacheModel.mporder_1 = null;
		}

		membershipSubscriptionCacheModel.mpId_1 = getMpId_1();

		String mpId_1 = membershipSubscriptionCacheModel.mpId_1;

		if ((mpId_1 != null) && (mpId_1.length() == 0)) {
			membershipSubscriptionCacheModel.mpId_1 = null;
		}

		membershipSubscriptionCacheModel.mpName_1 = getMpName_1();

		String mpName_1 = membershipSubscriptionCacheModel.mpName_1;

		if ((mpName_1 != null) && (mpName_1.length() == 0)) {
			membershipSubscriptionCacheModel.mpName_1 = null;
		}

		membershipSubscriptionCacheModel.mpQty_1 = getMpQty_1();

		membershipSubscriptionCacheModel.mpPrice_1 = getMpPrice_1();

		membershipSubscriptionCacheModel.mpPriceCurrency_1 = getMpPriceCurrency_1();

		String mpPriceCurrency_1 = membershipSubscriptionCacheModel.mpPriceCurrency_1;

		if ((mpPriceCurrency_1 != null) && (mpPriceCurrency_1.length() == 0)) {
			membershipSubscriptionCacheModel.mpPriceCurrency_1 = null;
		}

		membershipSubscriptionCacheModel.mporder_2 = getMporder_2();

		String mporder_2 = membershipSubscriptionCacheModel.mporder_2;

		if ((mporder_2 != null) && (mporder_2.length() == 0)) {
			membershipSubscriptionCacheModel.mporder_2 = null;
		}

		membershipSubscriptionCacheModel.mpId_2 = getMpId_2();

		String mpId_2 = membershipSubscriptionCacheModel.mpId_2;

		if ((mpId_2 != null) && (mpId_2.length() == 0)) {
			membershipSubscriptionCacheModel.mpId_2 = null;
		}

		membershipSubscriptionCacheModel.mpName_2 = getMpName_2();

		String mpName_2 = membershipSubscriptionCacheModel.mpName_2;

		if ((mpName_2 != null) && (mpName_2.length() == 0)) {
			membershipSubscriptionCacheModel.mpName_2 = null;
		}

		membershipSubscriptionCacheModel.mpQty_2 = getMpQty_2();

		membershipSubscriptionCacheModel.mpPrice_2 = getMpPrice_2();

		membershipSubscriptionCacheModel.mpPriceCurrency_2 = getMpPriceCurrency_2();

		String mpPriceCurrency_2 = membershipSubscriptionCacheModel.mpPriceCurrency_2;

		if ((mpPriceCurrency_2 != null) && (mpPriceCurrency_2.length() == 0)) {
			membershipSubscriptionCacheModel.mpPriceCurrency_2 = null;
		}

		membershipSubscriptionCacheModel.mporder_3 = getMporder_3();

		String mporder_3 = membershipSubscriptionCacheModel.mporder_3;

		if ((mporder_3 != null) && (mporder_3.length() == 0)) {
			membershipSubscriptionCacheModel.mporder_3 = null;
		}

		membershipSubscriptionCacheModel.mpId_3 = getMpId_3();

		String mpId_3 = membershipSubscriptionCacheModel.mpId_3;

		if ((mpId_3 != null) && (mpId_3.length() == 0)) {
			membershipSubscriptionCacheModel.mpId_3 = null;
		}

		membershipSubscriptionCacheModel.mpName_3 = getMpName_3();

		String mpName_3 = membershipSubscriptionCacheModel.mpName_3;

		if ((mpName_3 != null) && (mpName_3.length() == 0)) {
			membershipSubscriptionCacheModel.mpName_3 = null;
		}

		membershipSubscriptionCacheModel.mpQty_3 = getMpQty_3();

		membershipSubscriptionCacheModel.mpPrice_3 = getMpPrice_3();

		membershipSubscriptionCacheModel.mpPriceCurrency_3 = getMpPriceCurrency_3();

		String mpPriceCurrency_3 = membershipSubscriptionCacheModel.mpPriceCurrency_3;

		if ((mpPriceCurrency_3 != null) && (mpPriceCurrency_3.length() == 0)) {
			membershipSubscriptionCacheModel.mpPriceCurrency_3 = null;
		}

		membershipSubscriptionCacheModel.mporder_4 = getMporder_4();

		String mporder_4 = membershipSubscriptionCacheModel.mporder_4;

		if ((mporder_4 != null) && (mporder_4.length() == 0)) {
			membershipSubscriptionCacheModel.mporder_4 = null;
		}

		membershipSubscriptionCacheModel.mpId_4 = getMpId_4();

		String mpId_4 = membershipSubscriptionCacheModel.mpId_4;

		if ((mpId_4 != null) && (mpId_4.length() == 0)) {
			membershipSubscriptionCacheModel.mpId_4 = null;
		}

		membershipSubscriptionCacheModel.mpName_4 = getMpName_4();

		String mpName_4 = membershipSubscriptionCacheModel.mpName_4;

		if ((mpName_4 != null) && (mpName_4.length() == 0)) {
			membershipSubscriptionCacheModel.mpName_4 = null;
		}

		membershipSubscriptionCacheModel.mpQty_4 = getMpQty_4();

		membershipSubscriptionCacheModel.mpPrice_4 = getMpPrice_4();

		membershipSubscriptionCacheModel.mpPriceCurrency_4 = getMpPriceCurrency_4();

		String mpPriceCurrency_4 = membershipSubscriptionCacheModel.mpPriceCurrency_4;

		if ((mpPriceCurrency_4 != null) && (mpPriceCurrency_4.length() == 0)) {
			membershipSubscriptionCacheModel.mpPriceCurrency_4 = null;
		}

		membershipSubscriptionCacheModel.mpSubtotal = getMpSubtotal();

		membershipSubscriptionCacheModel.mpSubtotalCurrency = getMpSubtotalCurrency();

		String mpSubtotalCurrency = membershipSubscriptionCacheModel.mpSubtotalCurrency;

		if ((mpSubtotalCurrency != null) && (mpSubtotalCurrency.length() == 0)) {
			membershipSubscriptionCacheModel.mpSubtotalCurrency = null;
		}

		membershipSubscriptionCacheModel.addOnSubtotal = getAddOnSubtotal();

		membershipSubscriptionCacheModel.addOnSubtotalCurrency = getAddOnSubtotalCurrency();

		String addOnSubtotalCurrency = membershipSubscriptionCacheModel.addOnSubtotalCurrency;

		if ((addOnSubtotalCurrency != null) &&
				(addOnSubtotalCurrency.length() == 0)) {
			membershipSubscriptionCacheModel.addOnSubtotalCurrency = null;
		}

		membershipSubscriptionCacheModel.tax = getTax();

		membershipSubscriptionCacheModel.comments = getComments();

		String comments = membershipSubscriptionCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			membershipSubscriptionCacheModel.comments = null;
		}

		membershipSubscriptionCacheModel.promotionCode = getPromotionCode();

		String promotionCode = membershipSubscriptionCacheModel.promotionCode;

		if ((promotionCode != null) && (promotionCode.length() == 0)) {
			membershipSubscriptionCacheModel.promotionCode = null;
		}

		Date promotionFrom = getPromotionFrom();

		if (promotionFrom != null) {
			membershipSubscriptionCacheModel.promotionFrom = promotionFrom.getTime();
		}
		else {
			membershipSubscriptionCacheModel.promotionFrom = Long.MIN_VALUE;
		}

		Date promotionTo = getPromotionTo();

		if (promotionTo != null) {
			membershipSubscriptionCacheModel.promotionTo = promotionTo.getTime();
		}
		else {
			membershipSubscriptionCacheModel.promotionTo = Long.MIN_VALUE;
		}

		membershipSubscriptionCacheModel.discount = getDiscount();

		String discount = membershipSubscriptionCacheModel.discount;

		if ((discount != null) && (discount.length() == 0)) {
			membershipSubscriptionCacheModel.discount = null;
		}

		membershipSubscriptionCacheModel.nettotal = getNettotal();

		membershipSubscriptionCacheModel.nettotalCurrency = getNettotalCurrency();

		String nettotalCurrency = membershipSubscriptionCacheModel.nettotalCurrency;

		if ((nettotalCurrency != null) && (nettotalCurrency.length() == 0)) {
			membershipSubscriptionCacheModel.nettotalCurrency = null;
		}

		membershipSubscriptionCacheModel.ppTxnId = getPpTxnId();

		String ppTxnId = membershipSubscriptionCacheModel.ppTxnId;

		if ((ppTxnId != null) && (ppTxnId.length() == 0)) {
			membershipSubscriptionCacheModel.ppTxnId = null;
		}

		membershipSubscriptionCacheModel.ppPaymentStatus = getPpPaymentStatus();

		String ppPaymentStatus = membershipSubscriptionCacheModel.ppPaymentStatus;

		if ((ppPaymentStatus != null) && (ppPaymentStatus.length() == 0)) {
			membershipSubscriptionCacheModel.ppPaymentStatus = null;
		}

		membershipSubscriptionCacheModel.ppPaymentGross = getPpPaymentGross();

		membershipSubscriptionCacheModel.ppReceiverEmail = getPpReceiverEmail();

		String ppReceiverEmail = membershipSubscriptionCacheModel.ppReceiverEmail;

		if ((ppReceiverEmail != null) && (ppReceiverEmail.length() == 0)) {
			membershipSubscriptionCacheModel.ppReceiverEmail = null;
		}

		membershipSubscriptionCacheModel.ppPayerEmail = getPpPayerEmail();

		String ppPayerEmail = membershipSubscriptionCacheModel.ppPayerEmail;

		if ((ppPayerEmail != null) && (ppPayerEmail.length() == 0)) {
			membershipSubscriptionCacheModel.ppPayerEmail = null;
		}

		membershipSubscriptionCacheModel.sendOrderEmail = getSendOrderEmail();

		String sendOrderEmail = membershipSubscriptionCacheModel.sendOrderEmail;

		if ((sendOrderEmail != null) && (sendOrderEmail.length() == 0)) {
			membershipSubscriptionCacheModel.sendOrderEmail = null;
		}

		membershipSubscriptionCacheModel.sendShippingEmail = getSendShippingEmail();

		String sendShippingEmail = membershipSubscriptionCacheModel.sendShippingEmail;

		if ((sendShippingEmail != null) && (sendShippingEmail.length() == 0)) {
			membershipSubscriptionCacheModel.sendShippingEmail = null;
		}

		Date effectiveFromDate = getEffectiveFromDate();

		if (effectiveFromDate != null) {
			membershipSubscriptionCacheModel.effectiveFromDate = effectiveFromDate.getTime();
		}
		else {
			membershipSubscriptionCacheModel.effectiveFromDate = Long.MIN_VALUE;
		}

		Date effectiveToDate = getEffectiveToDate();

		if (effectiveToDate != null) {
			membershipSubscriptionCacheModel.effectiveToDate = effectiveToDate.getTime();
		}
		else {
			membershipSubscriptionCacheModel.effectiveToDate = Long.MIN_VALUE;
		}

		membershipSubscriptionCacheModel.altShipping = getAltShipping();

		membershipSubscriptionCacheModel.shipping = getShipping();

		membershipSubscriptionCacheModel.requiresShipping = getRequiresShipping();

		membershipSubscriptionCacheModel.insure = getInsure();

		membershipSubscriptionCacheModel.insurance = getInsurance();

		membershipSubscriptionCacheModel.billingFirstName = getBillingFirstName();

		String billingFirstName = membershipSubscriptionCacheModel.billingFirstName;

		if ((billingFirstName != null) && (billingFirstName.length() == 0)) {
			membershipSubscriptionCacheModel.billingFirstName = null;
		}

		membershipSubscriptionCacheModel.billingLastName = getBillingLastName();

		String billingLastName = membershipSubscriptionCacheModel.billingLastName;

		if ((billingLastName != null) && (billingLastName.length() == 0)) {
			membershipSubscriptionCacheModel.billingLastName = null;
		}

		membershipSubscriptionCacheModel.billingEmailAddress = getBillingEmailAddress();

		String billingEmailAddress = membershipSubscriptionCacheModel.billingEmailAddress;

		if ((billingEmailAddress != null) &&
				(billingEmailAddress.length() == 0)) {
			membershipSubscriptionCacheModel.billingEmailAddress = null;
		}

		membershipSubscriptionCacheModel.billingCompany = getBillingCompany();

		String billingCompany = membershipSubscriptionCacheModel.billingCompany;

		if ((billingCompany != null) && (billingCompany.length() == 0)) {
			membershipSubscriptionCacheModel.billingCompany = null;
		}

		membershipSubscriptionCacheModel.billingStreet = getBillingStreet();

		String billingStreet = membershipSubscriptionCacheModel.billingStreet;

		if ((billingStreet != null) && (billingStreet.length() == 0)) {
			membershipSubscriptionCacheModel.billingStreet = null;
		}

		membershipSubscriptionCacheModel.billingCity = getBillingCity();

		String billingCity = membershipSubscriptionCacheModel.billingCity;

		if ((billingCity != null) && (billingCity.length() == 0)) {
			membershipSubscriptionCacheModel.billingCity = null;
		}

		membershipSubscriptionCacheModel.billingState = getBillingState();

		String billingState = membershipSubscriptionCacheModel.billingState;

		if ((billingState != null) && (billingState.length() == 0)) {
			membershipSubscriptionCacheModel.billingState = null;
		}

		membershipSubscriptionCacheModel.billingZip = getBillingZip();

		String billingZip = membershipSubscriptionCacheModel.billingZip;

		if ((billingZip != null) && (billingZip.length() == 0)) {
			membershipSubscriptionCacheModel.billingZip = null;
		}

		membershipSubscriptionCacheModel.billingCountry = getBillingCountry();

		String billingCountry = membershipSubscriptionCacheModel.billingCountry;

		if ((billingCountry != null) && (billingCountry.length() == 0)) {
			membershipSubscriptionCacheModel.billingCountry = null;
		}

		membershipSubscriptionCacheModel.billingPhone = getBillingPhone();

		String billingPhone = membershipSubscriptionCacheModel.billingPhone;

		if ((billingPhone != null) && (billingPhone.length() == 0)) {
			membershipSubscriptionCacheModel.billingPhone = null;
		}

		membershipSubscriptionCacheModel.shipToBilling = getShipToBilling();

		membershipSubscriptionCacheModel.shippingFirstName = getShippingFirstName();

		String shippingFirstName = membershipSubscriptionCacheModel.shippingFirstName;

		if ((shippingFirstName != null) && (shippingFirstName.length() == 0)) {
			membershipSubscriptionCacheModel.shippingFirstName = null;
		}

		membershipSubscriptionCacheModel.shippingLastName = getShippingLastName();

		String shippingLastName = membershipSubscriptionCacheModel.shippingLastName;

		if ((shippingLastName != null) && (shippingLastName.length() == 0)) {
			membershipSubscriptionCacheModel.shippingLastName = null;
		}

		membershipSubscriptionCacheModel.shippingEmailAddress = getShippingEmailAddress();

		String shippingEmailAddress = membershipSubscriptionCacheModel.shippingEmailAddress;

		if ((shippingEmailAddress != null) &&
				(shippingEmailAddress.length() == 0)) {
			membershipSubscriptionCacheModel.shippingEmailAddress = null;
		}

		membershipSubscriptionCacheModel.shippingCompany = getShippingCompany();

		String shippingCompany = membershipSubscriptionCacheModel.shippingCompany;

		if ((shippingCompany != null) && (shippingCompany.length() == 0)) {
			membershipSubscriptionCacheModel.shippingCompany = null;
		}

		membershipSubscriptionCacheModel.shippingStreet = getShippingStreet();

		String shippingStreet = membershipSubscriptionCacheModel.shippingStreet;

		if ((shippingStreet != null) && (shippingStreet.length() == 0)) {
			membershipSubscriptionCacheModel.shippingStreet = null;
		}

		membershipSubscriptionCacheModel.shippingCity = getShippingCity();

		String shippingCity = membershipSubscriptionCacheModel.shippingCity;

		if ((shippingCity != null) && (shippingCity.length() == 0)) {
			membershipSubscriptionCacheModel.shippingCity = null;
		}

		membershipSubscriptionCacheModel.shippingState = getShippingState();

		String shippingState = membershipSubscriptionCacheModel.shippingState;

		if ((shippingState != null) && (shippingState.length() == 0)) {
			membershipSubscriptionCacheModel.shippingState = null;
		}

		membershipSubscriptionCacheModel.shippingZip = getShippingZip();

		String shippingZip = membershipSubscriptionCacheModel.shippingZip;

		if ((shippingZip != null) && (shippingZip.length() == 0)) {
			membershipSubscriptionCacheModel.shippingZip = null;
		}

		membershipSubscriptionCacheModel.shippingCountry = getShippingCountry();

		String shippingCountry = membershipSubscriptionCacheModel.shippingCountry;

		if ((shippingCountry != null) && (shippingCountry.length() == 0)) {
			membershipSubscriptionCacheModel.shippingCountry = null;
		}

		membershipSubscriptionCacheModel.shippingPhone = getShippingPhone();

		String shippingPhone = membershipSubscriptionCacheModel.shippingPhone;

		if ((shippingPhone != null) && (shippingPhone.length() == 0)) {
			membershipSubscriptionCacheModel.shippingPhone = null;
		}

		membershipSubscriptionCacheModel.ccName = getCcName();

		String ccName = membershipSubscriptionCacheModel.ccName;

		if ((ccName != null) && (ccName.length() == 0)) {
			membershipSubscriptionCacheModel.ccName = null;
		}

		membershipSubscriptionCacheModel.ccType = getCcType();

		String ccType = membershipSubscriptionCacheModel.ccType;

		if ((ccType != null) && (ccType.length() == 0)) {
			membershipSubscriptionCacheModel.ccType = null;
		}

		membershipSubscriptionCacheModel.ccNumber = getCcNumber();

		String ccNumber = membershipSubscriptionCacheModel.ccNumber;

		if ((ccNumber != null) && (ccNumber.length() == 0)) {
			membershipSubscriptionCacheModel.ccNumber = null;
		}

		membershipSubscriptionCacheModel.ccExpMonth = getCcExpMonth();

		membershipSubscriptionCacheModel.ccExpYear = getCcExpYear();

		membershipSubscriptionCacheModel.ccVerNumber = getCcVerNumber();

		String ccVerNumber = membershipSubscriptionCacheModel.ccVerNumber;

		if ((ccVerNumber != null) && (ccVerNumber.length() == 0)) {
			membershipSubscriptionCacheModel.ccVerNumber = null;
		}

		membershipSubscriptionCacheModel.groupId = getGroupId();

		membershipSubscriptionCacheModel.companyId = getCompanyId();

		membershipSubscriptionCacheModel.userId = getUserId();

		membershipSubscriptionCacheModel.userName = getUserName();

		String userName = membershipSubscriptionCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			membershipSubscriptionCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			membershipSubscriptionCacheModel.createDate = createDate.getTime();
		}
		else {
			membershipSubscriptionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			membershipSubscriptionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			membershipSubscriptionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return membershipSubscriptionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(173);

		sb.append("{msId=");
		sb.append(getMsId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", mporder_1=");
		sb.append(getMporder_1());
		sb.append(", mpId_1=");
		sb.append(getMpId_1());
		sb.append(", mpName_1=");
		sb.append(getMpName_1());
		sb.append(", mpQty_1=");
		sb.append(getMpQty_1());
		sb.append(", mpPrice_1=");
		sb.append(getMpPrice_1());
		sb.append(", mpPriceCurrency_1=");
		sb.append(getMpPriceCurrency_1());
		sb.append(", mporder_2=");
		sb.append(getMporder_2());
		sb.append(", mpId_2=");
		sb.append(getMpId_2());
		sb.append(", mpName_2=");
		sb.append(getMpName_2());
		sb.append(", mpQty_2=");
		sb.append(getMpQty_2());
		sb.append(", mpPrice_2=");
		sb.append(getMpPrice_2());
		sb.append(", mpPriceCurrency_2=");
		sb.append(getMpPriceCurrency_2());
		sb.append(", mporder_3=");
		sb.append(getMporder_3());
		sb.append(", mpId_3=");
		sb.append(getMpId_3());
		sb.append(", mpName_3=");
		sb.append(getMpName_3());
		sb.append(", mpQty_3=");
		sb.append(getMpQty_3());
		sb.append(", mpPrice_3=");
		sb.append(getMpPrice_3());
		sb.append(", mpPriceCurrency_3=");
		sb.append(getMpPriceCurrency_3());
		sb.append(", mporder_4=");
		sb.append(getMporder_4());
		sb.append(", mpId_4=");
		sb.append(getMpId_4());
		sb.append(", mpName_4=");
		sb.append(getMpName_4());
		sb.append(", mpQty_4=");
		sb.append(getMpQty_4());
		sb.append(", mpPrice_4=");
		sb.append(getMpPrice_4());
		sb.append(", mpPriceCurrency_4=");
		sb.append(getMpPriceCurrency_4());
		sb.append(", mpSubtotal=");
		sb.append(getMpSubtotal());
		sb.append(", mpSubtotalCurrency=");
		sb.append(getMpSubtotalCurrency());
		sb.append(", addOnSubtotal=");
		sb.append(getAddOnSubtotal());
		sb.append(", addOnSubtotalCurrency=");
		sb.append(getAddOnSubtotalCurrency());
		sb.append(", tax=");
		sb.append(getTax());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", promotionCode=");
		sb.append(getPromotionCode());
		sb.append(", promotionFrom=");
		sb.append(getPromotionFrom());
		sb.append(", promotionTo=");
		sb.append(getPromotionTo());
		sb.append(", discount=");
		sb.append(getDiscount());
		sb.append(", nettotal=");
		sb.append(getNettotal());
		sb.append(", nettotalCurrency=");
		sb.append(getNettotalCurrency());
		sb.append(", ppTxnId=");
		sb.append(getPpTxnId());
		sb.append(", ppPaymentStatus=");
		sb.append(getPpPaymentStatus());
		sb.append(", ppPaymentGross=");
		sb.append(getPpPaymentGross());
		sb.append(", ppReceiverEmail=");
		sb.append(getPpReceiverEmail());
		sb.append(", ppPayerEmail=");
		sb.append(getPpPayerEmail());
		sb.append(", sendOrderEmail=");
		sb.append(getSendOrderEmail());
		sb.append(", sendShippingEmail=");
		sb.append(getSendShippingEmail());
		sb.append(", effectiveFromDate=");
		sb.append(getEffectiveFromDate());
		sb.append(", effectiveToDate=");
		sb.append(getEffectiveToDate());
		sb.append(", altShipping=");
		sb.append(getAltShipping());
		sb.append(", shipping=");
		sb.append(getShipping());
		sb.append(", requiresShipping=");
		sb.append(getRequiresShipping());
		sb.append(", insure=");
		sb.append(getInsure());
		sb.append(", insurance=");
		sb.append(getInsurance());
		sb.append(", billingFirstName=");
		sb.append(getBillingFirstName());
		sb.append(", billingLastName=");
		sb.append(getBillingLastName());
		sb.append(", billingEmailAddress=");
		sb.append(getBillingEmailAddress());
		sb.append(", billingCompany=");
		sb.append(getBillingCompany());
		sb.append(", billingStreet=");
		sb.append(getBillingStreet());
		sb.append(", billingCity=");
		sb.append(getBillingCity());
		sb.append(", billingState=");
		sb.append(getBillingState());
		sb.append(", billingZip=");
		sb.append(getBillingZip());
		sb.append(", billingCountry=");
		sb.append(getBillingCountry());
		sb.append(", billingPhone=");
		sb.append(getBillingPhone());
		sb.append(", shipToBilling=");
		sb.append(getShipToBilling());
		sb.append(", shippingFirstName=");
		sb.append(getShippingFirstName());
		sb.append(", shippingLastName=");
		sb.append(getShippingLastName());
		sb.append(", shippingEmailAddress=");
		sb.append(getShippingEmailAddress());
		sb.append(", shippingCompany=");
		sb.append(getShippingCompany());
		sb.append(", shippingStreet=");
		sb.append(getShippingStreet());
		sb.append(", shippingCity=");
		sb.append(getShippingCity());
		sb.append(", shippingState=");
		sb.append(getShippingState());
		sb.append(", shippingZip=");
		sb.append(getShippingZip());
		sb.append(", shippingCountry=");
		sb.append(getShippingCountry());
		sb.append(", shippingPhone=");
		sb.append(getShippingPhone());
		sb.append(", ccName=");
		sb.append(getCcName());
		sb.append(", ccType=");
		sb.append(getCcType());
		sb.append(", ccNumber=");
		sb.append(getCcNumber());
		sb.append(", ccExpMonth=");
		sb.append(getCcExpMonth());
		sb.append(", ccExpYear=");
		sb.append(getCcExpYear());
		sb.append(", ccVerNumber=");
		sb.append(getCcVerNumber());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(262);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spservices.model.MembershipSubscription");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>msId</column-name><column-value><![CDATA[");
		sb.append(getMsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mporder_1</column-name><column-value><![CDATA[");
		sb.append(getMporder_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpId_1</column-name><column-value><![CDATA[");
		sb.append(getMpId_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpName_1</column-name><column-value><![CDATA[");
		sb.append(getMpName_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpQty_1</column-name><column-value><![CDATA[");
		sb.append(getMpQty_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPrice_1</column-name><column-value><![CDATA[");
		sb.append(getMpPrice_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPriceCurrency_1</column-name><column-value><![CDATA[");
		sb.append(getMpPriceCurrency_1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mporder_2</column-name><column-value><![CDATA[");
		sb.append(getMporder_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpId_2</column-name><column-value><![CDATA[");
		sb.append(getMpId_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpName_2</column-name><column-value><![CDATA[");
		sb.append(getMpName_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpQty_2</column-name><column-value><![CDATA[");
		sb.append(getMpQty_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPrice_2</column-name><column-value><![CDATA[");
		sb.append(getMpPrice_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPriceCurrency_2</column-name><column-value><![CDATA[");
		sb.append(getMpPriceCurrency_2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mporder_3</column-name><column-value><![CDATA[");
		sb.append(getMporder_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpId_3</column-name><column-value><![CDATA[");
		sb.append(getMpId_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpName_3</column-name><column-value><![CDATA[");
		sb.append(getMpName_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpQty_3</column-name><column-value><![CDATA[");
		sb.append(getMpQty_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPrice_3</column-name><column-value><![CDATA[");
		sb.append(getMpPrice_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPriceCurrency_3</column-name><column-value><![CDATA[");
		sb.append(getMpPriceCurrency_3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mporder_4</column-name><column-value><![CDATA[");
		sb.append(getMporder_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpId_4</column-name><column-value><![CDATA[");
		sb.append(getMpId_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpName_4</column-name><column-value><![CDATA[");
		sb.append(getMpName_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpQty_4</column-name><column-value><![CDATA[");
		sb.append(getMpQty_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPrice_4</column-name><column-value><![CDATA[");
		sb.append(getMpPrice_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpPriceCurrency_4</column-name><column-value><![CDATA[");
		sb.append(getMpPriceCurrency_4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpSubtotal</column-name><column-value><![CDATA[");
		sb.append(getMpSubtotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mpSubtotalCurrency</column-name><column-value><![CDATA[");
		sb.append(getMpSubtotalCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addOnSubtotal</column-name><column-value><![CDATA[");
		sb.append(getAddOnSubtotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addOnSubtotalCurrency</column-name><column-value><![CDATA[");
		sb.append(getAddOnSubtotalCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tax</column-name><column-value><![CDATA[");
		sb.append(getTax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionCode</column-name><column-value><![CDATA[");
		sb.append(getPromotionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionFrom</column-name><column-value><![CDATA[");
		sb.append(getPromotionFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionTo</column-name><column-value><![CDATA[");
		sb.append(getPromotionTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discount</column-name><column-value><![CDATA[");
		sb.append(getDiscount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nettotal</column-name><column-value><![CDATA[");
		sb.append(getNettotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nettotalCurrency</column-name><column-value><![CDATA[");
		sb.append(getNettotalCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ppTxnId</column-name><column-value><![CDATA[");
		sb.append(getPpTxnId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ppPaymentStatus</column-name><column-value><![CDATA[");
		sb.append(getPpPaymentStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ppPaymentGross</column-name><column-value><![CDATA[");
		sb.append(getPpPaymentGross());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ppReceiverEmail</column-name><column-value><![CDATA[");
		sb.append(getPpReceiverEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ppPayerEmail</column-name><column-value><![CDATA[");
		sb.append(getPpPayerEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sendOrderEmail</column-name><column-value><![CDATA[");
		sb.append(getSendOrderEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sendShippingEmail</column-name><column-value><![CDATA[");
		sb.append(getSendShippingEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>effectiveFromDate</column-name><column-value><![CDATA[");
		sb.append(getEffectiveFromDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>effectiveToDate</column-name><column-value><![CDATA[");
		sb.append(getEffectiveToDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>altShipping</column-name><column-value><![CDATA[");
		sb.append(getAltShipping());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shipping</column-name><column-value><![CDATA[");
		sb.append(getShipping());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requiresShipping</column-name><column-value><![CDATA[");
		sb.append(getRequiresShipping());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insure</column-name><column-value><![CDATA[");
		sb.append(getInsure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insurance</column-name><column-value><![CDATA[");
		sb.append(getInsurance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingFirstName</column-name><column-value><![CDATA[");
		sb.append(getBillingFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingLastName</column-name><column-value><![CDATA[");
		sb.append(getBillingLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getBillingEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingCompany</column-name><column-value><![CDATA[");
		sb.append(getBillingCompany());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingStreet</column-name><column-value><![CDATA[");
		sb.append(getBillingStreet());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingCity</column-name><column-value><![CDATA[");
		sb.append(getBillingCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingState</column-name><column-value><![CDATA[");
		sb.append(getBillingState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingZip</column-name><column-value><![CDATA[");
		sb.append(getBillingZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingCountry</column-name><column-value><![CDATA[");
		sb.append(getBillingCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>billingPhone</column-name><column-value><![CDATA[");
		sb.append(getBillingPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shipToBilling</column-name><column-value><![CDATA[");
		sb.append(getShipToBilling());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingFirstName</column-name><column-value><![CDATA[");
		sb.append(getShippingFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingLastName</column-name><column-value><![CDATA[");
		sb.append(getShippingLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getShippingEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingCompany</column-name><column-value><![CDATA[");
		sb.append(getShippingCompany());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingStreet</column-name><column-value><![CDATA[");
		sb.append(getShippingStreet());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingCity</column-name><column-value><![CDATA[");
		sb.append(getShippingCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingState</column-name><column-value><![CDATA[");
		sb.append(getShippingState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingZip</column-name><column-value><![CDATA[");
		sb.append(getShippingZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingCountry</column-name><column-value><![CDATA[");
		sb.append(getShippingCountry());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shippingPhone</column-name><column-value><![CDATA[");
		sb.append(getShippingPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccName</column-name><column-value><![CDATA[");
		sb.append(getCcName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccType</column-name><column-value><![CDATA[");
		sb.append(getCcType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccNumber</column-name><column-value><![CDATA[");
		sb.append(getCcNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccExpMonth</column-name><column-value><![CDATA[");
		sb.append(getCcExpMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccExpYear</column-name><column-value><![CDATA[");
		sb.append(getCcExpYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ccVerNumber</column-name><column-value><![CDATA[");
		sb.append(getCcVerNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MembershipSubscription.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MembershipSubscription.class
		};
	private long _msId;
	private String _name;
	private String _originalName;
	private String _description;
	private String _mporder_1;
	private String _mpId_1;
	private String _originalMpId_1;
	private String _mpName_1;
	private int _mpQty_1;
	private float _mpPrice_1;
	private String _mpPriceCurrency_1;
	private String _mporder_2;
	private String _mpId_2;
	private String _mpName_2;
	private int _mpQty_2;
	private float _mpPrice_2;
	private String _mpPriceCurrency_2;
	private String _mporder_3;
	private String _mpId_3;
	private String _mpName_3;
	private int _mpQty_3;
	private float _mpPrice_3;
	private String _mpPriceCurrency_3;
	private String _mporder_4;
	private String _mpId_4;
	private String _mpName_4;
	private int _mpQty_4;
	private float _mpPrice_4;
	private String _mpPriceCurrency_4;
	private float _mpSubtotal;
	private String _mpSubtotalCurrency;
	private float _addOnSubtotal;
	private String _addOnSubtotalCurrency;
	private float _tax;
	private String _comments;
	private String _promotionCode;
	private Date _promotionFrom;
	private Date _promotionTo;
	private String _discount;
	private float _nettotal;
	private float _originalNettotal;
	private boolean _setOriginalNettotal;
	private String _nettotalCurrency;
	private String _ppTxnId;
	private String _ppPaymentStatus;
	private String _originalPpPaymentStatus;
	private float _ppPaymentGross;
	private String _ppReceiverEmail;
	private String _ppPayerEmail;
	private String _sendOrderEmail;
	private String _sendShippingEmail;
	private Date _effectiveFromDate;
	private Date _effectiveToDate;
	private int _altShipping;
	private double _shipping;
	private boolean _requiresShipping;
	private boolean _insure;
	private double _insurance;
	private String _billingFirstName;
	private String _billingLastName;
	private String _billingEmailAddress;
	private String _billingCompany;
	private String _billingStreet;
	private String _billingCity;
	private String _billingState;
	private String _billingZip;
	private String _billingCountry;
	private String _billingPhone;
	private boolean _shipToBilling;
	private String _shippingFirstName;
	private String _shippingLastName;
	private String _shippingEmailAddress;
	private String _originalShippingEmailAddress;
	private String _shippingCompany;
	private String _shippingStreet;
	private String _shippingCity;
	private String _shippingState;
	private String _shippingZip;
	private String _shippingCountry;
	private String _shippingPhone;
	private String _ccName;
	private String _ccType;
	private String _ccNumber;
	private int _ccExpMonth;
	private int _ccExpYear;
	private String _ccVerNumber;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private String _originalUserName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private MembershipSubscription _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spscheduler.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spscheduler.model.SPJobEntry;
import com.sambaash.platform.srv.spscheduler.model.SPJobEntryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPJobEntry service. Represents a row in the &quot;SP_JOB_ENTRY&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spscheduler.model.SPJobEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPJobEntryImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPJobEntryImpl
 * @see com.sambaash.platform.srv.spscheduler.model.SPJobEntry
 * @see com.sambaash.platform.srv.spscheduler.model.SPJobEntryModel
 * @generated
 */
public class SPJobEntryModelImpl extends BaseModelImpl<SPJobEntry>
	implements SPJobEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p job entry model instance should use the {@link com.sambaash.platform.srv.spscheduler.model.SPJobEntry} interface instead.
	 */
	public static final String TABLE_NAME = "SP_JOB_ENTRY";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spJobEntryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "jobName", Types.VARCHAR },
			{ "jobClass", Types.VARCHAR },
			{ "portletId", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "statusMsg", Types.VARCHAR },
			{ "cronExpression", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SP_JOB_ENTRY (uuid_ VARCHAR(75) null,spJobEntryId BIGINT(20) not null primary key,groupId BIGINT(20),jobName VARCHAR(100) null,jobClass VARCHAR(200) null,portletId VARCHAR(200) null,status INTEGER,statusMsg VARCHAR(500) null,cronExpression VARCHAR(75) null,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SP_JOB_ENTRY";
	public static final String ORDER_BY_JPQL = " ORDER BY spJobEntry.spJobEntryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SP_JOB_ENTRY.spJobEntryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spscheduler.model.SPJobEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spscheduler.model.SPJobEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spscheduler.model.SPJobEntry"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long JOBCLASS_COLUMN_BITMASK = 4L;
	public static long JOBNAME_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;
	public static long SPJOBENTRYID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spscheduler.model.SPJobEntry"));

	public SPJobEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spJobEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpJobEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spJobEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPJobEntry.class;
	}

	@Override
	public String getModelClassName() {
		return SPJobEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spJobEntryId", getSpJobEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("jobName", getJobName());
		attributes.put("jobClass", getJobClass());
		attributes.put("portletId", getPortletId());
		attributes.put("status", getStatus());
		attributes.put("statusMsg", getStatusMsg());
		attributes.put("cronExpression", getCronExpression());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spJobEntryId = (Long)attributes.get("spJobEntryId");

		if (spJobEntryId != null) {
			setSpJobEntryId(spJobEntryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String jobName = (String)attributes.get("jobName");

		if (jobName != null) {
			setJobName(jobName);
		}

		String jobClass = (String)attributes.get("jobClass");

		if (jobClass != null) {
			setJobClass(jobClass);
		}

		String portletId = (String)attributes.get("portletId");

		if (portletId != null) {
			setPortletId(portletId);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String statusMsg = (String)attributes.get("statusMsg");

		if (statusMsg != null) {
			setStatusMsg(statusMsg);
		}

		String cronExpression = (String)attributes.get("cronExpression");

		if (cronExpression != null) {
			setCronExpression(cronExpression);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpJobEntryId() {
		return _spJobEntryId;
	}

	@Override
	public void setSpJobEntryId(long spJobEntryId) {
		_spJobEntryId = spJobEntryId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public String getJobName() {
		if (_jobName == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobName;
		}
	}

	@Override
	public void setJobName(String jobName) {
		_columnBitmask |= JOBNAME_COLUMN_BITMASK;

		if (_originalJobName == null) {
			_originalJobName = _jobName;
		}

		_jobName = jobName;
	}

	public String getOriginalJobName() {
		return GetterUtil.getString(_originalJobName);
	}

	@Override
	public String getJobClass() {
		if (_jobClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobClass;
		}
	}

	@Override
	public void setJobClass(String jobClass) {
		_columnBitmask |= JOBCLASS_COLUMN_BITMASK;

		if (_originalJobClass == null) {
			_originalJobClass = _jobClass;
		}

		_jobClass = jobClass;
	}

	public String getOriginalJobClass() {
		return GetterUtil.getString(_originalJobClass);
	}

	@Override
	public String getPortletId() {
		if (_portletId == null) {
			return StringPool.BLANK;
		}
		else {
			return _portletId;
		}
	}

	@Override
	public void setPortletId(String portletId) {
		_portletId = portletId;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@Override
	public String getStatusMsg() {
		if (_statusMsg == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusMsg;
		}
	}

	@Override
	public void setStatusMsg(String statusMsg) {
		_statusMsg = statusMsg;
	}

	@Override
	public String getCronExpression() {
		if (_cronExpression == null) {
			return StringPool.BLANK;
		}
		else {
			return _cronExpression;
		}
	}

	@Override
	public void setCronExpression(String cronExpression) {
		_cronExpression = cronExpression;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SPJobEntry.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPJobEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPJobEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPJobEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPJobEntryImpl spJobEntryImpl = new SPJobEntryImpl();

		spJobEntryImpl.setUuid(getUuid());
		spJobEntryImpl.setSpJobEntryId(getSpJobEntryId());
		spJobEntryImpl.setGroupId(getGroupId());
		spJobEntryImpl.setJobName(getJobName());
		spJobEntryImpl.setJobClass(getJobClass());
		spJobEntryImpl.setPortletId(getPortletId());
		spJobEntryImpl.setStatus(getStatus());
		spJobEntryImpl.setStatusMsg(getStatusMsg());
		spJobEntryImpl.setCronExpression(getCronExpression());
		spJobEntryImpl.setCompanyId(getCompanyId());
		spJobEntryImpl.setUserId(getUserId());
		spJobEntryImpl.setUserName(getUserName());
		spJobEntryImpl.setCreateDate(getCreateDate());
		spJobEntryImpl.setModifiedDate(getModifiedDate());

		spJobEntryImpl.resetOriginalValues();

		return spJobEntryImpl;
	}

	@Override
	public int compareTo(SPJobEntry spJobEntry) {
		long primaryKey = spJobEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPJobEntry)) {
			return false;
		}

		SPJobEntry spJobEntry = (SPJobEntry)obj;

		long primaryKey = spJobEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPJobEntryModelImpl spJobEntryModelImpl = this;

		spJobEntryModelImpl._originalUuid = spJobEntryModelImpl._uuid;

		spJobEntryModelImpl._originalGroupId = spJobEntryModelImpl._groupId;

		spJobEntryModelImpl._setOriginalGroupId = false;

		spJobEntryModelImpl._originalJobName = spJobEntryModelImpl._jobName;

		spJobEntryModelImpl._originalJobClass = spJobEntryModelImpl._jobClass;

		spJobEntryModelImpl._originalCompanyId = spJobEntryModelImpl._companyId;

		spJobEntryModelImpl._setOriginalCompanyId = false;

		spJobEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPJobEntry> toCacheModel() {
		SPJobEntryCacheModel spJobEntryCacheModel = new SPJobEntryCacheModel();

		spJobEntryCacheModel.uuid = getUuid();

		String uuid = spJobEntryCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spJobEntryCacheModel.uuid = null;
		}

		spJobEntryCacheModel.spJobEntryId = getSpJobEntryId();

		spJobEntryCacheModel.groupId = getGroupId();

		spJobEntryCacheModel.jobName = getJobName();

		String jobName = spJobEntryCacheModel.jobName;

		if ((jobName != null) && (jobName.length() == 0)) {
			spJobEntryCacheModel.jobName = null;
		}

		spJobEntryCacheModel.jobClass = getJobClass();

		String jobClass = spJobEntryCacheModel.jobClass;

		if ((jobClass != null) && (jobClass.length() == 0)) {
			spJobEntryCacheModel.jobClass = null;
		}

		spJobEntryCacheModel.portletId = getPortletId();

		String portletId = spJobEntryCacheModel.portletId;

		if ((portletId != null) && (portletId.length() == 0)) {
			spJobEntryCacheModel.portletId = null;
		}

		spJobEntryCacheModel.status = getStatus();

		spJobEntryCacheModel.statusMsg = getStatusMsg();

		String statusMsg = spJobEntryCacheModel.statusMsg;

		if ((statusMsg != null) && (statusMsg.length() == 0)) {
			spJobEntryCacheModel.statusMsg = null;
		}

		spJobEntryCacheModel.cronExpression = getCronExpression();

		String cronExpression = spJobEntryCacheModel.cronExpression;

		if ((cronExpression != null) && (cronExpression.length() == 0)) {
			spJobEntryCacheModel.cronExpression = null;
		}

		spJobEntryCacheModel.companyId = getCompanyId();

		spJobEntryCacheModel.userId = getUserId();

		spJobEntryCacheModel.userName = getUserName();

		String userName = spJobEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spJobEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spJobEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			spJobEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spJobEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spJobEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return spJobEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spJobEntryId=");
		sb.append(getSpJobEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", jobName=");
		sb.append(getJobName());
		sb.append(", jobClass=");
		sb.append(getJobClass());
		sb.append(", portletId=");
		sb.append(getPortletId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusMsg=");
		sb.append(getStatusMsg());
		sb.append(", cronExpression=");
		sb.append(getCronExpression());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spscheduler.model.SPJobEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spJobEntryId</column-name><column-value><![CDATA[");
		sb.append(getSpJobEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobName</column-name><column-value><![CDATA[");
		sb.append(getJobName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobClass</column-name><column-value><![CDATA[");
		sb.append(getJobClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portletId</column-name><column-value><![CDATA[");
		sb.append(getPortletId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusMsg</column-name><column-value><![CDATA[");
		sb.append(getStatusMsg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cronExpression</column-name><column-value><![CDATA[");
		sb.append(getCronExpression());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPJobEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPJobEntry.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spJobEntryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _jobName;
	private String _originalJobName;
	private String _jobClass;
	private String _originalJobClass;
	private String _portletId;
	private int _status;
	private String _statusMsg;
	private String _cronExpression;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private SPJobEntry _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.startupprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.startupprofile.model.SPATOContacts;
import com.sambaash.platform.srv.startupprofile.model.SPATOContactsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPATOContacts service. Represents a row in the &quot;SPATOContacts&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.startupprofile.model.SPATOContactsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPATOContactsImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPATOContactsImpl
 * @see com.sambaash.platform.srv.startupprofile.model.SPATOContacts
 * @see com.sambaash.platform.srv.startupprofile.model.SPATOContactsModel
 * @generated
 */
public class SPATOContactsModelImpl extends BaseModelImpl<SPATOContacts>
	implements SPATOContactsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p a t o contacts model instance should use the {@link com.sambaash.platform.srv.startupprofile.model.SPATOContacts} interface instead.
	 */
	public static final String TABLE_NAME = "SPATOContacts";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spATOContactId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "organizationId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "primaryPrincipalUserId", Types.VARCHAR },
			{ "secondaryPrincipalUserId", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPATOContacts (spATOContactId BIGINT(20) not null primary key,groupId BIGINT(20),organizationId BIGINT(20),userId BIGINT(20),firstName VARCHAR(75) null,lastName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,primaryPrincipalUserId VARCHAR(75) null,secondaryPrincipalUserId VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPATOContacts";
	public static final String ORDER_BY_JPQL = " ORDER BY spatoContacts.spATOContactId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPATOContacts.spATOContactId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.startupprofile.model.SPATOContacts"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.startupprofile.model.SPATOContacts"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.startupprofile.model.SPATOContacts"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long PRIMARYPRINCIPALUSERID_COLUMN_BITMASK = 2L;
	public static long SECONDARYPRINCIPALUSERID_COLUMN_BITMASK = 4L;
	public static long SPATOCONTACTID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.startupprofile.model.SPATOContacts"));

	public SPATOContactsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spATOContactId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpATOContactId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spATOContactId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPATOContacts.class;
	}

	@Override
	public String getModelClassName() {
		return SPATOContacts.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spATOContactId", getSpATOContactId());
		attributes.put("groupId", getGroupId());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("userId", getUserId());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("primaryPrincipalUserId", getPrimaryPrincipalUserId());
		attributes.put("secondaryPrincipalUserId", getSecondaryPrincipalUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spATOContactId = (Long)attributes.get("spATOContactId");

		if (spATOContactId != null) {
			setSpATOContactId(spATOContactId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String primaryPrincipalUserId = (String)attributes.get(
				"primaryPrincipalUserId");

		if (primaryPrincipalUserId != null) {
			setPrimaryPrincipalUserId(primaryPrincipalUserId);
		}

		String secondaryPrincipalUserId = (String)attributes.get(
				"secondaryPrincipalUserId");

		if (secondaryPrincipalUserId != null) {
			setSecondaryPrincipalUserId(secondaryPrincipalUserId);
		}
	}

	@Override
	public long getSpATOContactId() {
		return _spATOContactId;
	}

	@Override
	public void setSpATOContactId(long spATOContactId) {
		_spATOContactId = spATOContactId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getPrimaryPrincipalUserId() {
		if (_primaryPrincipalUserId == null) {
			return StringPool.BLANK;
		}
		else {
			return _primaryPrincipalUserId;
		}
	}

	@Override
	public void setPrimaryPrincipalUserId(String primaryPrincipalUserId) {
		_columnBitmask |= PRIMARYPRINCIPALUSERID_COLUMN_BITMASK;

		if (_originalPrimaryPrincipalUserId == null) {
			_originalPrimaryPrincipalUserId = _primaryPrincipalUserId;
		}

		_primaryPrincipalUserId = primaryPrincipalUserId;
	}

	public String getOriginalPrimaryPrincipalUserId() {
		return GetterUtil.getString(_originalPrimaryPrincipalUserId);
	}

	@Override
	public String getSecondaryPrincipalUserId() {
		if (_secondaryPrincipalUserId == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondaryPrincipalUserId;
		}
	}

	@Override
	public void setSecondaryPrincipalUserId(String secondaryPrincipalUserId) {
		_columnBitmask |= SECONDARYPRINCIPALUSERID_COLUMN_BITMASK;

		if (_originalSecondaryPrincipalUserId == null) {
			_originalSecondaryPrincipalUserId = _secondaryPrincipalUserId;
		}

		_secondaryPrincipalUserId = secondaryPrincipalUserId;
	}

	public String getOriginalSecondaryPrincipalUserId() {
		return GetterUtil.getString(_originalSecondaryPrincipalUserId);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SPATOContacts.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPATOContacts toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPATOContacts)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPATOContactsImpl spatoContactsImpl = new SPATOContactsImpl();

		spatoContactsImpl.setSpATOContactId(getSpATOContactId());
		spatoContactsImpl.setGroupId(getGroupId());
		spatoContactsImpl.setOrganizationId(getOrganizationId());
		spatoContactsImpl.setUserId(getUserId());
		spatoContactsImpl.setFirstName(getFirstName());
		spatoContactsImpl.setLastName(getLastName());
		spatoContactsImpl.setCreateDate(getCreateDate());
		spatoContactsImpl.setModifiedDate(getModifiedDate());
		spatoContactsImpl.setPrimaryPrincipalUserId(getPrimaryPrincipalUserId());
		spatoContactsImpl.setSecondaryPrincipalUserId(getSecondaryPrincipalUserId());

		spatoContactsImpl.resetOriginalValues();

		return spatoContactsImpl;
	}

	@Override
	public int compareTo(SPATOContacts spatoContacts) {
		long primaryKey = spatoContacts.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPATOContacts)) {
			return false;
		}

		SPATOContacts spatoContacts = (SPATOContacts)obj;

		long primaryKey = spatoContacts.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPATOContactsModelImpl spatoContactsModelImpl = this;

		spatoContactsModelImpl._originalOrganizationId = spatoContactsModelImpl._organizationId;

		spatoContactsModelImpl._setOriginalOrganizationId = false;

		spatoContactsModelImpl._originalPrimaryPrincipalUserId = spatoContactsModelImpl._primaryPrincipalUserId;

		spatoContactsModelImpl._originalSecondaryPrincipalUserId = spatoContactsModelImpl._secondaryPrincipalUserId;

		spatoContactsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPATOContacts> toCacheModel() {
		SPATOContactsCacheModel spatoContactsCacheModel = new SPATOContactsCacheModel();

		spatoContactsCacheModel.spATOContactId = getSpATOContactId();

		spatoContactsCacheModel.groupId = getGroupId();

		spatoContactsCacheModel.organizationId = getOrganizationId();

		spatoContactsCacheModel.userId = getUserId();

		spatoContactsCacheModel.firstName = getFirstName();

		String firstName = spatoContactsCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			spatoContactsCacheModel.firstName = null;
		}

		spatoContactsCacheModel.lastName = getLastName();

		String lastName = spatoContactsCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			spatoContactsCacheModel.lastName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spatoContactsCacheModel.createDate = createDate.getTime();
		}
		else {
			spatoContactsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spatoContactsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spatoContactsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spatoContactsCacheModel.primaryPrincipalUserId = getPrimaryPrincipalUserId();

		String primaryPrincipalUserId = spatoContactsCacheModel.primaryPrincipalUserId;

		if ((primaryPrincipalUserId != null) &&
				(primaryPrincipalUserId.length() == 0)) {
			spatoContactsCacheModel.primaryPrincipalUserId = null;
		}

		spatoContactsCacheModel.secondaryPrincipalUserId = getSecondaryPrincipalUserId();

		String secondaryPrincipalUserId = spatoContactsCacheModel.secondaryPrincipalUserId;

		if ((secondaryPrincipalUserId != null) &&
				(secondaryPrincipalUserId.length() == 0)) {
			spatoContactsCacheModel.secondaryPrincipalUserId = null;
		}

		return spatoContactsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{spATOContactId=");
		sb.append(getSpATOContactId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", primaryPrincipalUserId=");
		sb.append(getPrimaryPrincipalUserId());
		sb.append(", secondaryPrincipalUserId=");
		sb.append(getSecondaryPrincipalUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.startupprofile.model.SPATOContacts");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spATOContactId</column-name><column-value><![CDATA[");
		sb.append(getSpATOContactId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>primaryPrincipalUserId</column-name><column-value><![CDATA[");
		sb.append(getPrimaryPrincipalUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondaryPrincipalUserId</column-name><column-value><![CDATA[");
		sb.append(getSecondaryPrincipalUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPATOContacts.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPATOContacts.class
		};
	private long _spATOContactId;
	private long _groupId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private long _userId;
	private String _userUuid;
	private String _firstName;
	private String _lastName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _primaryPrincipalUserId;
	private String _originalPrimaryPrincipalUserId;
	private String _secondaryPrincipalUserId;
	private String _originalSecondaryPrincipalUserId;
	private long _columnBitmask;
	private SPATOContacts _escapedModel;
}
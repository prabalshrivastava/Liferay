/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.startupprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.startupprofile.model.Organization;
import com.sambaash.platform.srv.startupprofile.model.OrganizationModel;
import com.sambaash.platform.srv.startupprofile.model.OrganizationSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Organization service. Represents a row in the &quot;SPOrganization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.startupprofile.model.OrganizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OrganizationImpl}.
 * </p>
 *
 * @author pradeep
 * @see OrganizationImpl
 * @see com.sambaash.platform.srv.startupprofile.model.Organization
 * @see com.sambaash.platform.srv.startupprofile.model.OrganizationModel
 * @generated
 */
@JSON(strict = true)
public class OrganizationModelImpl extends BaseModelImpl<Organization>
	implements OrganizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a organization model instance should use the {@link com.sambaash.platform.srv.startupprofile.model.Organization} interface instead.
	 */
	public static final String TABLE_NAME = "SPOrganization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "organizationId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "corporateCode", Types.VARCHAR },
			{ "corporateType", Types.VARCHAR },
			{ "corporateCategory", Types.VARCHAR },
			{ "apiPath", Types.VARCHAR },
			{ "categories", Types.VARCHAR },
			{ "foundedOn", Types.VARCHAR },
			{ "noOfEmployees", Types.INTEGER },
			{ "emailId", Types.VARCHAR },
			{ "website", Types.VARCHAR },
			{ "facebook", Types.VARCHAR },
			{ "twitter", Types.VARCHAR },
			{ "linkedIn", Types.VARCHAR },
			{ "crunchbase", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "totalFunds", Types.VARCHAR },
			{ "uen", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "shortPitch", Types.VARCHAR },
			{ "lifecycleStage", Types.VARCHAR },
			{ "capitalRaised", Types.VARCHAR },
			{ "isIncorporated", Types.BOOLEAN },
			{ "stockSymbol", Types.VARCHAR },
			{ "imageUrl", Types.VARCHAR },
			{ "videos", Types.VARCHAR },
			{ "profileOutline", Types.VARCHAR },
			{ "raisingFunds", Types.VARCHAR },
			{ "extras", Types.VARCHAR },
			{ "uniqueDesc", Types.VARCHAR },
			{ "links", Types.VARCHAR },
			{ "isBaseOrg", Types.BOOLEAN },
			{ "completeness", Types.BOOLEAN },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "active_", Types.BOOLEAN },
			{ "logoId", Types.BIGINT },
			{ "methodologyType", Types.BIGINT },
			{ "methodologySubType", Types.BIGINT },
			{ "stage", Types.INTEGER },
			{ "feedback", Types.VARCHAR },
			{ "videoLinks", Types.VARCHAR },
			{ "projectsWorkedOn", Types.VARCHAR },
			{ "showInBlackbook", Types.BOOLEAN },
			{ "faxNumber", Types.VARCHAR },
			{ "contactName", Types.VARCHAR },
			{ "contactDesignation", Types.VARCHAR },
			{ "pipelineStatus", Types.INTEGER },
			{ "businessDevManager", Types.INTEGER },
			{ "prevBusinessDevManager", Types.INTEGER },
			{ "isATO", Types.BOOLEAN },
			{ "approvalDate", Types.TIMESTAMP },
			{ "status", Types.INTEGER },
			{ "listedCo", Types.VARCHAR },
			{ "noOfPotentialCandidates", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPOrganization (uuid_ VARCHAR(75) null,organizationId BIGINT(20) not null primary key,name VARCHAR(100) null,corporateCode VARCHAR(75) null,corporateType VARCHAR(75) null,corporateCategory VARCHAR(75) null,apiPath VARCHAR(120) null,categories VARCHAR(200) null,foundedOn VARCHAR(15) null,noOfEmployees INTEGER,emailId VARCHAR(200) null,website VARCHAR(450) null,facebook VARCHAR(450) null,twitter VARCHAR(450) null,linkedIn VARCHAR(450) null,crunchbase VARCHAR(450) null,mobile VARCHAR(25) null,totalFunds VARCHAR(100) null,uen VARCHAR(75) null,description LONGTEXT null,shortPitch LONGTEXT null,lifecycleStage VARCHAR(20) null,capitalRaised VARCHAR(20) null,isIncorporated BOOLEAN,stockSymbol VARCHAR(20) null,imageUrl VARCHAR(200) null,videos LONGTEXT null,profileOutline LONGTEXT null,raisingFunds VARCHAR(20) null,extras LONGTEXT null,uniqueDesc LONGTEXT null,links VARCHAR(1000) null,isBaseOrg BOOLEAN,completeness BOOLEAN,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,active_ BOOLEAN,logoId BIGINT(20),methodologyType BIGINT(20),methodologySubType BIGINT(20),stage INTEGER,feedback LONGTEXT null,videoLinks LONGTEXT null,projectsWorkedOn LONGTEXT null,showInBlackbook BOOLEAN,faxNumber VARCHAR(75) null,contactName VARCHAR(75) null,contactDesignation VARCHAR(75) null,pipelineStatus INTEGER,businessDevManager INTEGER,prevBusinessDevManager INTEGER,isATO BOOLEAN,approvalDate DATETIME null,status INTEGER,listedCo VARCHAR(75) null,noOfPotentialCandidates BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPOrganization";
	public static final String ORDER_BY_JPQL = " ORDER BY organization.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPOrganization.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.startupprofile.model.Organization"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.startupprofile.model.Organization"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.startupprofile.model.Organization"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long ISATO_COLUMN_BITMASK = 8L;
	public static long ISBASEORG_COLUMN_BITMASK = 16L;
	public static long NAME_COLUMN_BITMASK = 32L;
	public static long UEN_COLUMN_BITMASK = 64L;
	public static long USERID_COLUMN_BITMASK = 128L;
	public static long UUID_COLUMN_BITMASK = 256L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Organization toModel(OrganizationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Organization model = new OrganizationImpl();

		model.setUuid(soapModel.getUuid());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setName(soapModel.getName());
		model.setCorporateCode(soapModel.getCorporateCode());
		model.setCorporateType(soapModel.getCorporateType());
		model.setCorporateCategory(soapModel.getCorporateCategory());
		model.setApiPath(soapModel.getApiPath());
		model.setCategories(soapModel.getCategories());
		model.setFoundedOn(soapModel.getFoundedOn());
		model.setNoOfEmployees(soapModel.getNoOfEmployees());
		model.setEmailId(soapModel.getEmailId());
		model.setWebsite(soapModel.getWebsite());
		model.setFacebook(soapModel.getFacebook());
		model.setTwitter(soapModel.getTwitter());
		model.setLinkedIn(soapModel.getLinkedIn());
		model.setCrunchbase(soapModel.getCrunchbase());
		model.setMobile(soapModel.getMobile());
		model.setTotalFunds(soapModel.getTotalFunds());
		model.setUen(soapModel.getUen());
		model.setDescription(soapModel.getDescription());
		model.setShortPitch(soapModel.getShortPitch());
		model.setLifecycleStage(soapModel.getLifecycleStage());
		model.setCapitalRaised(soapModel.getCapitalRaised());
		model.setIsIncorporated(soapModel.getIsIncorporated());
		model.setStockSymbol(soapModel.getStockSymbol());
		model.setImageUrl(soapModel.getImageUrl());
		model.setVideos(soapModel.getVideos());
		model.setProfileOutline(soapModel.getProfileOutline());
		model.setRaisingFunds(soapModel.getRaisingFunds());
		model.setExtras(soapModel.getExtras());
		model.setUniqueDesc(soapModel.getUniqueDesc());
		model.setLinks(soapModel.getLinks());
		model.setIsBaseOrg(soapModel.getIsBaseOrg());
		model.setCompleteness(soapModel.getCompleteness());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setActive(soapModel.getActive());
		model.setLogoId(soapModel.getLogoId());
		model.setMethodologyType(soapModel.getMethodologyType());
		model.setMethodologySubType(soapModel.getMethodologySubType());
		model.setStage(soapModel.getStage());
		model.setFeedback(soapModel.getFeedback());
		model.setVideoLinks(soapModel.getVideoLinks());
		model.setProjectsWorkedOn(soapModel.getProjectsWorkedOn());
		model.setShowInBlackbook(soapModel.getShowInBlackbook());
		model.setFaxNumber(soapModel.getFaxNumber());
		model.setContactName(soapModel.getContactName());
		model.setContactDesignation(soapModel.getContactDesignation());
		model.setPipelineStatus(soapModel.getPipelineStatus());
		model.setBusinessDevManager(soapModel.getBusinessDevManager());
		model.setPrevBusinessDevManager(soapModel.getPrevBusinessDevManager());
		model.setIsATO(soapModel.getIsATO());
		model.setApprovalDate(soapModel.getApprovalDate());
		model.setStatus(soapModel.getStatus());
		model.setListedCo(soapModel.getListedCo());
		model.setNoOfPotentialCandidates(soapModel.getNoOfPotentialCandidates());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Organization> toModels(OrganizationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Organization> models = new ArrayList<Organization>(soapModels.length);

		for (OrganizationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.startupprofile.model.Organization"));

	public OrganizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _organizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Organization.class;
	}

	@Override
	public String getModelClassName() {
		return Organization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("name", getName());
		attributes.put("corporateCode", getCorporateCode());
		attributes.put("corporateType", getCorporateType());
		attributes.put("corporateCategory", getCorporateCategory());
		attributes.put("apiPath", getApiPath());
		attributes.put("categories", getCategories());
		attributes.put("foundedOn", getFoundedOn());
		attributes.put("noOfEmployees", getNoOfEmployees());
		attributes.put("emailId", getEmailId());
		attributes.put("website", getWebsite());
		attributes.put("facebook", getFacebook());
		attributes.put("twitter", getTwitter());
		attributes.put("linkedIn", getLinkedIn());
		attributes.put("crunchbase", getCrunchbase());
		attributes.put("mobile", getMobile());
		attributes.put("totalFunds", getTotalFunds());
		attributes.put("uen", getUen());
		attributes.put("description", getDescription());
		attributes.put("shortPitch", getShortPitch());
		attributes.put("lifecycleStage", getLifecycleStage());
		attributes.put("capitalRaised", getCapitalRaised());
		attributes.put("isIncorporated", getIsIncorporated());
		attributes.put("stockSymbol", getStockSymbol());
		attributes.put("imageUrl", getImageUrl());
		attributes.put("videos", getVideos());
		attributes.put("profileOutline", getProfileOutline());
		attributes.put("raisingFunds", getRaisingFunds());
		attributes.put("extras", getExtras());
		attributes.put("uniqueDesc", getUniqueDesc());
		attributes.put("links", getLinks());
		attributes.put("isBaseOrg", getIsBaseOrg());
		attributes.put("completeness", getCompleteness());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("active", getActive());
		attributes.put("logoId", getLogoId());
		attributes.put("methodologyType", getMethodologyType());
		attributes.put("methodologySubType", getMethodologySubType());
		attributes.put("stage", getStage());
		attributes.put("feedback", getFeedback());
		attributes.put("videoLinks", getVideoLinks());
		attributes.put("projectsWorkedOn", getProjectsWorkedOn());
		attributes.put("showInBlackbook", getShowInBlackbook());
		attributes.put("faxNumber", getFaxNumber());
		attributes.put("contactName", getContactName());
		attributes.put("contactDesignation", getContactDesignation());
		attributes.put("pipelineStatus", getPipelineStatus());
		attributes.put("businessDevManager", getBusinessDevManager());
		attributes.put("prevBusinessDevManager", getPrevBusinessDevManager());
		attributes.put("isATO", getIsATO());
		attributes.put("approvalDate", getApprovalDate());
		attributes.put("status", getStatus());
		attributes.put("listedCo", getListedCo());
		attributes.put("noOfPotentialCandidates", getNoOfPotentialCandidates());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String corporateCode = (String)attributes.get("corporateCode");

		if (corporateCode != null) {
			setCorporateCode(corporateCode);
		}

		String corporateType = (String)attributes.get("corporateType");

		if (corporateType != null) {
			setCorporateType(corporateType);
		}

		String corporateCategory = (String)attributes.get("corporateCategory");

		if (corporateCategory != null) {
			setCorporateCategory(corporateCategory);
		}

		String apiPath = (String)attributes.get("apiPath");

		if (apiPath != null) {
			setApiPath(apiPath);
		}

		String categories = (String)attributes.get("categories");

		if (categories != null) {
			setCategories(categories);
		}

		String foundedOn = (String)attributes.get("foundedOn");

		if (foundedOn != null) {
			setFoundedOn(foundedOn);
		}

		Integer noOfEmployees = (Integer)attributes.get("noOfEmployees");

		if (noOfEmployees != null) {
			setNoOfEmployees(noOfEmployees);
		}

		String emailId = (String)attributes.get("emailId");

		if (emailId != null) {
			setEmailId(emailId);
		}

		String website = (String)attributes.get("website");

		if (website != null) {
			setWebsite(website);
		}

		String facebook = (String)attributes.get("facebook");

		if (facebook != null) {
			setFacebook(facebook);
		}

		String twitter = (String)attributes.get("twitter");

		if (twitter != null) {
			setTwitter(twitter);
		}

		String linkedIn = (String)attributes.get("linkedIn");

		if (linkedIn != null) {
			setLinkedIn(linkedIn);
		}

		String crunchbase = (String)attributes.get("crunchbase");

		if (crunchbase != null) {
			setCrunchbase(crunchbase);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String totalFunds = (String)attributes.get("totalFunds");

		if (totalFunds != null) {
			setTotalFunds(totalFunds);
		}

		String uen = (String)attributes.get("uen");

		if (uen != null) {
			setUen(uen);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String shortPitch = (String)attributes.get("shortPitch");

		if (shortPitch != null) {
			setShortPitch(shortPitch);
		}

		String lifecycleStage = (String)attributes.get("lifecycleStage");

		if (lifecycleStage != null) {
			setLifecycleStage(lifecycleStage);
		}

		String capitalRaised = (String)attributes.get("capitalRaised");

		if (capitalRaised != null) {
			setCapitalRaised(capitalRaised);
		}

		Boolean isIncorporated = (Boolean)attributes.get("isIncorporated");

		if (isIncorporated != null) {
			setIsIncorporated(isIncorporated);
		}

		String stockSymbol = (String)attributes.get("stockSymbol");

		if (stockSymbol != null) {
			setStockSymbol(stockSymbol);
		}

		String imageUrl = (String)attributes.get("imageUrl");

		if (imageUrl != null) {
			setImageUrl(imageUrl);
		}

		String videos = (String)attributes.get("videos");

		if (videos != null) {
			setVideos(videos);
		}

		String profileOutline = (String)attributes.get("profileOutline");

		if (profileOutline != null) {
			setProfileOutline(profileOutline);
		}

		String raisingFunds = (String)attributes.get("raisingFunds");

		if (raisingFunds != null) {
			setRaisingFunds(raisingFunds);
		}

		String extras = (String)attributes.get("extras");

		if (extras != null) {
			setExtras(extras);
		}

		String uniqueDesc = (String)attributes.get("uniqueDesc");

		if (uniqueDesc != null) {
			setUniqueDesc(uniqueDesc);
		}

		String links = (String)attributes.get("links");

		if (links != null) {
			setLinks(links);
		}

		Boolean isBaseOrg = (Boolean)attributes.get("isBaseOrg");

		if (isBaseOrg != null) {
			setIsBaseOrg(isBaseOrg);
		}

		Boolean completeness = (Boolean)attributes.get("completeness");

		if (completeness != null) {
			setCompleteness(completeness);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Long logoId = (Long)attributes.get("logoId");

		if (logoId != null) {
			setLogoId(logoId);
		}

		Long methodologyType = (Long)attributes.get("methodologyType");

		if (methodologyType != null) {
			setMethodologyType(methodologyType);
		}

		Long methodologySubType = (Long)attributes.get("methodologySubType");

		if (methodologySubType != null) {
			setMethodologySubType(methodologySubType);
		}

		Integer stage = (Integer)attributes.get("stage");

		if (stage != null) {
			setStage(stage);
		}

		String feedback = (String)attributes.get("feedback");

		if (feedback != null) {
			setFeedback(feedback);
		}

		String videoLinks = (String)attributes.get("videoLinks");

		if (videoLinks != null) {
			setVideoLinks(videoLinks);
		}

		String projectsWorkedOn = (String)attributes.get("projectsWorkedOn");

		if (projectsWorkedOn != null) {
			setProjectsWorkedOn(projectsWorkedOn);
		}

		Boolean showInBlackbook = (Boolean)attributes.get("showInBlackbook");

		if (showInBlackbook != null) {
			setShowInBlackbook(showInBlackbook);
		}

		String faxNumber = (String)attributes.get("faxNumber");

		if (faxNumber != null) {
			setFaxNumber(faxNumber);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		String contactDesignation = (String)attributes.get("contactDesignation");

		if (contactDesignation != null) {
			setContactDesignation(contactDesignation);
		}

		Integer pipelineStatus = (Integer)attributes.get("pipelineStatus");

		if (pipelineStatus != null) {
			setPipelineStatus(pipelineStatus);
		}

		Integer businessDevManager = (Integer)attributes.get(
				"businessDevManager");

		if (businessDevManager != null) {
			setBusinessDevManager(businessDevManager);
		}

		Integer prevBusinessDevManager = (Integer)attributes.get(
				"prevBusinessDevManager");

		if (prevBusinessDevManager != null) {
			setPrevBusinessDevManager(prevBusinessDevManager);
		}

		Boolean isATO = (Boolean)attributes.get("isATO");

		if (isATO != null) {
			setIsATO(isATO);
		}

		Date approvalDate = (Date)attributes.get("approvalDate");

		if (approvalDate != null) {
			setApprovalDate(approvalDate);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String listedCo = (String)attributes.get("listedCo");

		if (listedCo != null) {
			setListedCo(listedCo);
		}

		Long noOfPotentialCandidates = (Long)attributes.get(
				"noOfPotentialCandidates");

		if (noOfPotentialCandidates != null) {
			setNoOfPotentialCandidates(noOfPotentialCandidates);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public String getCorporateCode() {
		if (_corporateCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporateCode;
		}
	}

	@Override
	public void setCorporateCode(String corporateCode) {
		_corporateCode = corporateCode;
	}

	@JSON
	@Override
	public String getCorporateType() {
		if (_corporateType == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporateType;
		}
	}

	@Override
	public void setCorporateType(String corporateType) {
		_corporateType = corporateType;
	}

	@JSON
	@Override
	public String getCorporateCategory() {
		if (_corporateCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporateCategory;
		}
	}

	@Override
	public void setCorporateCategory(String corporateCategory) {
		_corporateCategory = corporateCategory;
	}

	@JSON
	@Override
	public String getApiPath() {
		if (_apiPath == null) {
			return StringPool.BLANK;
		}
		else {
			return _apiPath;
		}
	}

	@Override
	public void setApiPath(String apiPath) {
		_apiPath = apiPath;
	}

	@JSON
	@Override
	public String getCategories() {
		if (_categories == null) {
			return StringPool.BLANK;
		}
		else {
			return _categories;
		}
	}

	@Override
	public void setCategories(String categories) {
		_categories = categories;
	}

	@JSON
	@Override
	public String getFoundedOn() {
		if (_foundedOn == null) {
			return StringPool.BLANK;
		}
		else {
			return _foundedOn;
		}
	}

	@Override
	public void setFoundedOn(String foundedOn) {
		_foundedOn = foundedOn;
	}

	@JSON
	@Override
	public int getNoOfEmployees() {
		return _noOfEmployees;
	}

	@Override
	public void setNoOfEmployees(int noOfEmployees) {
		_noOfEmployees = noOfEmployees;
	}

	@JSON
	@Override
	public String getEmailId() {
		if (_emailId == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailId;
		}
	}

	@Override
	public void setEmailId(String emailId) {
		_emailId = emailId;
	}

	@JSON
	@Override
	public String getWebsite() {
		if (_website == null) {
			return StringPool.BLANK;
		}
		else {
			return _website;
		}
	}

	@Override
	public void setWebsite(String website) {
		_website = website;
	}

	@JSON
	@Override
	public String getFacebook() {
		if (_facebook == null) {
			return StringPool.BLANK;
		}
		else {
			return _facebook;
		}
	}

	@Override
	public void setFacebook(String facebook) {
		_facebook = facebook;
	}

	@JSON
	@Override
	public String getTwitter() {
		if (_twitter == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitter;
		}
	}

	@Override
	public void setTwitter(String twitter) {
		_twitter = twitter;
	}

	@JSON
	@Override
	public String getLinkedIn() {
		if (_linkedIn == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkedIn;
		}
	}

	@Override
	public void setLinkedIn(String linkedIn) {
		_linkedIn = linkedIn;
	}

	@JSON
	@Override
	public String getCrunchbase() {
		if (_crunchbase == null) {
			return StringPool.BLANK;
		}
		else {
			return _crunchbase;
		}
	}

	@Override
	public void setCrunchbase(String crunchbase) {
		_crunchbase = crunchbase;
	}

	@JSON
	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@JSON
	@Override
	public String getTotalFunds() {
		if (_totalFunds == null) {
			return StringPool.BLANK;
		}
		else {
			return _totalFunds;
		}
	}

	@Override
	public void setTotalFunds(String totalFunds) {
		_totalFunds = totalFunds;
	}

	@JSON
	@Override
	public String getUen() {
		if (_uen == null) {
			return StringPool.BLANK;
		}
		else {
			return _uen;
		}
	}

	@Override
	public void setUen(String uen) {
		_columnBitmask |= UEN_COLUMN_BITMASK;

		if (_originalUen == null) {
			_originalUen = _uen;
		}

		_uen = uen;
	}

	public String getOriginalUen() {
		return GetterUtil.getString(_originalUen);
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getShortPitch() {
		if (_shortPitch == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortPitch;
		}
	}

	@Override
	public void setShortPitch(String shortPitch) {
		_shortPitch = shortPitch;
	}

	@JSON
	@Override
	public String getLifecycleStage() {
		if (_lifecycleStage == null) {
			return StringPool.BLANK;
		}
		else {
			return _lifecycleStage;
		}
	}

	@Override
	public void setLifecycleStage(String lifecycleStage) {
		_lifecycleStage = lifecycleStage;
	}

	@JSON
	@Override
	public String getCapitalRaised() {
		if (_capitalRaised == null) {
			return StringPool.BLANK;
		}
		else {
			return _capitalRaised;
		}
	}

	@Override
	public void setCapitalRaised(String capitalRaised) {
		_capitalRaised = capitalRaised;
	}

	@JSON
	@Override
	public boolean getIsIncorporated() {
		return _isIncorporated;
	}

	@Override
	public boolean isIsIncorporated() {
		return _isIncorporated;
	}

	@Override
	public void setIsIncorporated(boolean isIncorporated) {
		_isIncorporated = isIncorporated;
	}

	@JSON
	@Override
	public String getStockSymbol() {
		if (_stockSymbol == null) {
			return StringPool.BLANK;
		}
		else {
			return _stockSymbol;
		}
	}

	@Override
	public void setStockSymbol(String stockSymbol) {
		_stockSymbol = stockSymbol;
	}

	@JSON
	@Override
	public String getImageUrl() {
		if (_imageUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _imageUrl;
		}
	}

	@Override
	public void setImageUrl(String imageUrl) {
		_imageUrl = imageUrl;
	}

	@JSON
	@Override
	public String getVideos() {
		if (_videos == null) {
			return StringPool.BLANK;
		}
		else {
			return _videos;
		}
	}

	@Override
	public void setVideos(String videos) {
		_videos = videos;
	}

	@JSON
	@Override
	public String getProfileOutline() {
		if (_profileOutline == null) {
			return StringPool.BLANK;
		}
		else {
			return _profileOutline;
		}
	}

	@Override
	public void setProfileOutline(String profileOutline) {
		_profileOutline = profileOutline;
	}

	@JSON
	@Override
	public String getRaisingFunds() {
		if (_raisingFunds == null) {
			return StringPool.BLANK;
		}
		else {
			return _raisingFunds;
		}
	}

	@Override
	public void setRaisingFunds(String raisingFunds) {
		_raisingFunds = raisingFunds;
	}

	@JSON
	@Override
	public String getExtras() {
		if (_extras == null) {
			return StringPool.BLANK;
		}
		else {
			return _extras;
		}
	}

	@Override
	public void setExtras(String extras) {
		_extras = extras;
	}

	@JSON
	@Override
	public String getUniqueDesc() {
		if (_uniqueDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _uniqueDesc;
		}
	}

	@Override
	public void setUniqueDesc(String uniqueDesc) {
		_uniqueDesc = uniqueDesc;
	}

	@JSON
	@Override
	public String getLinks() {
		if (_links == null) {
			return StringPool.BLANK;
		}
		else {
			return _links;
		}
	}

	@Override
	public void setLinks(String links) {
		_links = links;
	}

	@JSON
	@Override
	public boolean getIsBaseOrg() {
		return _isBaseOrg;
	}

	@Override
	public boolean isIsBaseOrg() {
		return _isBaseOrg;
	}

	@Override
	public void setIsBaseOrg(boolean isBaseOrg) {
		_columnBitmask |= ISBASEORG_COLUMN_BITMASK;

		if (!_setOriginalIsBaseOrg) {
			_setOriginalIsBaseOrg = true;

			_originalIsBaseOrg = _isBaseOrg;
		}

		_isBaseOrg = isBaseOrg;
	}

	public boolean getOriginalIsBaseOrg() {
		return _originalIsBaseOrg;
	}

	@JSON
	@Override
	public boolean getCompleteness() {
		return _completeness;
	}

	@Override
	public boolean isCompleteness() {
		return _completeness;
	}

	@Override
	public void setCompleteness(boolean completeness) {
		_completeness = completeness;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public boolean getActive() {
		return _active;
	}

	@Override
	public boolean isActive() {
		return _active;
	}

	@Override
	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@JSON
	@Override
	public long getLogoId() {
		return _logoId;
	}

	@Override
	public void setLogoId(long logoId) {
		_logoId = logoId;
	}

	@JSON
	@Override
	public long getMethodologyType() {
		return _methodologyType;
	}

	@Override
	public void setMethodologyType(long methodologyType) {
		_methodologyType = methodologyType;
	}

	@JSON
	@Override
	public long getMethodologySubType() {
		return _methodologySubType;
	}

	@Override
	public void setMethodologySubType(long methodologySubType) {
		_methodologySubType = methodologySubType;
	}

	@JSON
	@Override
	public int getStage() {
		return _stage;
	}

	@Override
	public void setStage(int stage) {
		_stage = stage;
	}

	@JSON
	@Override
	public String getFeedback() {
		if (_feedback == null) {
			return StringPool.BLANK;
		}
		else {
			return _feedback;
		}
	}

	@Override
	public void setFeedback(String feedback) {
		_feedback = feedback;
	}

	@JSON
	@Override
	public String getVideoLinks() {
		if (_videoLinks == null) {
			return StringPool.BLANK;
		}
		else {
			return _videoLinks;
		}
	}

	@Override
	public void setVideoLinks(String videoLinks) {
		_videoLinks = videoLinks;
	}

	@JSON
	@Override
	public String getProjectsWorkedOn() {
		if (_projectsWorkedOn == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectsWorkedOn;
		}
	}

	@Override
	public void setProjectsWorkedOn(String projectsWorkedOn) {
		_projectsWorkedOn = projectsWorkedOn;
	}

	@JSON
	@Override
	public boolean getShowInBlackbook() {
		return _showInBlackbook;
	}

	@Override
	public boolean isShowInBlackbook() {
		return _showInBlackbook;
	}

	@Override
	public void setShowInBlackbook(boolean showInBlackbook) {
		_showInBlackbook = showInBlackbook;
	}

	@JSON
	@Override
	public String getFaxNumber() {
		if (_faxNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _faxNumber;
		}
	}

	@Override
	public void setFaxNumber(String faxNumber) {
		_faxNumber = faxNumber;
	}

	@JSON
	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@JSON
	@Override
	public String getContactDesignation() {
		if (_contactDesignation == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactDesignation;
		}
	}

	@Override
	public void setContactDesignation(String contactDesignation) {
		_contactDesignation = contactDesignation;
	}

	@JSON
	@Override
	public int getPipelineStatus() {
		return _pipelineStatus;
	}

	@Override
	public void setPipelineStatus(int pipelineStatus) {
		_pipelineStatus = pipelineStatus;
	}

	@JSON
	@Override
	public int getBusinessDevManager() {
		return _businessDevManager;
	}

	@Override
	public void setBusinessDevManager(int businessDevManager) {
		_businessDevManager = businessDevManager;
	}

	@JSON
	@Override
	public int getPrevBusinessDevManager() {
		return _prevBusinessDevManager;
	}

	@Override
	public void setPrevBusinessDevManager(int prevBusinessDevManager) {
		_prevBusinessDevManager = prevBusinessDevManager;
	}

	@JSON
	@Override
	public boolean getIsATO() {
		return _isATO;
	}

	@Override
	public boolean isIsATO() {
		return _isATO;
	}

	@Override
	public void setIsATO(boolean isATO) {
		_columnBitmask |= ISATO_COLUMN_BITMASK;

		if (!_setOriginalIsATO) {
			_setOriginalIsATO = true;

			_originalIsATO = _isATO;
		}

		_isATO = isATO;
	}

	public boolean getOriginalIsATO() {
		return _originalIsATO;
	}

	@JSON
	@Override
	public Date getApprovalDate() {
		return _approvalDate;
	}

	@Override
	public void setApprovalDate(Date approvalDate) {
		_approvalDate = approvalDate;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	@Override
	public String getListedCo() {
		if (_listedCo == null) {
			return StringPool.BLANK;
		}
		else {
			return _listedCo;
		}
	}

	@Override
	public void setListedCo(String listedCo) {
		_listedCo = listedCo;
	}

	@JSON
	@Override
	public long getNoOfPotentialCandidates() {
		return _noOfPotentialCandidates;
	}

	@Override
	public void setNoOfPotentialCandidates(long noOfPotentialCandidates) {
		_noOfPotentialCandidates = noOfPotentialCandidates;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Organization.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Organization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Organization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Organization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OrganizationImpl organizationImpl = new OrganizationImpl();

		organizationImpl.setUuid(getUuid());
		organizationImpl.setOrganizationId(getOrganizationId());
		organizationImpl.setName(getName());
		organizationImpl.setCorporateCode(getCorporateCode());
		organizationImpl.setCorporateType(getCorporateType());
		organizationImpl.setCorporateCategory(getCorporateCategory());
		organizationImpl.setApiPath(getApiPath());
		organizationImpl.setCategories(getCategories());
		organizationImpl.setFoundedOn(getFoundedOn());
		organizationImpl.setNoOfEmployees(getNoOfEmployees());
		organizationImpl.setEmailId(getEmailId());
		organizationImpl.setWebsite(getWebsite());
		organizationImpl.setFacebook(getFacebook());
		organizationImpl.setTwitter(getTwitter());
		organizationImpl.setLinkedIn(getLinkedIn());
		organizationImpl.setCrunchbase(getCrunchbase());
		organizationImpl.setMobile(getMobile());
		organizationImpl.setTotalFunds(getTotalFunds());
		organizationImpl.setUen(getUen());
		organizationImpl.setDescription(getDescription());
		organizationImpl.setShortPitch(getShortPitch());
		organizationImpl.setLifecycleStage(getLifecycleStage());
		organizationImpl.setCapitalRaised(getCapitalRaised());
		organizationImpl.setIsIncorporated(getIsIncorporated());
		organizationImpl.setStockSymbol(getStockSymbol());
		organizationImpl.setImageUrl(getImageUrl());
		organizationImpl.setVideos(getVideos());
		organizationImpl.setProfileOutline(getProfileOutline());
		organizationImpl.setRaisingFunds(getRaisingFunds());
		organizationImpl.setExtras(getExtras());
		organizationImpl.setUniqueDesc(getUniqueDesc());
		organizationImpl.setLinks(getLinks());
		organizationImpl.setIsBaseOrg(getIsBaseOrg());
		organizationImpl.setCompleteness(getCompleteness());
		organizationImpl.setGroupId(getGroupId());
		organizationImpl.setCompanyId(getCompanyId());
		organizationImpl.setUserId(getUserId());
		organizationImpl.setUserName(getUserName());
		organizationImpl.setCreateDate(getCreateDate());
		organizationImpl.setModifiedDate(getModifiedDate());
		organizationImpl.setActive(getActive());
		organizationImpl.setLogoId(getLogoId());
		organizationImpl.setMethodologyType(getMethodologyType());
		organizationImpl.setMethodologySubType(getMethodologySubType());
		organizationImpl.setStage(getStage());
		organizationImpl.setFeedback(getFeedback());
		organizationImpl.setVideoLinks(getVideoLinks());
		organizationImpl.setProjectsWorkedOn(getProjectsWorkedOn());
		organizationImpl.setShowInBlackbook(getShowInBlackbook());
		organizationImpl.setFaxNumber(getFaxNumber());
		organizationImpl.setContactName(getContactName());
		organizationImpl.setContactDesignation(getContactDesignation());
		organizationImpl.setPipelineStatus(getPipelineStatus());
		organizationImpl.setBusinessDevManager(getBusinessDevManager());
		organizationImpl.setPrevBusinessDevManager(getPrevBusinessDevManager());
		organizationImpl.setIsATO(getIsATO());
		organizationImpl.setApprovalDate(getApprovalDate());
		organizationImpl.setStatus(getStatus());
		organizationImpl.setListedCo(getListedCo());
		organizationImpl.setNoOfPotentialCandidates(getNoOfPotentialCandidates());

		organizationImpl.resetOriginalValues();

		return organizationImpl;
	}

	@Override
	public int compareTo(Organization organization) {
		int value = 0;

		value = getName().compareToIgnoreCase(organization.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Organization)) {
			return false;
		}

		Organization organization = (Organization)obj;

		long primaryKey = organization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OrganizationModelImpl organizationModelImpl = this;

		organizationModelImpl._originalUuid = organizationModelImpl._uuid;

		organizationModelImpl._originalName = organizationModelImpl._name;

		organizationModelImpl._originalUen = organizationModelImpl._uen;

		organizationModelImpl._originalIsBaseOrg = organizationModelImpl._isBaseOrg;

		organizationModelImpl._setOriginalIsBaseOrg = false;

		organizationModelImpl._originalGroupId = organizationModelImpl._groupId;

		organizationModelImpl._setOriginalGroupId = false;

		organizationModelImpl._originalCompanyId = organizationModelImpl._companyId;

		organizationModelImpl._setOriginalCompanyId = false;

		organizationModelImpl._originalUserId = organizationModelImpl._userId;

		organizationModelImpl._setOriginalUserId = false;

		organizationModelImpl._originalActive = organizationModelImpl._active;

		organizationModelImpl._setOriginalActive = false;

		organizationModelImpl._originalIsATO = organizationModelImpl._isATO;

		organizationModelImpl._setOriginalIsATO = false;

		organizationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Organization> toCacheModel() {
		OrganizationCacheModel organizationCacheModel = new OrganizationCacheModel();

		organizationCacheModel.uuid = getUuid();

		String uuid = organizationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			organizationCacheModel.uuid = null;
		}

		organizationCacheModel.organizationId = getOrganizationId();

		organizationCacheModel.name = getName();

		String name = organizationCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			organizationCacheModel.name = null;
		}

		organizationCacheModel.corporateCode = getCorporateCode();

		String corporateCode = organizationCacheModel.corporateCode;

		if ((corporateCode != null) && (corporateCode.length() == 0)) {
			organizationCacheModel.corporateCode = null;
		}

		organizationCacheModel.corporateType = getCorporateType();

		String corporateType = organizationCacheModel.corporateType;

		if ((corporateType != null) && (corporateType.length() == 0)) {
			organizationCacheModel.corporateType = null;
		}

		organizationCacheModel.corporateCategory = getCorporateCategory();

		String corporateCategory = organizationCacheModel.corporateCategory;

		if ((corporateCategory != null) && (corporateCategory.length() == 0)) {
			organizationCacheModel.corporateCategory = null;
		}

		organizationCacheModel.apiPath = getApiPath();

		String apiPath = organizationCacheModel.apiPath;

		if ((apiPath != null) && (apiPath.length() == 0)) {
			organizationCacheModel.apiPath = null;
		}

		organizationCacheModel.categories = getCategories();

		String categories = organizationCacheModel.categories;

		if ((categories != null) && (categories.length() == 0)) {
			organizationCacheModel.categories = null;
		}

		organizationCacheModel.foundedOn = getFoundedOn();

		String foundedOn = organizationCacheModel.foundedOn;

		if ((foundedOn != null) && (foundedOn.length() == 0)) {
			organizationCacheModel.foundedOn = null;
		}

		organizationCacheModel.noOfEmployees = getNoOfEmployees();

		organizationCacheModel.emailId = getEmailId();

		String emailId = organizationCacheModel.emailId;

		if ((emailId != null) && (emailId.length() == 0)) {
			organizationCacheModel.emailId = null;
		}

		organizationCacheModel.website = getWebsite();

		String website = organizationCacheModel.website;

		if ((website != null) && (website.length() == 0)) {
			organizationCacheModel.website = null;
		}

		organizationCacheModel.facebook = getFacebook();

		String facebook = organizationCacheModel.facebook;

		if ((facebook != null) && (facebook.length() == 0)) {
			organizationCacheModel.facebook = null;
		}

		organizationCacheModel.twitter = getTwitter();

		String twitter = organizationCacheModel.twitter;

		if ((twitter != null) && (twitter.length() == 0)) {
			organizationCacheModel.twitter = null;
		}

		organizationCacheModel.linkedIn = getLinkedIn();

		String linkedIn = organizationCacheModel.linkedIn;

		if ((linkedIn != null) && (linkedIn.length() == 0)) {
			organizationCacheModel.linkedIn = null;
		}

		organizationCacheModel.crunchbase = getCrunchbase();

		String crunchbase = organizationCacheModel.crunchbase;

		if ((crunchbase != null) && (crunchbase.length() == 0)) {
			organizationCacheModel.crunchbase = null;
		}

		organizationCacheModel.mobile = getMobile();

		String mobile = organizationCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			organizationCacheModel.mobile = null;
		}

		organizationCacheModel.totalFunds = getTotalFunds();

		String totalFunds = organizationCacheModel.totalFunds;

		if ((totalFunds != null) && (totalFunds.length() == 0)) {
			organizationCacheModel.totalFunds = null;
		}

		organizationCacheModel.uen = getUen();

		String uen = organizationCacheModel.uen;

		if ((uen != null) && (uen.length() == 0)) {
			organizationCacheModel.uen = null;
		}

		organizationCacheModel.description = getDescription();

		String description = organizationCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			organizationCacheModel.description = null;
		}

		organizationCacheModel.shortPitch = getShortPitch();

		String shortPitch = organizationCacheModel.shortPitch;

		if ((shortPitch != null) && (shortPitch.length() == 0)) {
			organizationCacheModel.shortPitch = null;
		}

		organizationCacheModel.lifecycleStage = getLifecycleStage();

		String lifecycleStage = organizationCacheModel.lifecycleStage;

		if ((lifecycleStage != null) && (lifecycleStage.length() == 0)) {
			organizationCacheModel.lifecycleStage = null;
		}

		organizationCacheModel.capitalRaised = getCapitalRaised();

		String capitalRaised = organizationCacheModel.capitalRaised;

		if ((capitalRaised != null) && (capitalRaised.length() == 0)) {
			organizationCacheModel.capitalRaised = null;
		}

		organizationCacheModel.isIncorporated = getIsIncorporated();

		organizationCacheModel.stockSymbol = getStockSymbol();

		String stockSymbol = organizationCacheModel.stockSymbol;

		if ((stockSymbol != null) && (stockSymbol.length() == 0)) {
			organizationCacheModel.stockSymbol = null;
		}

		organizationCacheModel.imageUrl = getImageUrl();

		String imageUrl = organizationCacheModel.imageUrl;

		if ((imageUrl != null) && (imageUrl.length() == 0)) {
			organizationCacheModel.imageUrl = null;
		}

		organizationCacheModel.videos = getVideos();

		String videos = organizationCacheModel.videos;

		if ((videos != null) && (videos.length() == 0)) {
			organizationCacheModel.videos = null;
		}

		organizationCacheModel.profileOutline = getProfileOutline();

		String profileOutline = organizationCacheModel.profileOutline;

		if ((profileOutline != null) && (profileOutline.length() == 0)) {
			organizationCacheModel.profileOutline = null;
		}

		organizationCacheModel.raisingFunds = getRaisingFunds();

		String raisingFunds = organizationCacheModel.raisingFunds;

		if ((raisingFunds != null) && (raisingFunds.length() == 0)) {
			organizationCacheModel.raisingFunds = null;
		}

		organizationCacheModel.extras = getExtras();

		String extras = organizationCacheModel.extras;

		if ((extras != null) && (extras.length() == 0)) {
			organizationCacheModel.extras = null;
		}

		organizationCacheModel.uniqueDesc = getUniqueDesc();

		String uniqueDesc = organizationCacheModel.uniqueDesc;

		if ((uniqueDesc != null) && (uniqueDesc.length() == 0)) {
			organizationCacheModel.uniqueDesc = null;
		}

		organizationCacheModel.links = getLinks();

		String links = organizationCacheModel.links;

		if ((links != null) && (links.length() == 0)) {
			organizationCacheModel.links = null;
		}

		organizationCacheModel.isBaseOrg = getIsBaseOrg();

		organizationCacheModel.completeness = getCompleteness();

		organizationCacheModel.groupId = getGroupId();

		organizationCacheModel.companyId = getCompanyId();

		organizationCacheModel.userId = getUserId();

		organizationCacheModel.userName = getUserName();

		String userName = organizationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			organizationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			organizationCacheModel.createDate = createDate.getTime();
		}
		else {
			organizationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			organizationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			organizationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		organizationCacheModel.active = getActive();

		organizationCacheModel.logoId = getLogoId();

		organizationCacheModel.methodologyType = getMethodologyType();

		organizationCacheModel.methodologySubType = getMethodologySubType();

		organizationCacheModel.stage = getStage();

		organizationCacheModel.feedback = getFeedback();

		String feedback = organizationCacheModel.feedback;

		if ((feedback != null) && (feedback.length() == 0)) {
			organizationCacheModel.feedback = null;
		}

		organizationCacheModel.videoLinks = getVideoLinks();

		String videoLinks = organizationCacheModel.videoLinks;

		if ((videoLinks != null) && (videoLinks.length() == 0)) {
			organizationCacheModel.videoLinks = null;
		}

		organizationCacheModel.projectsWorkedOn = getProjectsWorkedOn();

		String projectsWorkedOn = organizationCacheModel.projectsWorkedOn;

		if ((projectsWorkedOn != null) && (projectsWorkedOn.length() == 0)) {
			organizationCacheModel.projectsWorkedOn = null;
		}

		organizationCacheModel.showInBlackbook = getShowInBlackbook();

		organizationCacheModel.faxNumber = getFaxNumber();

		String faxNumber = organizationCacheModel.faxNumber;

		if ((faxNumber != null) && (faxNumber.length() == 0)) {
			organizationCacheModel.faxNumber = null;
		}

		organizationCacheModel.contactName = getContactName();

		String contactName = organizationCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			organizationCacheModel.contactName = null;
		}

		organizationCacheModel.contactDesignation = getContactDesignation();

		String contactDesignation = organizationCacheModel.contactDesignation;

		if ((contactDesignation != null) && (contactDesignation.length() == 0)) {
			organizationCacheModel.contactDesignation = null;
		}

		organizationCacheModel.pipelineStatus = getPipelineStatus();

		organizationCacheModel.businessDevManager = getBusinessDevManager();

		organizationCacheModel.prevBusinessDevManager = getPrevBusinessDevManager();

		organizationCacheModel.isATO = getIsATO();

		Date approvalDate = getApprovalDate();

		if (approvalDate != null) {
			organizationCacheModel.approvalDate = approvalDate.getTime();
		}
		else {
			organizationCacheModel.approvalDate = Long.MIN_VALUE;
		}

		organizationCacheModel.status = getStatus();

		organizationCacheModel.listedCo = getListedCo();

		String listedCo = organizationCacheModel.listedCo;

		if ((listedCo != null) && (listedCo.length() == 0)) {
			organizationCacheModel.listedCo = null;
		}

		organizationCacheModel.noOfPotentialCandidates = getNoOfPotentialCandidates();

		return organizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(121);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", corporateCode=");
		sb.append(getCorporateCode());
		sb.append(", corporateType=");
		sb.append(getCorporateType());
		sb.append(", corporateCategory=");
		sb.append(getCorporateCategory());
		sb.append(", apiPath=");
		sb.append(getApiPath());
		sb.append(", categories=");
		sb.append(getCategories());
		sb.append(", foundedOn=");
		sb.append(getFoundedOn());
		sb.append(", noOfEmployees=");
		sb.append(getNoOfEmployees());
		sb.append(", emailId=");
		sb.append(getEmailId());
		sb.append(", website=");
		sb.append(getWebsite());
		sb.append(", facebook=");
		sb.append(getFacebook());
		sb.append(", twitter=");
		sb.append(getTwitter());
		sb.append(", linkedIn=");
		sb.append(getLinkedIn());
		sb.append(", crunchbase=");
		sb.append(getCrunchbase());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", totalFunds=");
		sb.append(getTotalFunds());
		sb.append(", uen=");
		sb.append(getUen());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", shortPitch=");
		sb.append(getShortPitch());
		sb.append(", lifecycleStage=");
		sb.append(getLifecycleStage());
		sb.append(", capitalRaised=");
		sb.append(getCapitalRaised());
		sb.append(", isIncorporated=");
		sb.append(getIsIncorporated());
		sb.append(", stockSymbol=");
		sb.append(getStockSymbol());
		sb.append(", imageUrl=");
		sb.append(getImageUrl());
		sb.append(", videos=");
		sb.append(getVideos());
		sb.append(", profileOutline=");
		sb.append(getProfileOutline());
		sb.append(", raisingFunds=");
		sb.append(getRaisingFunds());
		sb.append(", extras=");
		sb.append(getExtras());
		sb.append(", uniqueDesc=");
		sb.append(getUniqueDesc());
		sb.append(", links=");
		sb.append(getLinks());
		sb.append(", isBaseOrg=");
		sb.append(getIsBaseOrg());
		sb.append(", completeness=");
		sb.append(getCompleteness());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", logoId=");
		sb.append(getLogoId());
		sb.append(", methodologyType=");
		sb.append(getMethodologyType());
		sb.append(", methodologySubType=");
		sb.append(getMethodologySubType());
		sb.append(", stage=");
		sb.append(getStage());
		sb.append(", feedback=");
		sb.append(getFeedback());
		sb.append(", videoLinks=");
		sb.append(getVideoLinks());
		sb.append(", projectsWorkedOn=");
		sb.append(getProjectsWorkedOn());
		sb.append(", showInBlackbook=");
		sb.append(getShowInBlackbook());
		sb.append(", faxNumber=");
		sb.append(getFaxNumber());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", contactDesignation=");
		sb.append(getContactDesignation());
		sb.append(", pipelineStatus=");
		sb.append(getPipelineStatus());
		sb.append(", businessDevManager=");
		sb.append(getBusinessDevManager());
		sb.append(", prevBusinessDevManager=");
		sb.append(getPrevBusinessDevManager());
		sb.append(", isATO=");
		sb.append(getIsATO());
		sb.append(", approvalDate=");
		sb.append(getApprovalDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", listedCo=");
		sb.append(getListedCo());
		sb.append(", noOfPotentialCandidates=");
		sb.append(getNoOfPotentialCandidates());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(184);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.startupprofile.model.Organization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporateCode</column-name><column-value><![CDATA[");
		sb.append(getCorporateCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporateType</column-name><column-value><![CDATA[");
		sb.append(getCorporateType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporateCategory</column-name><column-value><![CDATA[");
		sb.append(getCorporateCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>apiPath</column-name><column-value><![CDATA[");
		sb.append(getApiPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categories</column-name><column-value><![CDATA[");
		sb.append(getCategories());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>foundedOn</column-name><column-value><![CDATA[");
		sb.append(getFoundedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfEmployees</column-name><column-value><![CDATA[");
		sb.append(getNoOfEmployees());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailId</column-name><column-value><![CDATA[");
		sb.append(getEmailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>website</column-name><column-value><![CDATA[");
		sb.append(getWebsite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>facebook</column-name><column-value><![CDATA[");
		sb.append(getFacebook());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitter</column-name><column-value><![CDATA[");
		sb.append(getTwitter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkedIn</column-name><column-value><![CDATA[");
		sb.append(getLinkedIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>crunchbase</column-name><column-value><![CDATA[");
		sb.append(getCrunchbase());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalFunds</column-name><column-value><![CDATA[");
		sb.append(getTotalFunds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uen</column-name><column-value><![CDATA[");
		sb.append(getUen());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortPitch</column-name><column-value><![CDATA[");
		sb.append(getShortPitch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lifecycleStage</column-name><column-value><![CDATA[");
		sb.append(getLifecycleStage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>capitalRaised</column-name><column-value><![CDATA[");
		sb.append(getCapitalRaised());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isIncorporated</column-name><column-value><![CDATA[");
		sb.append(getIsIncorporated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stockSymbol</column-name><column-value><![CDATA[");
		sb.append(getStockSymbol());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageUrl</column-name><column-value><![CDATA[");
		sb.append(getImageUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videos</column-name><column-value><![CDATA[");
		sb.append(getVideos());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileOutline</column-name><column-value><![CDATA[");
		sb.append(getProfileOutline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>raisingFunds</column-name><column-value><![CDATA[");
		sb.append(getRaisingFunds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extras</column-name><column-value><![CDATA[");
		sb.append(getExtras());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uniqueDesc</column-name><column-value><![CDATA[");
		sb.append(getUniqueDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>links</column-name><column-value><![CDATA[");
		sb.append(getLinks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isBaseOrg</column-name><column-value><![CDATA[");
		sb.append(getIsBaseOrg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>completeness</column-name><column-value><![CDATA[");
		sb.append(getCompleteness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>logoId</column-name><column-value><![CDATA[");
		sb.append(getLogoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>methodologyType</column-name><column-value><![CDATA[");
		sb.append(getMethodologyType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>methodologySubType</column-name><column-value><![CDATA[");
		sb.append(getMethodologySubType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stage</column-name><column-value><![CDATA[");
		sb.append(getStage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedback</column-name><column-value><![CDATA[");
		sb.append(getFeedback());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoLinks</column-name><column-value><![CDATA[");
		sb.append(getVideoLinks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectsWorkedOn</column-name><column-value><![CDATA[");
		sb.append(getProjectsWorkedOn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>showInBlackbook</column-name><column-value><![CDATA[");
		sb.append(getShowInBlackbook());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>faxNumber</column-name><column-value><![CDATA[");
		sb.append(getFaxNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactDesignation</column-name><column-value><![CDATA[");
		sb.append(getContactDesignation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pipelineStatus</column-name><column-value><![CDATA[");
		sb.append(getPipelineStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessDevManager</column-name><column-value><![CDATA[");
		sb.append(getBusinessDevManager());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prevBusinessDevManager</column-name><column-value><![CDATA[");
		sb.append(getPrevBusinessDevManager());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isATO</column-name><column-value><![CDATA[");
		sb.append(getIsATO());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvalDate</column-name><column-value><![CDATA[");
		sb.append(getApprovalDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>listedCo</column-name><column-value><![CDATA[");
		sb.append(getListedCo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfPotentialCandidates</column-name><column-value><![CDATA[");
		sb.append(getNoOfPotentialCandidates());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Organization.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Organization.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _organizationId;
	private String _name;
	private String _originalName;
	private String _corporateCode;
	private String _corporateType;
	private String _corporateCategory;
	private String _apiPath;
	private String _categories;
	private String _foundedOn;
	private int _noOfEmployees;
	private String _emailId;
	private String _website;
	private String _facebook;
	private String _twitter;
	private String _linkedIn;
	private String _crunchbase;
	private String _mobile;
	private String _totalFunds;
	private String _uen;
	private String _originalUen;
	private String _description;
	private String _shortPitch;
	private String _lifecycleStage;
	private String _capitalRaised;
	private boolean _isIncorporated;
	private String _stockSymbol;
	private String _imageUrl;
	private String _videos;
	private String _profileOutline;
	private String _raisingFunds;
	private String _extras;
	private String _uniqueDesc;
	private String _links;
	private boolean _isBaseOrg;
	private boolean _originalIsBaseOrg;
	private boolean _setOriginalIsBaseOrg;
	private boolean _completeness;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _logoId;
	private long _methodologyType;
	private long _methodologySubType;
	private int _stage;
	private String _feedback;
	private String _videoLinks;
	private String _projectsWorkedOn;
	private boolean _showInBlackbook;
	private String _faxNumber;
	private String _contactName;
	private String _contactDesignation;
	private int _pipelineStatus;
	private int _businessDevManager;
	private int _prevBusinessDevManager;
	private boolean _isATO;
	private boolean _originalIsATO;
	private boolean _setOriginalIsATO;
	private Date _approvalDate;
	private int _status;
	private String _listedCo;
	private long _noOfPotentialCandidates;
	private long _columnBitmask;
	private Organization _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spchallenge.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the SPChallenge service. Represents a row in the &quot;SPChallenge&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sambaash.platform.srv.spchallenge.model.impl.SPChallengeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sambaash.platform.srv.spchallenge.model.impl.SPChallengeImpl}.
 * </p>
 *
 * @author pradeep
 * @see SPChallenge
 * @see com.sambaash.platform.srv.spchallenge.model.impl.SPChallengeImpl
 * @see com.sambaash.platform.srv.spchallenge.model.impl.SPChallengeModelImpl
 * @generated
 */
public interface SPChallengeModel extends BaseModel<SPChallenge>,
	StagedGroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a s p challenge model instance should use the {@link SPChallenge} interface instead.
	 */

	/**
	 * Returns the primary key of this s p challenge.
	 *
	 * @return the primary key of this s p challenge
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this s p challenge.
	 *
	 * @param primaryKey the primary key of this s p challenge
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this s p challenge.
	 *
	 * @return the uuid of this s p challenge
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this s p challenge.
	 *
	 * @param uuid the uuid of this s p challenge
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the sp challenge ID of this s p challenge.
	 *
	 * @return the sp challenge ID of this s p challenge
	 */
	public long getSpChallengeId();

	/**
	 * Sets the sp challenge ID of this s p challenge.
	 *
	 * @param spChallengeId the sp challenge ID of this s p challenge
	 */
	public void setSpChallengeId(long spChallengeId);

	/**
	 * Returns the group ID of this s p challenge.
	 *
	 * @return the group ID of this s p challenge
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this s p challenge.
	 *
	 * @param groupId the group ID of this s p challenge
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this s p challenge.
	 *
	 * @return the company ID of this s p challenge
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this s p challenge.
	 *
	 * @param companyId the company ID of this s p challenge
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this s p challenge.
	 *
	 * @return the user ID of this s p challenge
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this s p challenge.
	 *
	 * @param userId the user ID of this s p challenge
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this s p challenge.
	 *
	 * @return the user uuid of this s p challenge
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this s p challenge.
	 *
	 * @param userUuid the user uuid of this s p challenge
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this s p challenge.
	 *
	 * @return the user name of this s p challenge
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this s p challenge.
	 *
	 * @param userName the user name of this s p challenge
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this s p challenge.
	 *
	 * @return the create date of this s p challenge
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this s p challenge.
	 *
	 * @param createDate the create date of this s p challenge
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this s p challenge.
	 *
	 * @return the modified date of this s p challenge
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this s p challenge.
	 *
	 * @param modifiedDate the modified date of this s p challenge
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the name of this s p challenge.
	 *
	 * @return the name of this s p challenge
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this s p challenge.
	 *
	 * @param name the name of this s p challenge
	 */
	public void setName(String name);

	/**
	 * Returns the open to of this s p challenge.
	 *
	 * @return the open to of this s p challenge
	 */
	@AutoEscape
	public String getOpenTo();

	/**
	 * Sets the open to of this s p challenge.
	 *
	 * @param openTo the open to of this s p challenge
	 */
	public void setOpenTo(String openTo);

	/**
	 * Returns the type of this s p challenge.
	 *
	 * @return the type of this s p challenge
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this s p challenge.
	 *
	 * @param type the type of this s p challenge
	 */
	public void setType(String type);

	/**
	 * Returns the background of this s p challenge.
	 *
	 * @return the background of this s p challenge
	 */
	@AutoEscape
	public String getBackground();

	/**
	 * Sets the background of this s p challenge.
	 *
	 * @param background the background of this s p challenge
	 */
	public void setBackground(String background);

	/**
	 * Returns the description of this s p challenge.
	 *
	 * @return the description of this s p challenge
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this s p challenge.
	 *
	 * @param description the description of this s p challenge
	 */
	public void setDescription(String description);

	/**
	 * Returns the scope of this s p challenge.
	 *
	 * @return the scope of this s p challenge
	 */
	@AutoEscape
	public String getScope();

	/**
	 * Sets the scope of this s p challenge.
	 *
	 * @param scope the scope of this s p challenge
	 */
	public void setScope(String scope);

	/**
	 * Returns the benefits of this s p challenge.
	 *
	 * @return the benefits of this s p challenge
	 */
	@AutoEscape
	public String getBenefits();

	/**
	 * Sets the benefits of this s p challenge.
	 *
	 * @param benefits the benefits of this s p challenge
	 */
	public void setBenefits(String benefits);

	/**
	 * Returns the budget of this s p challenge.
	 *
	 * @return the budget of this s p challenge
	 */
	@AutoEscape
	public String getBudget();

	/**
	 * Sets the budget of this s p challenge.
	 *
	 * @param budget the budget of this s p challenge
	 */
	public void setBudget(String budget);

	/**
	 * Returns the start date of this s p challenge.
	 *
	 * @return the start date of this s p challenge
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this s p challenge.
	 *
	 * @param startDate the start date of this s p challenge
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this s p challenge.
	 *
	 * @return the end date of this s p challenge
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this s p challenge.
	 *
	 * @param endDate the end date of this s p challenge
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the apply by of this s p challenge.
	 *
	 * @return the apply by of this s p challenge
	 */
	public Date getApplyBy();

	/**
	 * Sets the apply by of this s p challenge.
	 *
	 * @param applyBy the apply by of this s p challenge
	 */
	public void setApplyBy(Date applyBy);

	/**
	 * Returns the extras of this s p challenge.
	 *
	 * @return the extras of this s p challenge
	 */
	@AutoEscape
	public String getExtras();

	/**
	 * Sets the extras of this s p challenge.
	 *
	 * @param extras the extras of this s p challenge
	 */
	public void setExtras(String extras);

	/**
	 * Returns the active of this s p challenge.
	 *
	 * @return the active of this s p challenge
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this s p challenge is active.
	 *
	 * @return <code>true</code> if this s p challenge is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this s p challenge is active.
	 *
	 * @param active the active of this s p challenge
	 */
	public void setActive(boolean active);

	/**
	 * Returns the notify to of this s p challenge.
	 *
	 * @return the notify to of this s p challenge
	 */
	@AutoEscape
	public String getNotifyTo();

	/**
	 * Sets the notify to of this s p challenge.
	 *
	 * @param notifyTo the notify to of this s p challenge
	 */
	public void setNotifyTo(String notifyTo);

	/**
	 * Returns the scout of this s p challenge.
	 *
	 * @return the scout of this s p challenge
	 */
	@AutoEscape
	public String getScout();

	/**
	 * Sets the scout of this s p challenge.
	 *
	 * @param scout the scout of this s p challenge
	 */
	public void setScout(String scout);

	/**
	 * Returns the logo ID of this s p challenge.
	 *
	 * @return the logo ID of this s p challenge
	 */
	public long getLogoId();

	/**
	 * Sets the logo ID of this s p challenge.
	 *
	 * @param logoId the logo ID of this s p challenge
	 */
	public void setLogoId(long logoId);

	/**
	 * Returns the draft of this s p challenge.
	 *
	 * @return the draft of this s p challenge
	 */
	public boolean getDraft();

	/**
	 * Returns <code>true</code> if this s p challenge is draft.
	 *
	 * @return <code>true</code> if this s p challenge is draft; <code>false</code> otherwise
	 */
	public boolean isDraft();

	/**
	 * Sets whether this s p challenge is draft.
	 *
	 * @param draft the draft of this s p challenge
	 */
	public void setDraft(boolean draft);

	/**
	 * Returns the budget ccy sign of this s p challenge.
	 *
	 * @return the budget ccy sign of this s p challenge
	 */
	@AutoEscape
	public String getBudgetCcySign();

	/**
	 * Sets the budget ccy sign of this s p challenge.
	 *
	 * @param budgetCcySign the budget ccy sign of this s p challenge
	 */
	public void setBudgetCcySign(String budgetCcySign);

	/**
	 * Returns the brand of this s p challenge.
	 *
	 * @return the brand of this s p challenge
	 */
	public long getBrand();

	/**
	 * Sets the brand of this s p challenge.
	 *
	 * @param brand the brand of this s p challenge
	 */
	public void setBrand(long brand);

	/**
	 * Returns the vp approver of this s p challenge.
	 *
	 * @return the vp approver of this s p challenge
	 */
	@AutoEscape
	public String getVpApprover();

	/**
	 * Sets the vp approver of this s p challenge.
	 *
	 * @param vpApprover the vp approver of this s p challenge
	 */
	public void setVpApprover(String vpApprover);

	/**
	 * Returns the budget approver of this s p challenge.
	 *
	 * @return the budget approver of this s p challenge
	 */
	@AutoEscape
	public String getBudgetApprover();

	/**
	 * Sets the budget approver of this s p challenge.
	 *
	 * @param budgetApprover the budget approver of this s p challenge
	 */
	public void setBudgetApprover(String budgetApprover);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.sambaash.platform.srv.spchallenge.model.SPChallenge spChallenge);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.sambaash.platform.srv.spchallenge.model.SPChallenge> toCacheModel();

	@Override
	public com.sambaash.platform.srv.spchallenge.model.SPChallenge toEscapedModel();

	@Override
	public com.sambaash.platform.srv.spchallenge.model.SPChallenge toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}
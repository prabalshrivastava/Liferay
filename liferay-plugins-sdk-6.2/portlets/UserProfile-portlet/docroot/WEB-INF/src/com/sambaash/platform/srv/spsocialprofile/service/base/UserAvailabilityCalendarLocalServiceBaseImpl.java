/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spsocialprofile.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.sambaash.platform.srv.spsocialprofile.model.UserAvailabilityCalendar;
import com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalService;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.ExamBodyUserPersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfileDetailPersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfileFinder;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfileFriendsPersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfileLikePersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfilePersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfilePullAuditPersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.SocialProfileViewAuditPersistence;
import com.sambaash.platform.srv.spsocialprofile.service.persistence.UserAvailabilityCalendarPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the user availability calendar local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sambaash.platform.srv.spsocialprofile.service.impl.UserAvailabilityCalendarLocalServiceImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see com.sambaash.platform.srv.spsocialprofile.service.impl.UserAvailabilityCalendarLocalServiceImpl
 * @see com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalServiceUtil
 * @generated
 */
public abstract class UserAvailabilityCalendarLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements UserAvailabilityCalendarLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalServiceUtil} to access the user availability calendar local service.
	 */

	/**
	 * Adds the user availability calendar to the database. Also notifies the appropriate model listeners.
	 *
	 * @param userAvailabilityCalendar the user availability calendar
	 * @return the user availability calendar that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public UserAvailabilityCalendar addUserAvailabilityCalendar(
		UserAvailabilityCalendar userAvailabilityCalendar)
		throws SystemException {
		userAvailabilityCalendar.setNew(true);

		return userAvailabilityCalendarPersistence.update(userAvailabilityCalendar);
	}

	/**
	 * Creates a new user availability calendar with the primary key. Does not add the user availability calendar to the database.
	 *
	 * @param userAvailabilityCalendarId the primary key for the new user availability calendar
	 * @return the new user availability calendar
	 */
	@Override
	public UserAvailabilityCalendar createUserAvailabilityCalendar(
		long userAvailabilityCalendarId) {
		return userAvailabilityCalendarPersistence.create(userAvailabilityCalendarId);
	}

	/**
	 * Deletes the user availability calendar with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param userAvailabilityCalendarId the primary key of the user availability calendar
	 * @return the user availability calendar that was removed
	 * @throws PortalException if a user availability calendar with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public UserAvailabilityCalendar deleteUserAvailabilityCalendar(
		long userAvailabilityCalendarId)
		throws PortalException, SystemException {
		return userAvailabilityCalendarPersistence.remove(userAvailabilityCalendarId);
	}

	/**
	 * Deletes the user availability calendar from the database. Also notifies the appropriate model listeners.
	 *
	 * @param userAvailabilityCalendar the user availability calendar
	 * @return the user availability calendar that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public UserAvailabilityCalendar deleteUserAvailabilityCalendar(
		UserAvailabilityCalendar userAvailabilityCalendar)
		throws SystemException {
		return userAvailabilityCalendarPersistence.remove(userAvailabilityCalendar);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(UserAvailabilityCalendar.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return userAvailabilityCalendarPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spsocialprofile.model.impl.UserAvailabilityCalendarModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return userAvailabilityCalendarPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spsocialprofile.model.impl.UserAvailabilityCalendarModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return userAvailabilityCalendarPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return userAvailabilityCalendarPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return userAvailabilityCalendarPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public UserAvailabilityCalendar fetchUserAvailabilityCalendar(
		long userAvailabilityCalendarId) throws SystemException {
		return userAvailabilityCalendarPersistence.fetchByPrimaryKey(userAvailabilityCalendarId);
	}

	/**
	 * Returns the user availability calendar with the primary key.
	 *
	 * @param userAvailabilityCalendarId the primary key of the user availability calendar
	 * @return the user availability calendar
	 * @throws PortalException if a user availability calendar with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public UserAvailabilityCalendar getUserAvailabilityCalendar(
		long userAvailabilityCalendarId)
		throws PortalException, SystemException {
		return userAvailabilityCalendarPersistence.findByPrimaryKey(userAvailabilityCalendarId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return userAvailabilityCalendarPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the user availability calendars.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spsocialprofile.model.impl.UserAvailabilityCalendarModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of user availability calendars
	 * @param end the upper bound of the range of user availability calendars (not inclusive)
	 * @return the range of user availability calendars
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<UserAvailabilityCalendar> getUserAvailabilityCalendars(
		int start, int end) throws SystemException {
		return userAvailabilityCalendarPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of user availability calendars.
	 *
	 * @return the number of user availability calendars
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getUserAvailabilityCalendarsCount() throws SystemException {
		return userAvailabilityCalendarPersistence.countAll();
	}

	/**
	 * Updates the user availability calendar in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param userAvailabilityCalendar the user availability calendar
	 * @return the user availability calendar that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public UserAvailabilityCalendar updateUserAvailabilityCalendar(
		UserAvailabilityCalendar userAvailabilityCalendar)
		throws SystemException {
		return userAvailabilityCalendarPersistence.update(userAvailabilityCalendar);
	}

	/**
	 * Returns the exam body user local service.
	 *
	 * @return the exam body user local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.ExamBodyUserLocalService getExamBodyUserLocalService() {
		return examBodyUserLocalService;
	}

	/**
	 * Sets the exam body user local service.
	 *
	 * @param examBodyUserLocalService the exam body user local service
	 */
	public void setExamBodyUserLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.ExamBodyUserLocalService examBodyUserLocalService) {
		this.examBodyUserLocalService = examBodyUserLocalService;
	}

	/**
	 * Returns the exam body user persistence.
	 *
	 * @return the exam body user persistence
	 */
	public ExamBodyUserPersistence getExamBodyUserPersistence() {
		return examBodyUserPersistence;
	}

	/**
	 * Sets the exam body user persistence.
	 *
	 * @param examBodyUserPersistence the exam body user persistence
	 */
	public void setExamBodyUserPersistence(
		ExamBodyUserPersistence examBodyUserPersistence) {
		this.examBodyUserPersistence = examBodyUserPersistence;
	}

	/**
	 * Returns the social profile local service.
	 *
	 * @return the social profile local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLocalService getSocialProfileLocalService() {
		return socialProfileLocalService;
	}

	/**
	 * Sets the social profile local service.
	 *
	 * @param socialProfileLocalService the social profile local service
	 */
	public void setSocialProfileLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLocalService socialProfileLocalService) {
		this.socialProfileLocalService = socialProfileLocalService;
	}

	/**
	 * Returns the social profile remote service.
	 *
	 * @return the social profile remote service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileService getSocialProfileService() {
		return socialProfileService;
	}

	/**
	 * Sets the social profile remote service.
	 *
	 * @param socialProfileService the social profile remote service
	 */
	public void setSocialProfileService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileService socialProfileService) {
		this.socialProfileService = socialProfileService;
	}

	/**
	 * Returns the social profile persistence.
	 *
	 * @return the social profile persistence
	 */
	public SocialProfilePersistence getSocialProfilePersistence() {
		return socialProfilePersistence;
	}

	/**
	 * Sets the social profile persistence.
	 *
	 * @param socialProfilePersistence the social profile persistence
	 */
	public void setSocialProfilePersistence(
		SocialProfilePersistence socialProfilePersistence) {
		this.socialProfilePersistence = socialProfilePersistence;
	}

	/**
	 * Returns the social profile finder.
	 *
	 * @return the social profile finder
	 */
	public SocialProfileFinder getSocialProfileFinder() {
		return socialProfileFinder;
	}

	/**
	 * Sets the social profile finder.
	 *
	 * @param socialProfileFinder the social profile finder
	 */
	public void setSocialProfileFinder(SocialProfileFinder socialProfileFinder) {
		this.socialProfileFinder = socialProfileFinder;
	}

	/**
	 * Returns the social profile detail local service.
	 *
	 * @return the social profile detail local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileDetailLocalService getSocialProfileDetailLocalService() {
		return socialProfileDetailLocalService;
	}

	/**
	 * Sets the social profile detail local service.
	 *
	 * @param socialProfileDetailLocalService the social profile detail local service
	 */
	public void setSocialProfileDetailLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileDetailLocalService socialProfileDetailLocalService) {
		this.socialProfileDetailLocalService = socialProfileDetailLocalService;
	}

	/**
	 * Returns the social profile detail persistence.
	 *
	 * @return the social profile detail persistence
	 */
	public SocialProfileDetailPersistence getSocialProfileDetailPersistence() {
		return socialProfileDetailPersistence;
	}

	/**
	 * Sets the social profile detail persistence.
	 *
	 * @param socialProfileDetailPersistence the social profile detail persistence
	 */
	public void setSocialProfileDetailPersistence(
		SocialProfileDetailPersistence socialProfileDetailPersistence) {
		this.socialProfileDetailPersistence = socialProfileDetailPersistence;
	}

	/**
	 * Returns the social profile friends local service.
	 *
	 * @return the social profile friends local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileFriendsLocalService getSocialProfileFriendsLocalService() {
		return socialProfileFriendsLocalService;
	}

	/**
	 * Sets the social profile friends local service.
	 *
	 * @param socialProfileFriendsLocalService the social profile friends local service
	 */
	public void setSocialProfileFriendsLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileFriendsLocalService socialProfileFriendsLocalService) {
		this.socialProfileFriendsLocalService = socialProfileFriendsLocalService;
	}

	/**
	 * Returns the social profile friends persistence.
	 *
	 * @return the social profile friends persistence
	 */
	public SocialProfileFriendsPersistence getSocialProfileFriendsPersistence() {
		return socialProfileFriendsPersistence;
	}

	/**
	 * Sets the social profile friends persistence.
	 *
	 * @param socialProfileFriendsPersistence the social profile friends persistence
	 */
	public void setSocialProfileFriendsPersistence(
		SocialProfileFriendsPersistence socialProfileFriendsPersistence) {
		this.socialProfileFriendsPersistence = socialProfileFriendsPersistence;
	}

	/**
	 * Returns the social profile like local service.
	 *
	 * @return the social profile like local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLikeLocalService getSocialProfileLikeLocalService() {
		return socialProfileLikeLocalService;
	}

	/**
	 * Sets the social profile like local service.
	 *
	 * @param socialProfileLikeLocalService the social profile like local service
	 */
	public void setSocialProfileLikeLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLikeLocalService socialProfileLikeLocalService) {
		this.socialProfileLikeLocalService = socialProfileLikeLocalService;
	}

	/**
	 * Returns the social profile like persistence.
	 *
	 * @return the social profile like persistence
	 */
	public SocialProfileLikePersistence getSocialProfileLikePersistence() {
		return socialProfileLikePersistence;
	}

	/**
	 * Sets the social profile like persistence.
	 *
	 * @param socialProfileLikePersistence the social profile like persistence
	 */
	public void setSocialProfileLikePersistence(
		SocialProfileLikePersistence socialProfileLikePersistence) {
		this.socialProfileLikePersistence = socialProfileLikePersistence;
	}

	/**
	 * Returns the social profile pull audit local service.
	 *
	 * @return the social profile pull audit local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfilePullAuditLocalService getSocialProfilePullAuditLocalService() {
		return socialProfilePullAuditLocalService;
	}

	/**
	 * Sets the social profile pull audit local service.
	 *
	 * @param socialProfilePullAuditLocalService the social profile pull audit local service
	 */
	public void setSocialProfilePullAuditLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfilePullAuditLocalService socialProfilePullAuditLocalService) {
		this.socialProfilePullAuditLocalService = socialProfilePullAuditLocalService;
	}

	/**
	 * Returns the social profile pull audit persistence.
	 *
	 * @return the social profile pull audit persistence
	 */
	public SocialProfilePullAuditPersistence getSocialProfilePullAuditPersistence() {
		return socialProfilePullAuditPersistence;
	}

	/**
	 * Sets the social profile pull audit persistence.
	 *
	 * @param socialProfilePullAuditPersistence the social profile pull audit persistence
	 */
	public void setSocialProfilePullAuditPersistence(
		SocialProfilePullAuditPersistence socialProfilePullAuditPersistence) {
		this.socialProfilePullAuditPersistence = socialProfilePullAuditPersistence;
	}

	/**
	 * Returns the social profile view audit local service.
	 *
	 * @return the social profile view audit local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.SocialProfileViewAuditLocalService getSocialProfileViewAuditLocalService() {
		return socialProfileViewAuditLocalService;
	}

	/**
	 * Sets the social profile view audit local service.
	 *
	 * @param socialProfileViewAuditLocalService the social profile view audit local service
	 */
	public void setSocialProfileViewAuditLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.SocialProfileViewAuditLocalService socialProfileViewAuditLocalService) {
		this.socialProfileViewAuditLocalService = socialProfileViewAuditLocalService;
	}

	/**
	 * Returns the social profile view audit persistence.
	 *
	 * @return the social profile view audit persistence
	 */
	public SocialProfileViewAuditPersistence getSocialProfileViewAuditPersistence() {
		return socialProfileViewAuditPersistence;
	}

	/**
	 * Sets the social profile view audit persistence.
	 *
	 * @param socialProfileViewAuditPersistence the social profile view audit persistence
	 */
	public void setSocialProfileViewAuditPersistence(
		SocialProfileViewAuditPersistence socialProfileViewAuditPersistence) {
		this.socialProfileViewAuditPersistence = socialProfileViewAuditPersistence;
	}

	/**
	 * Returns the user availability calendar local service.
	 *
	 * @return the user availability calendar local service
	 */
	public com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalService getUserAvailabilityCalendarLocalService() {
		return userAvailabilityCalendarLocalService;
	}

	/**
	 * Sets the user availability calendar local service.
	 *
	 * @param userAvailabilityCalendarLocalService the user availability calendar local service
	 */
	public void setUserAvailabilityCalendarLocalService(
		com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalService userAvailabilityCalendarLocalService) {
		this.userAvailabilityCalendarLocalService = userAvailabilityCalendarLocalService;
	}

	/**
	 * Returns the user availability calendar persistence.
	 *
	 * @return the user availability calendar persistence
	 */
	public UserAvailabilityCalendarPersistence getUserAvailabilityCalendarPersistence() {
		return userAvailabilityCalendarPersistence;
	}

	/**
	 * Sets the user availability calendar persistence.
	 *
	 * @param userAvailabilityCalendarPersistence the user availability calendar persistence
	 */
	public void setUserAvailabilityCalendarPersistence(
		UserAvailabilityCalendarPersistence userAvailabilityCalendarPersistence) {
		this.userAvailabilityCalendarPersistence = userAvailabilityCalendarPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.sambaash.platform.srv.spsocialprofile.model.UserAvailabilityCalendar",
			userAvailabilityCalendarLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.sambaash.platform.srv.spsocialprofile.model.UserAvailabilityCalendar");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return UserAvailabilityCalendar.class;
	}

	protected String getModelClassName() {
		return UserAvailabilityCalendar.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = userAvailabilityCalendarPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.ExamBodyUserLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.ExamBodyUserLocalService examBodyUserLocalService;
	@BeanReference(type = ExamBodyUserPersistence.class)
	protected ExamBodyUserPersistence examBodyUserPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLocalService socialProfileLocalService;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileService socialProfileService;
	@BeanReference(type = SocialProfilePersistence.class)
	protected SocialProfilePersistence socialProfilePersistence;
	@BeanReference(type = SocialProfileFinder.class)
	protected SocialProfileFinder socialProfileFinder;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileDetailLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileDetailLocalService socialProfileDetailLocalService;
	@BeanReference(type = SocialProfileDetailPersistence.class)
	protected SocialProfileDetailPersistence socialProfileDetailPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileFriendsLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileFriendsLocalService socialProfileFriendsLocalService;
	@BeanReference(type = SocialProfileFriendsPersistence.class)
	protected SocialProfileFriendsPersistence socialProfileFriendsPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLikeLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileLikeLocalService socialProfileLikeLocalService;
	@BeanReference(type = SocialProfileLikePersistence.class)
	protected SocialProfileLikePersistence socialProfileLikePersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfilePullAuditLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfilePullAuditLocalService socialProfilePullAuditLocalService;
	@BeanReference(type = SocialProfilePullAuditPersistence.class)
	protected SocialProfilePullAuditPersistence socialProfilePullAuditPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.SocialProfileViewAuditLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.SocialProfileViewAuditLocalService socialProfileViewAuditLocalService;
	@BeanReference(type = SocialProfileViewAuditPersistence.class)
	protected SocialProfileViewAuditPersistence socialProfileViewAuditPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalService.class)
	protected com.sambaash.platform.srv.spsocialprofile.service.UserAvailabilityCalendarLocalService userAvailabilityCalendarLocalService;
	@BeanReference(type = UserAvailabilityCalendarPersistence.class)
	protected UserAvailabilityCalendarPersistence userAvailabilityCalendarPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private UserAvailabilityCalendarLocalServiceClpInvoker _clpInvoker = new UserAvailabilityCalendarLocalServiceClpInvoker();
}
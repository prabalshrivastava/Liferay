/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.startupprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.startupprofile.model.ApprovedMentors;
import com.sambaash.platform.srv.startupprofile.model.ApprovedMentorsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ApprovedMentors service. Represents a row in the &quot;SPMentors&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.startupprofile.model.ApprovedMentorsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ApprovedMentorsImpl}.
 * </p>
 *
 * @author pradeep
 * @see ApprovedMentorsImpl
 * @see com.sambaash.platform.srv.startupprofile.model.ApprovedMentors
 * @see com.sambaash.platform.srv.startupprofile.model.ApprovedMentorsModel
 * @generated
 */
public class ApprovedMentorsModelImpl extends BaseModelImpl<ApprovedMentors>
	implements ApprovedMentorsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a approved mentors model instance should use the {@link com.sambaash.platform.srv.startupprofile.model.ApprovedMentors} interface instead.
	 */
	public static final String TABLE_NAME = "SPMentors";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "mentorId", Types.BIGINT },
			{ "organizationId", Types.BIGINT },
			{ "userId", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "approvedDate", Types.TIMESTAMP },
			{ "remarks", Types.VARCHAR },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMentors (uuid_ VARCHAR(75) null,mentorId BIGINT(20) not null primary key,organizationId BIGINT(20),userId VARCHAR(75) null,createDate DATETIME null,approvedDate DATETIME null,remarks LONGTEXT null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table SPMentors";
	public static final String ORDER_BY_JPQL = " ORDER BY approvedMentors.mentorId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMentors.mentorId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.startupprofile.model.ApprovedMentors"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.startupprofile.model.ApprovedMentors"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.startupprofile.model.ApprovedMentors"),
			true);
	public static long ORGANIZATIONID_COLUMN_BITMASK = 1L;
	public static long STATUS_COLUMN_BITMASK = 2L;
	public static long USERID_COLUMN_BITMASK = 4L;
	public static long UUID_COLUMN_BITMASK = 8L;
	public static long MENTORID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.startupprofile.model.ApprovedMentors"));

	public ApprovedMentorsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _mentorId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMentorId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _mentorId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ApprovedMentors.class;
	}

	@Override
	public String getModelClassName() {
		return ApprovedMentors.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("mentorId", getMentorId());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("approvedDate", getApprovedDate());
		attributes.put("remarks", getRemarks());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long mentorId = (Long)attributes.get("mentorId");

		if (mentorId != null) {
			setMentorId(mentorId);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String userId = (String)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date approvedDate = (Date)attributes.get("approvedDate");

		if (approvedDate != null) {
			setApprovedDate(approvedDate);
		}

		String remarks = (String)attributes.get("remarks");

		if (remarks != null) {
			setRemarks(remarks);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getMentorId() {
		return _mentorId;
	}

	@Override
	public void setMentorId(long mentorId) {
		_mentorId = mentorId;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@Override
	public String getUserId() {
		if (_userId == null) {
			return StringPool.BLANK;
		}
		else {
			return _userId;
		}
	}

	@Override
	public void setUserId(String userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (_originalUserId == null) {
			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getOriginalUserId() {
		return GetterUtil.getString(_originalUserId);
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getApprovedDate() {
		return _approvedDate;
	}

	@Override
	public void setApprovedDate(Date approvedDate) {
		_approvedDate = approvedDate;
	}

	@Override
	public String getRemarks() {
		if (_remarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _remarks;
		}
	}

	@Override
	public void setRemarks(String remarks) {
		_remarks = remarks;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ApprovedMentors.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ApprovedMentors toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ApprovedMentors)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ApprovedMentorsImpl approvedMentorsImpl = new ApprovedMentorsImpl();

		approvedMentorsImpl.setUuid(getUuid());
		approvedMentorsImpl.setMentorId(getMentorId());
		approvedMentorsImpl.setOrganizationId(getOrganizationId());
		approvedMentorsImpl.setUserId(getUserId());
		approvedMentorsImpl.setCreateDate(getCreateDate());
		approvedMentorsImpl.setApprovedDate(getApprovedDate());
		approvedMentorsImpl.setRemarks(getRemarks());
		approvedMentorsImpl.setStatus(getStatus());

		approvedMentorsImpl.resetOriginalValues();

		return approvedMentorsImpl;
	}

	@Override
	public int compareTo(ApprovedMentors approvedMentors) {
		long primaryKey = approvedMentors.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ApprovedMentors)) {
			return false;
		}

		ApprovedMentors approvedMentors = (ApprovedMentors)obj;

		long primaryKey = approvedMentors.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ApprovedMentorsModelImpl approvedMentorsModelImpl = this;

		approvedMentorsModelImpl._originalUuid = approvedMentorsModelImpl._uuid;

		approvedMentorsModelImpl._originalOrganizationId = approvedMentorsModelImpl._organizationId;

		approvedMentorsModelImpl._setOriginalOrganizationId = false;

		approvedMentorsModelImpl._originalUserId = approvedMentorsModelImpl._userId;

		approvedMentorsModelImpl._originalStatus = approvedMentorsModelImpl._status;

		approvedMentorsModelImpl._setOriginalStatus = false;

		approvedMentorsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ApprovedMentors> toCacheModel() {
		ApprovedMentorsCacheModel approvedMentorsCacheModel = new ApprovedMentorsCacheModel();

		approvedMentorsCacheModel.uuid = getUuid();

		String uuid = approvedMentorsCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			approvedMentorsCacheModel.uuid = null;
		}

		approvedMentorsCacheModel.mentorId = getMentorId();

		approvedMentorsCacheModel.organizationId = getOrganizationId();

		approvedMentorsCacheModel.userId = getUserId();

		String userId = approvedMentorsCacheModel.userId;

		if ((userId != null) && (userId.length() == 0)) {
			approvedMentorsCacheModel.userId = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			approvedMentorsCacheModel.createDate = createDate.getTime();
		}
		else {
			approvedMentorsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date approvedDate = getApprovedDate();

		if (approvedDate != null) {
			approvedMentorsCacheModel.approvedDate = approvedDate.getTime();
		}
		else {
			approvedMentorsCacheModel.approvedDate = Long.MIN_VALUE;
		}

		approvedMentorsCacheModel.remarks = getRemarks();

		String remarks = approvedMentorsCacheModel.remarks;

		if ((remarks != null) && (remarks.length() == 0)) {
			approvedMentorsCacheModel.remarks = null;
		}

		approvedMentorsCacheModel.status = getStatus();

		return approvedMentorsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", mentorId=");
		sb.append(getMentorId());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", approvedDate=");
		sb.append(getApprovedDate());
		sb.append(", remarks=");
		sb.append(getRemarks());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.startupprofile.model.ApprovedMentors");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mentorId</column-name><column-value><![CDATA[");
		sb.append(getMentorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remarks</column-name><column-value><![CDATA[");
		sb.append(getRemarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ApprovedMentors.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ApprovedMentors.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _mentorId;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _userId;
	private String _originalUserId;
	private Date _createDate;
	private Date _approvedDate;
	private String _remarks;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _columnBitmask;
	private ApprovedMentors _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.roles.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.roles.model.SPRoles;
import com.sambaash.platform.srv.roles.model.SPRolesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPRoles service. Represents a row in the &quot;SPRoles&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.roles.model.SPRolesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPRolesImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPRolesImpl
 * @see com.sambaash.platform.srv.roles.model.SPRoles
 * @see com.sambaash.platform.srv.roles.model.SPRolesModel
 * @generated
 */
public class SPRolesModelImpl extends BaseModelImpl<SPRoles>
	implements SPRolesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p roles model instance should use the {@link com.sambaash.platform.srv.roles.model.SPRoles} interface instead.
	 */
	public static final String TABLE_NAME = "SPRoles";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spRoleId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "roleId", Types.BIGINT },
			{ "categoryId1", Types.BIGINT },
			{ "categoryId2", Types.BIGINT },
			{ "countryCategoryId", Types.BIGINT },
			{ "departmentCategoryId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table SPRoles (uuid_ VARCHAR(75) null,spRoleId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,roleId BIGINT(20),categoryId1 BIGINT(20),categoryId2 BIGINT(20),countryCategoryId BIGINT(20),departmentCategoryId BIGINT(20))";
	public static final String TABLE_SQL_DROP = "drop table SPRoles";
	public static final String ORDER_BY_JPQL = " ORDER BY spRoles.roleId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPRoles.roleId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.roles.model.SPRoles"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.roles.model.SPRoles"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.roles.model.SPRoles"),
			true);
	public static long CATEGORYID1_COLUMN_BITMASK = 1L;
	public static long CATEGORYID2_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long COUNTRYCATEGORYID_COLUMN_BITMASK = 8L;
	public static long DEPARTMENTCATEGORYID_COLUMN_BITMASK = 16L;
	public static long GROUPID_COLUMN_BITMASK = 32L;
	public static long ROLEID_COLUMN_BITMASK = 64L;
	public static long UUID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.roles.model.SPRoles"));

	public SPRolesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spRoleId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpRoleId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spRoleId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPRoles.class;
	}

	@Override
	public String getModelClassName() {
		return SPRoles.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spRoleId", getSpRoleId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("roleId", getRoleId());
		attributes.put("categoryId1", getCategoryId1());
		attributes.put("categoryId2", getCategoryId2());
		attributes.put("countryCategoryId", getCountryCategoryId());
		attributes.put("departmentCategoryId", getDepartmentCategoryId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spRoleId = (Long)attributes.get("spRoleId");

		if (spRoleId != null) {
			setSpRoleId(spRoleId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long roleId = (Long)attributes.get("roleId");

		if (roleId != null) {
			setRoleId(roleId);
		}

		Long categoryId1 = (Long)attributes.get("categoryId1");

		if (categoryId1 != null) {
			setCategoryId1(categoryId1);
		}

		Long categoryId2 = (Long)attributes.get("categoryId2");

		if (categoryId2 != null) {
			setCategoryId2(categoryId2);
		}

		Long countryCategoryId = (Long)attributes.get("countryCategoryId");

		if (countryCategoryId != null) {
			setCountryCategoryId(countryCategoryId);
		}

		Long departmentCategoryId = (Long)attributes.get("departmentCategoryId");

		if (departmentCategoryId != null) {
			setDepartmentCategoryId(departmentCategoryId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpRoleId() {
		return _spRoleId;
	}

	@Override
	public void setSpRoleId(long spRoleId) {
		_spRoleId = spRoleId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getRoleId() {
		return _roleId;
	}

	@Override
	public void setRoleId(long roleId) {
		_columnBitmask = -1L;

		if (!_setOriginalRoleId) {
			_setOriginalRoleId = true;

			_originalRoleId = _roleId;
		}

		_roleId = roleId;
	}

	public long getOriginalRoleId() {
		return _originalRoleId;
	}

	@Override
	public long getCategoryId1() {
		return _categoryId1;
	}

	@Override
	public void setCategoryId1(long categoryId1) {
		_columnBitmask |= CATEGORYID1_COLUMN_BITMASK;

		if (!_setOriginalCategoryId1) {
			_setOriginalCategoryId1 = true;

			_originalCategoryId1 = _categoryId1;
		}

		_categoryId1 = categoryId1;
	}

	public long getOriginalCategoryId1() {
		return _originalCategoryId1;
	}

	@Override
	public long getCategoryId2() {
		return _categoryId2;
	}

	@Override
	public void setCategoryId2(long categoryId2) {
		_columnBitmask |= CATEGORYID2_COLUMN_BITMASK;

		if (!_setOriginalCategoryId2) {
			_setOriginalCategoryId2 = true;

			_originalCategoryId2 = _categoryId2;
		}

		_categoryId2 = categoryId2;
	}

	public long getOriginalCategoryId2() {
		return _originalCategoryId2;
	}

	@Override
	public long getCountryCategoryId() {
		return _countryCategoryId;
	}

	@Override
	public void setCountryCategoryId(long countryCategoryId) {
		_columnBitmask |= COUNTRYCATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCountryCategoryId) {
			_setOriginalCountryCategoryId = true;

			_originalCountryCategoryId = _countryCategoryId;
		}

		_countryCategoryId = countryCategoryId;
	}

	public long getOriginalCountryCategoryId() {
		return _originalCountryCategoryId;
	}

	@Override
	public long getDepartmentCategoryId() {
		return _departmentCategoryId;
	}

	@Override
	public void setDepartmentCategoryId(long departmentCategoryId) {
		_columnBitmask |= DEPARTMENTCATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalDepartmentCategoryId) {
			_setOriginalDepartmentCategoryId = true;

			_originalDepartmentCategoryId = _departmentCategoryId;
		}

		_departmentCategoryId = departmentCategoryId;
	}

	public long getOriginalDepartmentCategoryId() {
		return _originalDepartmentCategoryId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SPRoles.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPRoles.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPRoles toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPRoles)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPRolesImpl spRolesImpl = new SPRolesImpl();

		spRolesImpl.setUuid(getUuid());
		spRolesImpl.setSpRoleId(getSpRoleId());
		spRolesImpl.setGroupId(getGroupId());
		spRolesImpl.setCompanyId(getCompanyId());
		spRolesImpl.setUserId(getUserId());
		spRolesImpl.setUserName(getUserName());
		spRolesImpl.setCreateDate(getCreateDate());
		spRolesImpl.setModifiedDate(getModifiedDate());
		spRolesImpl.setRoleId(getRoleId());
		spRolesImpl.setCategoryId1(getCategoryId1());
		spRolesImpl.setCategoryId2(getCategoryId2());
		spRolesImpl.setCountryCategoryId(getCountryCategoryId());
		spRolesImpl.setDepartmentCategoryId(getDepartmentCategoryId());

		spRolesImpl.resetOriginalValues();

		return spRolesImpl;
	}

	@Override
	public int compareTo(SPRoles spRoles) {
		int value = 0;

		if (getRoleId() < spRoles.getRoleId()) {
			value = -1;
		}
		else if (getRoleId() > spRoles.getRoleId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPRoles)) {
			return false;
		}

		SPRoles spRoles = (SPRoles)obj;

		long primaryKey = spRoles.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPRolesModelImpl spRolesModelImpl = this;

		spRolesModelImpl._originalUuid = spRolesModelImpl._uuid;

		spRolesModelImpl._originalGroupId = spRolesModelImpl._groupId;

		spRolesModelImpl._setOriginalGroupId = false;

		spRolesModelImpl._originalCompanyId = spRolesModelImpl._companyId;

		spRolesModelImpl._setOriginalCompanyId = false;

		spRolesModelImpl._originalRoleId = spRolesModelImpl._roleId;

		spRolesModelImpl._setOriginalRoleId = false;

		spRolesModelImpl._originalCategoryId1 = spRolesModelImpl._categoryId1;

		spRolesModelImpl._setOriginalCategoryId1 = false;

		spRolesModelImpl._originalCategoryId2 = spRolesModelImpl._categoryId2;

		spRolesModelImpl._setOriginalCategoryId2 = false;

		spRolesModelImpl._originalCountryCategoryId = spRolesModelImpl._countryCategoryId;

		spRolesModelImpl._setOriginalCountryCategoryId = false;

		spRolesModelImpl._originalDepartmentCategoryId = spRolesModelImpl._departmentCategoryId;

		spRolesModelImpl._setOriginalDepartmentCategoryId = false;

		spRolesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPRoles> toCacheModel() {
		SPRolesCacheModel spRolesCacheModel = new SPRolesCacheModel();

		spRolesCacheModel.uuid = getUuid();

		String uuid = spRolesCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spRolesCacheModel.uuid = null;
		}

		spRolesCacheModel.spRoleId = getSpRoleId();

		spRolesCacheModel.groupId = getGroupId();

		spRolesCacheModel.companyId = getCompanyId();

		spRolesCacheModel.userId = getUserId();

		spRolesCacheModel.userName = getUserName();

		String userName = spRolesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spRolesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spRolesCacheModel.createDate = createDate.getTime();
		}
		else {
			spRolesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spRolesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spRolesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spRolesCacheModel.roleId = getRoleId();

		spRolesCacheModel.categoryId1 = getCategoryId1();

		spRolesCacheModel.categoryId2 = getCategoryId2();

		spRolesCacheModel.countryCategoryId = getCountryCategoryId();

		spRolesCacheModel.departmentCategoryId = getDepartmentCategoryId();

		return spRolesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spRoleId=");
		sb.append(getSpRoleId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", roleId=");
		sb.append(getRoleId());
		sb.append(", categoryId1=");
		sb.append(getCategoryId1());
		sb.append(", categoryId2=");
		sb.append(getCategoryId2());
		sb.append(", countryCategoryId=");
		sb.append(getCountryCategoryId());
		sb.append(", departmentCategoryId=");
		sb.append(getDepartmentCategoryId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.roles.model.SPRoles");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spRoleId</column-name><column-value><![CDATA[");
		sb.append(getSpRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleId</column-name><column-value><![CDATA[");
		sb.append(getRoleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId1</column-name><column-value><![CDATA[");
		sb.append(getCategoryId1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId2</column-name><column-value><![CDATA[");
		sb.append(getCategoryId2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>countryCategoryId</column-name><column-value><![CDATA[");
		sb.append(getCountryCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentCategoryId</column-name><column-value><![CDATA[");
		sb.append(getDepartmentCategoryId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPRoles.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPRoles.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _spRoleId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _roleId;
	private long _originalRoleId;
	private boolean _setOriginalRoleId;
	private long _categoryId1;
	private long _originalCategoryId1;
	private boolean _setOriginalCategoryId1;
	private long _categoryId2;
	private long _originalCategoryId2;
	private boolean _setOriginalCategoryId2;
	private long _countryCategoryId;
	private long _originalCountryCategoryId;
	private boolean _setOriginalCountryCategoryId;
	private long _departmentCategoryId;
	private long _originalDepartmentCategoryId;
	private boolean _setOriginalDepartmentCategoryId;
	private long _columnBitmask;
	private SPRoles _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.validation.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult;
import com.sambaash.platform.srv.validation.model.SPStudentProgrammeResultModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPStudentProgrammeResult service. Represents a row in the &quot;SPStudentProgrammeResult&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.validation.model.SPStudentProgrammeResultModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPStudentProgrammeResultImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SPStudentProgrammeResultImpl
 * @see com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult
 * @see com.sambaash.platform.srv.validation.model.SPStudentProgrammeResultModel
 * @generated
 */
public class SPStudentProgrammeResultModelImpl extends BaseModelImpl<SPStudentProgrammeResult>
	implements SPStudentProgrammeResultModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p student programme result model instance should use the {@link com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult} interface instead.
	 */
	public static final String TABLE_NAME = "SPStudentProgrammeResult";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spStudentProgrammeResultId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "nric", Types.VARCHAR },
			{ "emailAddress", Types.VARCHAR },
			{ "courseCentre", Types.VARCHAR },
			{ "courseStartDate", Types.TIMESTAMP },
			{ "courseEndDate", Types.TIMESTAMP },
			{ "programme", Types.VARCHAR },
			{ "exam", Types.TIMESTAMP },
			{ "examType", Types.VARCHAR },
			{ "paper1Result", Types.VARCHAR },
			{ "paper2Result", Types.VARCHAR },
			{ "overallResult", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPStudentProgrammeResult (spStudentProgrammeResultId BIGINT(20) not null primary key,companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,nric VARCHAR(75) null,emailAddress VARCHAR(75) null,courseCentre VARCHAR(75) null,courseStartDate DATETIME null,courseEndDate DATETIME null,programme VARCHAR(75) null,exam DATETIME null,examType VARCHAR(75) null,paper1Result VARCHAR(75) null,paper2Result VARCHAR(75) null,overallResult VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPStudentProgrammeResult";
	public static final String ORDER_BY_JPQL = " ORDER BY spStudentProgrammeResult.exam DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPStudentProgrammeResult.exam DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult"),
			true);
	public static long EMAILADDRESS_COLUMN_BITMASK = 1L;
	public static long NRIC_COLUMN_BITMASK = 2L;
	public static long PROGRAMME_COLUMN_BITMASK = 4L;
	public static long EXAM_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult"));

	public SPStudentProgrammeResultModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spStudentProgrammeResultId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpStudentProgrammeResultId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spStudentProgrammeResultId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPStudentProgrammeResult.class;
	}

	@Override
	public String getModelClassName() {
		return SPStudentProgrammeResult.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spStudentProgrammeResultId",
			getSpStudentProgrammeResultId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("nric", getNric());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("courseCentre", getCourseCentre());
		attributes.put("courseStartDate", getCourseStartDate());
		attributes.put("courseEndDate", getCourseEndDate());
		attributes.put("programme", getProgramme());
		attributes.put("exam", getExam());
		attributes.put("examType", getExamType());
		attributes.put("paper1Result", getPaper1Result());
		attributes.put("paper2Result", getPaper2Result());
		attributes.put("overallResult", getOverallResult());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spStudentProgrammeResultId = (Long)attributes.get(
				"spStudentProgrammeResultId");

		if (spStudentProgrammeResultId != null) {
			setSpStudentProgrammeResultId(spStudentProgrammeResultId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String nric = (String)attributes.get("nric");

		if (nric != null) {
			setNric(nric);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String courseCentre = (String)attributes.get("courseCentre");

		if (courseCentre != null) {
			setCourseCentre(courseCentre);
		}

		Date courseStartDate = (Date)attributes.get("courseStartDate");

		if (courseStartDate != null) {
			setCourseStartDate(courseStartDate);
		}

		Date courseEndDate = (Date)attributes.get("courseEndDate");

		if (courseEndDate != null) {
			setCourseEndDate(courseEndDate);
		}

		String programme = (String)attributes.get("programme");

		if (programme != null) {
			setProgramme(programme);
		}

		Date exam = (Date)attributes.get("exam");

		if (exam != null) {
			setExam(exam);
		}

		String examType = (String)attributes.get("examType");

		if (examType != null) {
			setExamType(examType);
		}

		String paper1Result = (String)attributes.get("paper1Result");

		if (paper1Result != null) {
			setPaper1Result(paper1Result);
		}

		String paper2Result = (String)attributes.get("paper2Result");

		if (paper2Result != null) {
			setPaper2Result(paper2Result);
		}

		String overallResult = (String)attributes.get("overallResult");

		if (overallResult != null) {
			setOverallResult(overallResult);
		}
	}

	@Override
	public long getSpStudentProgrammeResultId() {
		return _spStudentProgrammeResultId;
	}

	@Override
	public void setSpStudentProgrammeResultId(long spStudentProgrammeResultId) {
		_spStudentProgrammeResultId = spStudentProgrammeResultId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getNric() {
		if (_nric == null) {
			return StringPool.BLANK;
		}
		else {
			return _nric;
		}
	}

	@Override
	public void setNric(String nric) {
		_columnBitmask |= NRIC_COLUMN_BITMASK;

		if (_originalNric == null) {
			_originalNric = _nric;
		}

		_nric = nric;
	}

	public String getOriginalNric() {
		return GetterUtil.getString(_originalNric);
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_columnBitmask |= EMAILADDRESS_COLUMN_BITMASK;

		if (_originalEmailAddress == null) {
			_originalEmailAddress = _emailAddress;
		}

		_emailAddress = emailAddress;
	}

	public String getOriginalEmailAddress() {
		return GetterUtil.getString(_originalEmailAddress);
	}

	@Override
	public String getCourseCentre() {
		if (_courseCentre == null) {
			return StringPool.BLANK;
		}
		else {
			return _courseCentre;
		}
	}

	@Override
	public void setCourseCentre(String courseCentre) {
		_courseCentre = courseCentre;
	}

	@Override
	public Date getCourseStartDate() {
		return _courseStartDate;
	}

	@Override
	public void setCourseStartDate(Date courseStartDate) {
		_courseStartDate = courseStartDate;
	}

	@Override
	public Date getCourseEndDate() {
		return _courseEndDate;
	}

	@Override
	public void setCourseEndDate(Date courseEndDate) {
		_courseEndDate = courseEndDate;
	}

	@Override
	public String getProgramme() {
		if (_programme == null) {
			return StringPool.BLANK;
		}
		else {
			return _programme;
		}
	}

	@Override
	public void setProgramme(String programme) {
		_columnBitmask |= PROGRAMME_COLUMN_BITMASK;

		if (_originalProgramme == null) {
			_originalProgramme = _programme;
		}

		_programme = programme;
	}

	public String getOriginalProgramme() {
		return GetterUtil.getString(_originalProgramme);
	}

	@Override
	public Date getExam() {
		return _exam;
	}

	@Override
	public void setExam(Date exam) {
		_columnBitmask = -1L;

		_exam = exam;
	}

	@Override
	public String getExamType() {
		if (_examType == null) {
			return StringPool.BLANK;
		}
		else {
			return _examType;
		}
	}

	@Override
	public void setExamType(String examType) {
		_examType = examType;
	}

	@Override
	public String getPaper1Result() {
		if (_paper1Result == null) {
			return StringPool.BLANK;
		}
		else {
			return _paper1Result;
		}
	}

	@Override
	public void setPaper1Result(String paper1Result) {
		_paper1Result = paper1Result;
	}

	@Override
	public String getPaper2Result() {
		if (_paper2Result == null) {
			return StringPool.BLANK;
		}
		else {
			return _paper2Result;
		}
	}

	@Override
	public void setPaper2Result(String paper2Result) {
		_paper2Result = paper2Result;
	}

	@Override
	public String getOverallResult() {
		if (_overallResult == null) {
			return StringPool.BLANK;
		}
		else {
			return _overallResult;
		}
	}

	@Override
	public void setOverallResult(String overallResult) {
		_overallResult = overallResult;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPStudentProgrammeResult.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPStudentProgrammeResult toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPStudentProgrammeResult)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPStudentProgrammeResultImpl spStudentProgrammeResultImpl = new SPStudentProgrammeResultImpl();

		spStudentProgrammeResultImpl.setSpStudentProgrammeResultId(getSpStudentProgrammeResultId());
		spStudentProgrammeResultImpl.setCompanyId(getCompanyId());
		spStudentProgrammeResultImpl.setUserId(getUserId());
		spStudentProgrammeResultImpl.setUserName(getUserName());
		spStudentProgrammeResultImpl.setCreateDate(getCreateDate());
		spStudentProgrammeResultImpl.setModifiedDate(getModifiedDate());
		spStudentProgrammeResultImpl.setNric(getNric());
		spStudentProgrammeResultImpl.setEmailAddress(getEmailAddress());
		spStudentProgrammeResultImpl.setCourseCentre(getCourseCentre());
		spStudentProgrammeResultImpl.setCourseStartDate(getCourseStartDate());
		spStudentProgrammeResultImpl.setCourseEndDate(getCourseEndDate());
		spStudentProgrammeResultImpl.setProgramme(getProgramme());
		spStudentProgrammeResultImpl.setExam(getExam());
		spStudentProgrammeResultImpl.setExamType(getExamType());
		spStudentProgrammeResultImpl.setPaper1Result(getPaper1Result());
		spStudentProgrammeResultImpl.setPaper2Result(getPaper2Result());
		spStudentProgrammeResultImpl.setOverallResult(getOverallResult());

		spStudentProgrammeResultImpl.resetOriginalValues();

		return spStudentProgrammeResultImpl;
	}

	@Override
	public int compareTo(SPStudentProgrammeResult spStudentProgrammeResult) {
		int value = 0;

		value = DateUtil.compareTo(getExam(), spStudentProgrammeResult.getExam());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPStudentProgrammeResult)) {
			return false;
		}

		SPStudentProgrammeResult spStudentProgrammeResult = (SPStudentProgrammeResult)obj;

		long primaryKey = spStudentProgrammeResult.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPStudentProgrammeResultModelImpl spStudentProgrammeResultModelImpl = this;

		spStudentProgrammeResultModelImpl._originalNric = spStudentProgrammeResultModelImpl._nric;

		spStudentProgrammeResultModelImpl._originalEmailAddress = spStudentProgrammeResultModelImpl._emailAddress;

		spStudentProgrammeResultModelImpl._originalProgramme = spStudentProgrammeResultModelImpl._programme;

		spStudentProgrammeResultModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPStudentProgrammeResult> toCacheModel() {
		SPStudentProgrammeResultCacheModel spStudentProgrammeResultCacheModel = new SPStudentProgrammeResultCacheModel();

		spStudentProgrammeResultCacheModel.spStudentProgrammeResultId = getSpStudentProgrammeResultId();

		spStudentProgrammeResultCacheModel.companyId = getCompanyId();

		spStudentProgrammeResultCacheModel.userId = getUserId();

		spStudentProgrammeResultCacheModel.userName = getUserName();

		String userName = spStudentProgrammeResultCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spStudentProgrammeResultCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spStudentProgrammeResultCacheModel.createDate = createDate.getTime();
		}
		else {
			spStudentProgrammeResultCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spStudentProgrammeResultCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spStudentProgrammeResultCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spStudentProgrammeResultCacheModel.nric = getNric();

		String nric = spStudentProgrammeResultCacheModel.nric;

		if ((nric != null) && (nric.length() == 0)) {
			spStudentProgrammeResultCacheModel.nric = null;
		}

		spStudentProgrammeResultCacheModel.emailAddress = getEmailAddress();

		String emailAddress = spStudentProgrammeResultCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			spStudentProgrammeResultCacheModel.emailAddress = null;
		}

		spStudentProgrammeResultCacheModel.courseCentre = getCourseCentre();

		String courseCentre = spStudentProgrammeResultCacheModel.courseCentre;

		if ((courseCentre != null) && (courseCentre.length() == 0)) {
			spStudentProgrammeResultCacheModel.courseCentre = null;
		}

		Date courseStartDate = getCourseStartDate();

		if (courseStartDate != null) {
			spStudentProgrammeResultCacheModel.courseStartDate = courseStartDate.getTime();
		}
		else {
			spStudentProgrammeResultCacheModel.courseStartDate = Long.MIN_VALUE;
		}

		Date courseEndDate = getCourseEndDate();

		if (courseEndDate != null) {
			spStudentProgrammeResultCacheModel.courseEndDate = courseEndDate.getTime();
		}
		else {
			spStudentProgrammeResultCacheModel.courseEndDate = Long.MIN_VALUE;
		}

		spStudentProgrammeResultCacheModel.programme = getProgramme();

		String programme = spStudentProgrammeResultCacheModel.programme;

		if ((programme != null) && (programme.length() == 0)) {
			spStudentProgrammeResultCacheModel.programme = null;
		}

		Date exam = getExam();

		if (exam != null) {
			spStudentProgrammeResultCacheModel.exam = exam.getTime();
		}
		else {
			spStudentProgrammeResultCacheModel.exam = Long.MIN_VALUE;
		}

		spStudentProgrammeResultCacheModel.examType = getExamType();

		String examType = spStudentProgrammeResultCacheModel.examType;

		if ((examType != null) && (examType.length() == 0)) {
			spStudentProgrammeResultCacheModel.examType = null;
		}

		spStudentProgrammeResultCacheModel.paper1Result = getPaper1Result();

		String paper1Result = spStudentProgrammeResultCacheModel.paper1Result;

		if ((paper1Result != null) && (paper1Result.length() == 0)) {
			spStudentProgrammeResultCacheModel.paper1Result = null;
		}

		spStudentProgrammeResultCacheModel.paper2Result = getPaper2Result();

		String paper2Result = spStudentProgrammeResultCacheModel.paper2Result;

		if ((paper2Result != null) && (paper2Result.length() == 0)) {
			spStudentProgrammeResultCacheModel.paper2Result = null;
		}

		spStudentProgrammeResultCacheModel.overallResult = getOverallResult();

		String overallResult = spStudentProgrammeResultCacheModel.overallResult;

		if ((overallResult != null) && (overallResult.length() == 0)) {
			spStudentProgrammeResultCacheModel.overallResult = null;
		}

		return spStudentProgrammeResultCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{spStudentProgrammeResultId=");
		sb.append(getSpStudentProgrammeResultId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", nric=");
		sb.append(getNric());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", courseCentre=");
		sb.append(getCourseCentre());
		sb.append(", courseStartDate=");
		sb.append(getCourseStartDate());
		sb.append(", courseEndDate=");
		sb.append(getCourseEndDate());
		sb.append(", programme=");
		sb.append(getProgramme());
		sb.append(", exam=");
		sb.append(getExam());
		sb.append(", examType=");
		sb.append(getExamType());
		sb.append(", paper1Result=");
		sb.append(getPaper1Result());
		sb.append(", paper2Result=");
		sb.append(getPaper2Result());
		sb.append(", overallResult=");
		sb.append(getOverallResult());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.validation.model.SPStudentProgrammeResult");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spStudentProgrammeResultId</column-name><column-value><![CDATA[");
		sb.append(getSpStudentProgrammeResultId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nric</column-name><column-value><![CDATA[");
		sb.append(getNric());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseCentre</column-name><column-value><![CDATA[");
		sb.append(getCourseCentre());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseStartDate</column-name><column-value><![CDATA[");
		sb.append(getCourseStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseEndDate</column-name><column-value><![CDATA[");
		sb.append(getCourseEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>programme</column-name><column-value><![CDATA[");
		sb.append(getProgramme());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exam</column-name><column-value><![CDATA[");
		sb.append(getExam());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>examType</column-name><column-value><![CDATA[");
		sb.append(getExamType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paper1Result</column-name><column-value><![CDATA[");
		sb.append(getPaper1Result());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paper2Result</column-name><column-value><![CDATA[");
		sb.append(getPaper2Result());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>overallResult</column-name><column-value><![CDATA[");
		sb.append(getOverallResult());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPStudentProgrammeResult.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPStudentProgrammeResult.class
		};
	private long _spStudentProgrammeResultId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _nric;
	private String _originalNric;
	private String _emailAddress;
	private String _originalEmailAddress;
	private String _courseCentre;
	private Date _courseStartDate;
	private Date _courseEndDate;
	private String _programme;
	private String _originalProgramme;
	private Date _exam;
	private String _examType;
	private String _paper1Result;
	private String _paper2Result;
	private String _overallResult;
	private long _columnBitmask;
	private SPStudentProgrammeResult _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spsocialprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit;
import com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAuditModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SocialProfileViewAudit service. Represents a row in the &quot;SPSocialProfileViewAudit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAuditModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialProfileViewAuditImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see SocialProfileViewAuditImpl
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit
 * @see com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAuditModel
 * @generated
 */
public class SocialProfileViewAuditModelImpl extends BaseModelImpl<SocialProfileViewAudit>
	implements SocialProfileViewAuditModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a social profile view audit model instance should use the {@link com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit} interface instead.
	 */
	public static final String TABLE_NAME = "SPSocialProfileViewAudit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "spSocialProfileViewAuditId", Types.BIGINT },
			{ "loggedInUserId", Types.BIGINT },
			{ "profileUserId", Types.BIGINT },
			{ "lastViewDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table SPSocialProfileViewAudit (uuid_ VARCHAR(75) null,spSocialProfileViewAuditId BIGINT(20) not null primary key,loggedInUserId BIGINT(20),profileUserId BIGINT(20),lastViewDate DATETIME null)";
	public static final String TABLE_SQL_DROP = "drop table SPSocialProfileViewAudit";
	public static final String ORDER_BY_JPQL = " ORDER BY socialProfileViewAudit.socialProfileViewAuditId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPSocialProfileViewAudit.spSocialProfileViewAuditId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit"),
			true);
	public static long LOGGEDINUSERID_COLUMN_BITMASK = 1L;
	public static long PROFILEUSERID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long SOCIALPROFILEVIEWAUDITID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit"));

	public SocialProfileViewAuditModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _socialProfileViewAuditId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSocialProfileViewAuditId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _socialProfileViewAuditId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SocialProfileViewAudit.class;
	}

	@Override
	public String getModelClassName() {
		return SocialProfileViewAudit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("socialProfileViewAuditId", getSocialProfileViewAuditId());
		attributes.put("loggedInUserId", getLoggedInUserId());
		attributes.put("profileUserId", getProfileUserId());
		attributes.put("lastViewDate", getLastViewDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long socialProfileViewAuditId = (Long)attributes.get(
				"socialProfileViewAuditId");

		if (socialProfileViewAuditId != null) {
			setSocialProfileViewAuditId(socialProfileViewAuditId);
		}

		Long loggedInUserId = (Long)attributes.get("loggedInUserId");

		if (loggedInUserId != null) {
			setLoggedInUserId(loggedInUserId);
		}

		Long profileUserId = (Long)attributes.get("profileUserId");

		if (profileUserId != null) {
			setProfileUserId(profileUserId);
		}

		Date lastViewDate = (Date)attributes.get("lastViewDate");

		if (lastViewDate != null) {
			setLastViewDate(lastViewDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSocialProfileViewAuditId() {
		return _socialProfileViewAuditId;
	}

	@Override
	public void setSocialProfileViewAuditId(long socialProfileViewAuditId) {
		_socialProfileViewAuditId = socialProfileViewAuditId;
	}

	@Override
	public long getLoggedInUserId() {
		return _loggedInUserId;
	}

	@Override
	public void setLoggedInUserId(long loggedInUserId) {
		_columnBitmask |= LOGGEDINUSERID_COLUMN_BITMASK;

		if (!_setOriginalLoggedInUserId) {
			_setOriginalLoggedInUserId = true;

			_originalLoggedInUserId = _loggedInUserId;
		}

		_loggedInUserId = loggedInUserId;
	}

	@Override
	public String getLoggedInUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getLoggedInUserId(), "uuid",
			_loggedInUserUuid);
	}

	@Override
	public void setLoggedInUserUuid(String loggedInUserUuid) {
		_loggedInUserUuid = loggedInUserUuid;
	}

	public long getOriginalLoggedInUserId() {
		return _originalLoggedInUserId;
	}

	@Override
	public long getProfileUserId() {
		return _profileUserId;
	}

	@Override
	public void setProfileUserId(long profileUserId) {
		_columnBitmask |= PROFILEUSERID_COLUMN_BITMASK;

		if (!_setOriginalProfileUserId) {
			_setOriginalProfileUserId = true;

			_originalProfileUserId = _profileUserId;
		}

		_profileUserId = profileUserId;
	}

	@Override
	public String getProfileUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getProfileUserId(), "uuid",
			_profileUserUuid);
	}

	@Override
	public void setProfileUserUuid(String profileUserUuid) {
		_profileUserUuid = profileUserUuid;
	}

	public long getOriginalProfileUserId() {
		return _originalProfileUserId;
	}

	@Override
	public Date getLastViewDate() {
		return _lastViewDate;
	}

	@Override
	public void setLastViewDate(Date lastViewDate) {
		_lastViewDate = lastViewDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SocialProfileViewAudit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SocialProfileViewAudit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SocialProfileViewAudit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SocialProfileViewAuditImpl socialProfileViewAuditImpl = new SocialProfileViewAuditImpl();

		socialProfileViewAuditImpl.setUuid(getUuid());
		socialProfileViewAuditImpl.setSocialProfileViewAuditId(getSocialProfileViewAuditId());
		socialProfileViewAuditImpl.setLoggedInUserId(getLoggedInUserId());
		socialProfileViewAuditImpl.setProfileUserId(getProfileUserId());
		socialProfileViewAuditImpl.setLastViewDate(getLastViewDate());

		socialProfileViewAuditImpl.resetOriginalValues();

		return socialProfileViewAuditImpl;
	}

	@Override
	public int compareTo(SocialProfileViewAudit socialProfileViewAudit) {
		long primaryKey = socialProfileViewAudit.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SocialProfileViewAudit)) {
			return false;
		}

		SocialProfileViewAudit socialProfileViewAudit = (SocialProfileViewAudit)obj;

		long primaryKey = socialProfileViewAudit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SocialProfileViewAuditModelImpl socialProfileViewAuditModelImpl = this;

		socialProfileViewAuditModelImpl._originalUuid = socialProfileViewAuditModelImpl._uuid;

		socialProfileViewAuditModelImpl._originalLoggedInUserId = socialProfileViewAuditModelImpl._loggedInUserId;

		socialProfileViewAuditModelImpl._setOriginalLoggedInUserId = false;

		socialProfileViewAuditModelImpl._originalProfileUserId = socialProfileViewAuditModelImpl._profileUserId;

		socialProfileViewAuditModelImpl._setOriginalProfileUserId = false;

		socialProfileViewAuditModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SocialProfileViewAudit> toCacheModel() {
		SocialProfileViewAuditCacheModel socialProfileViewAuditCacheModel = new SocialProfileViewAuditCacheModel();

		socialProfileViewAuditCacheModel.uuid = getUuid();

		String uuid = socialProfileViewAuditCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			socialProfileViewAuditCacheModel.uuid = null;
		}

		socialProfileViewAuditCacheModel.socialProfileViewAuditId = getSocialProfileViewAuditId();

		socialProfileViewAuditCacheModel.loggedInUserId = getLoggedInUserId();

		socialProfileViewAuditCacheModel.profileUserId = getProfileUserId();

		Date lastViewDate = getLastViewDate();

		if (lastViewDate != null) {
			socialProfileViewAuditCacheModel.lastViewDate = lastViewDate.getTime();
		}
		else {
			socialProfileViewAuditCacheModel.lastViewDate = Long.MIN_VALUE;
		}

		return socialProfileViewAuditCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", socialProfileViewAuditId=");
		sb.append(getSocialProfileViewAuditId());
		sb.append(", loggedInUserId=");
		sb.append(getLoggedInUserId());
		sb.append(", profileUserId=");
		sb.append(getProfileUserId());
		sb.append(", lastViewDate=");
		sb.append(getLastViewDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spsocialprofile.model.SocialProfileViewAudit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialProfileViewAuditId</column-name><column-value><![CDATA[");
		sb.append(getSocialProfileViewAuditId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loggedInUserId</column-name><column-value><![CDATA[");
		sb.append(getLoggedInUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profileUserId</column-name><column-value><![CDATA[");
		sb.append(getProfileUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastViewDate</column-name><column-value><![CDATA[");
		sb.append(getLastViewDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SocialProfileViewAudit.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SocialProfileViewAudit.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _socialProfileViewAuditId;
	private long _loggedInUserId;
	private String _loggedInUserUuid;
	private long _originalLoggedInUserId;
	private boolean _setOriginalLoggedInUserId;
	private long _profileUserId;
	private String _profileUserUuid;
	private long _originalProfileUserId;
	private boolean _setOriginalProfileUserId;
	private Date _lastViewDate;
	private long _columnBitmask;
	private SocialProfileViewAudit _escapedModel;
}
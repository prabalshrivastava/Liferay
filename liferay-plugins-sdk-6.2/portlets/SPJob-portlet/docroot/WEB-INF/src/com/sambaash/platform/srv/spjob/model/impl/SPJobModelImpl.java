/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spjob.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spjob.model.SPJob;
import com.sambaash.platform.srv.spjob.model.SPJobModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPJob service. Represents a row in the &quot;SPJob&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spjob.model.SPJobModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPJobImpl}.
 * </p>
 *
 * @author harini
 * @see SPJobImpl
 * @see com.sambaash.platform.srv.spjob.model.SPJob
 * @see com.sambaash.platform.srv.spjob.model.SPJobModel
 * @generated
 */
public class SPJobModelImpl extends BaseModelImpl<SPJob> implements SPJobModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p job model instance should use the {@link com.sambaash.platform.srv.spjob.model.SPJob} interface instead.
	 */
	public static final String TABLE_NAME = "SPJob";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "jobId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createdBy", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "updatedBy", Types.BIGINT },
			{ "experience", Types.VARCHAR },
			{ "corporateName", Types.VARCHAR },
			{ "corporateId", Types.BIGINT },
			{ "jobTitle", Types.VARCHAR },
			{ "jobType", Types.VARCHAR },
			{ "jobLocation", Types.VARCHAR },
			{ "jobDescription", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "autoMatch", Types.BOOLEAN },
			{ "currency", Types.VARCHAR },
			{ "salary", Types.DOUBLE },
			{ "rate", Types.VARCHAR },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "closingDate", Types.TIMESTAMP },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR },
			{ "extra3", Types.VARCHAR },
			{ "extra4", Types.VARCHAR },
			{ "extra5", Types.VARCHAR },
			{ "notefto", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPJob (uuid_ VARCHAR(75) null,jobId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),createdBy BIGINT(20),createDate DATETIME null,modifiedDate DATETIME null,updatedBy BIGINT(20),experience VARCHAR(75) null,corporateName VARCHAR(75) null,corporateId BIGINT(20),jobTitle VARCHAR(75) null,jobType VARCHAR(75) null,jobLocation VARCHAR(75) null,jobDescription VARCHAR(75) null,status VARCHAR(75) null,autoMatch BOOLEAN,currency VARCHAR(75) null,salary DOUBLE,rate VARCHAR(75) null,startDate DATETIME null,endDate DATETIME null,closingDate DATETIME null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,extra4 VARCHAR(75) null,extra5 VARCHAR(75) null,notefto VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPJob";
	public static final String ORDER_BY_JPQL = " ORDER BY spJob.modifiedDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY SPJob.modifiedDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJob"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spjob.model.SPJob"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spjob.model.SPJob"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long CORPORATEID_COLUMN_BITMASK = 2L;
	public static long CORPORATENAME_COLUMN_BITMASK = 4L;
	public static long CREATEDBY_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long JOBLOCATION_COLUMN_BITMASK = 32L;
	public static long JOBTITLE_COLUMN_BITMASK = 64L;
	public static long JOBTYPE_COLUMN_BITMASK = 128L;
	public static long STATUS_COLUMN_BITMASK = 256L;
	public static long UUID_COLUMN_BITMASK = 512L;
	public static long MODIFIEDDATE_COLUMN_BITMASK = 1024L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spjob.model.SPJob"));

	public SPJobModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spJobId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpJobId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spJobId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPJob.class;
	}

	@Override
	public String getModelClassName() {
		return SPJob.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("spJobId", getSpJobId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("yearsOfExperience", getYearsOfExperience());
		attributes.put("corporateName", getCorporateName());
		attributes.put("corporateId", getCorporateId());
		attributes.put("jobTitle", getJobTitle());
		attributes.put("jobType", getJobType());
		attributes.put("jobLocation", getJobLocation());
		attributes.put("jobDescription", getJobDescription());
		attributes.put("status", getStatus());
		attributes.put("autoMatch", getAutoMatch());
		attributes.put("currency", getCurrency());
		attributes.put("salary", getSalary());
		attributes.put("rate", getRate());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("closingDate", getClosingDate());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());
		attributes.put("extra3", getExtra3());
		attributes.put("extra4", getExtra4());
		attributes.put("extra5", getExtra5());
		attributes.put("notefto", getNotefto());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long spJobId = (Long)attributes.get("spJobId");

		if (spJobId != null) {
			setSpJobId(spJobId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long updatedBy = (Long)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		String yearsOfExperience = (String)attributes.get("yearsOfExperience");

		if (yearsOfExperience != null) {
			setYearsOfExperience(yearsOfExperience);
		}

		String corporateName = (String)attributes.get("corporateName");

		if (corporateName != null) {
			setCorporateName(corporateName);
		}

		Long corporateId = (Long)attributes.get("corporateId");

		if (corporateId != null) {
			setCorporateId(corporateId);
		}

		String jobTitle = (String)attributes.get("jobTitle");

		if (jobTitle != null) {
			setJobTitle(jobTitle);
		}

		String jobType = (String)attributes.get("jobType");

		if (jobType != null) {
			setJobType(jobType);
		}

		String jobLocation = (String)attributes.get("jobLocation");

		if (jobLocation != null) {
			setJobLocation(jobLocation);
		}

		String jobDescription = (String)attributes.get("jobDescription");

		if (jobDescription != null) {
			setJobDescription(jobDescription);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Boolean autoMatch = (Boolean)attributes.get("autoMatch");

		if (autoMatch != null) {
			setAutoMatch(autoMatch);
		}

		String currency = (String)attributes.get("currency");

		if (currency != null) {
			setCurrency(currency);
		}

		Double salary = (Double)attributes.get("salary");

		if (salary != null) {
			setSalary(salary);
		}

		String rate = (String)attributes.get("rate");

		if (rate != null) {
			setRate(rate);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Date closingDate = (Date)attributes.get("closingDate");

		if (closingDate != null) {
			setClosingDate(closingDate);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}

		String extra3 = (String)attributes.get("extra3");

		if (extra3 != null) {
			setExtra3(extra3);
		}

		String extra4 = (String)attributes.get("extra4");

		if (extra4 != null) {
			setExtra4(extra4);
		}

		String extra5 = (String)attributes.get("extra5");

		if (extra5 != null) {
			setExtra5(extra5);
		}

		String notefto = (String)attributes.get("notefto");

		if (notefto != null) {
			setNotefto(notefto);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getSpJobId() {
		return _spJobId;
	}

	@Override
	public void setSpJobId(long spJobId) {
		_spJobId = spJobId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_columnBitmask |= CREATEDBY_COLUMN_BITMASK;

		if (!_setOriginalCreatedBy) {
			_setOriginalCreatedBy = true;

			_originalCreatedBy = _createdBy;
		}

		_createdBy = createdBy;
	}

	public long getOriginalCreatedBy() {
		return _originalCreatedBy;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getUpdatedBy() {
		return _updatedBy;
	}

	@Override
	public void setUpdatedBy(long updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public String getYearsOfExperience() {
		if (_yearsOfExperience == null) {
			return StringPool.BLANK;
		}
		else {
			return _yearsOfExperience;
		}
	}

	@Override
	public void setYearsOfExperience(String yearsOfExperience) {
		_yearsOfExperience = yearsOfExperience;
	}

	@Override
	public String getCorporateName() {
		if (_corporateName == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporateName;
		}
	}

	@Override
	public void setCorporateName(String corporateName) {
		_columnBitmask |= CORPORATENAME_COLUMN_BITMASK;

		if (_originalCorporateName == null) {
			_originalCorporateName = _corporateName;
		}

		_corporateName = corporateName;
	}

	public String getOriginalCorporateName() {
		return GetterUtil.getString(_originalCorporateName);
	}

	@Override
	public long getCorporateId() {
		return _corporateId;
	}

	@Override
	public void setCorporateId(long corporateId) {
		_columnBitmask |= CORPORATEID_COLUMN_BITMASK;

		if (!_setOriginalCorporateId) {
			_setOriginalCorporateId = true;

			_originalCorporateId = _corporateId;
		}

		_corporateId = corporateId;
	}

	public long getOriginalCorporateId() {
		return _originalCorporateId;
	}

	@Override
	public String getJobTitle() {
		if (_jobTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobTitle;
		}
	}

	@Override
	public void setJobTitle(String jobTitle) {
		_columnBitmask |= JOBTITLE_COLUMN_BITMASK;

		if (_originalJobTitle == null) {
			_originalJobTitle = _jobTitle;
		}

		_jobTitle = jobTitle;
	}

	public String getOriginalJobTitle() {
		return GetterUtil.getString(_originalJobTitle);
	}

	@Override
	public String getJobType() {
		if (_jobType == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobType;
		}
	}

	@Override
	public void setJobType(String jobType) {
		_columnBitmask |= JOBTYPE_COLUMN_BITMASK;

		if (_originalJobType == null) {
			_originalJobType = _jobType;
		}

		_jobType = jobType;
	}

	public String getOriginalJobType() {
		return GetterUtil.getString(_originalJobType);
	}

	@Override
	public String getJobLocation() {
		if (_jobLocation == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobLocation;
		}
	}

	@Override
	public void setJobLocation(String jobLocation) {
		_columnBitmask |= JOBLOCATION_COLUMN_BITMASK;

		if (_originalJobLocation == null) {
			_originalJobLocation = _jobLocation;
		}

		_jobLocation = jobLocation;
	}

	public String getOriginalJobLocation() {
		return GetterUtil.getString(_originalJobLocation);
	}

	@Override
	public String getJobDescription() {
		if (_jobDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _jobDescription;
		}
	}

	@Override
	public void setJobDescription(String jobDescription) {
		_jobDescription = jobDescription;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	@Override
	public boolean getAutoMatch() {
		return _autoMatch;
	}

	@Override
	public boolean isAutoMatch() {
		return _autoMatch;
	}

	@Override
	public void setAutoMatch(boolean autoMatch) {
		_autoMatch = autoMatch;
	}

	@Override
	public String getCurrency() {
		if (_currency == null) {
			return StringPool.BLANK;
		}
		else {
			return _currency;
		}
	}

	@Override
	public void setCurrency(String currency) {
		_currency = currency;
	}

	@Override
	public double getSalary() {
		return _salary;
	}

	@Override
	public void setSalary(double salary) {
		_salary = salary;
	}

	@Override
	public String getRate() {
		if (_rate == null) {
			return StringPool.BLANK;
		}
		else {
			return _rate;
		}
	}

	@Override
	public void setRate(String rate) {
		_rate = rate;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public Date getClosingDate() {
		return _closingDate;
	}

	@Override
	public void setClosingDate(Date closingDate) {
		_closingDate = closingDate;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_extra1 = extra1;
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public String getExtra4() {
		if (_extra4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra4;
		}
	}

	@Override
	public void setExtra4(String extra4) {
		_extra4 = extra4;
	}

	@Override
	public String getExtra5() {
		if (_extra5 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra5;
		}
	}

	@Override
	public void setExtra5(String extra5) {
		_extra5 = extra5;
	}

	@Override
	public String getNotefto() {
		if (_notefto == null) {
			return StringPool.BLANK;
		}
		else {
			return _notefto;
		}
	}

	@Override
	public void setNotefto(String notefto) {
		_notefto = notefto;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SPJob.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPJob.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPJob toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPJob)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPJobImpl spJobImpl = new SPJobImpl();

		spJobImpl.setUuid(getUuid());
		spJobImpl.setSpJobId(getSpJobId());
		spJobImpl.setGroupId(getGroupId());
		spJobImpl.setCompanyId(getCompanyId());
		spJobImpl.setUserId(getUserId());
		spJobImpl.setCreatedBy(getCreatedBy());
		spJobImpl.setCreateDate(getCreateDate());
		spJobImpl.setModifiedDate(getModifiedDate());
		spJobImpl.setUpdatedBy(getUpdatedBy());
		spJobImpl.setYearsOfExperience(getYearsOfExperience());
		spJobImpl.setCorporateName(getCorporateName());
		spJobImpl.setCorporateId(getCorporateId());
		spJobImpl.setJobTitle(getJobTitle());
		spJobImpl.setJobType(getJobType());
		spJobImpl.setJobLocation(getJobLocation());
		spJobImpl.setJobDescription(getJobDescription());
		spJobImpl.setStatus(getStatus());
		spJobImpl.setAutoMatch(getAutoMatch());
		spJobImpl.setCurrency(getCurrency());
		spJobImpl.setSalary(getSalary());
		spJobImpl.setRate(getRate());
		spJobImpl.setStartDate(getStartDate());
		spJobImpl.setEndDate(getEndDate());
		spJobImpl.setClosingDate(getClosingDate());
		spJobImpl.setExtra1(getExtra1());
		spJobImpl.setExtra2(getExtra2());
		spJobImpl.setExtra3(getExtra3());
		spJobImpl.setExtra4(getExtra4());
		spJobImpl.setExtra5(getExtra5());
		spJobImpl.setNotefto(getNotefto());

		spJobImpl.resetOriginalValues();

		return spJobImpl;
	}

	@Override
	public int compareTo(SPJob spJob) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(), spJob.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPJob)) {
			return false;
		}

		SPJob spJob = (SPJob)obj;

		long primaryKey = spJob.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPJobModelImpl spJobModelImpl = this;

		spJobModelImpl._originalUuid = spJobModelImpl._uuid;

		spJobModelImpl._originalGroupId = spJobModelImpl._groupId;

		spJobModelImpl._setOriginalGroupId = false;

		spJobModelImpl._originalCompanyId = spJobModelImpl._companyId;

		spJobModelImpl._setOriginalCompanyId = false;

		spJobModelImpl._originalCreatedBy = spJobModelImpl._createdBy;

		spJobModelImpl._setOriginalCreatedBy = false;

		spJobModelImpl._originalCorporateName = spJobModelImpl._corporateName;

		spJobModelImpl._originalCorporateId = spJobModelImpl._corporateId;

		spJobModelImpl._setOriginalCorporateId = false;

		spJobModelImpl._originalJobTitle = spJobModelImpl._jobTitle;

		spJobModelImpl._originalJobType = spJobModelImpl._jobType;

		spJobModelImpl._originalJobLocation = spJobModelImpl._jobLocation;

		spJobModelImpl._originalStatus = spJobModelImpl._status;

		spJobModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPJob> toCacheModel() {
		SPJobCacheModel spJobCacheModel = new SPJobCacheModel();

		spJobCacheModel.uuid = getUuid();

		String uuid = spJobCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			spJobCacheModel.uuid = null;
		}

		spJobCacheModel.spJobId = getSpJobId();

		spJobCacheModel.groupId = getGroupId();

		spJobCacheModel.companyId = getCompanyId();

		spJobCacheModel.userId = getUserId();

		spJobCacheModel.createdBy = getCreatedBy();

		Date createDate = getCreateDate();

		if (createDate != null) {
			spJobCacheModel.createDate = createDate.getTime();
		}
		else {
			spJobCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spJobCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spJobCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spJobCacheModel.updatedBy = getUpdatedBy();

		spJobCacheModel.yearsOfExperience = getYearsOfExperience();

		String yearsOfExperience = spJobCacheModel.yearsOfExperience;

		if ((yearsOfExperience != null) && (yearsOfExperience.length() == 0)) {
			spJobCacheModel.yearsOfExperience = null;
		}

		spJobCacheModel.corporateName = getCorporateName();

		String corporateName = spJobCacheModel.corporateName;

		if ((corporateName != null) && (corporateName.length() == 0)) {
			spJobCacheModel.corporateName = null;
		}

		spJobCacheModel.corporateId = getCorporateId();

		spJobCacheModel.jobTitle = getJobTitle();

		String jobTitle = spJobCacheModel.jobTitle;

		if ((jobTitle != null) && (jobTitle.length() == 0)) {
			spJobCacheModel.jobTitle = null;
		}

		spJobCacheModel.jobType = getJobType();

		String jobType = spJobCacheModel.jobType;

		if ((jobType != null) && (jobType.length() == 0)) {
			spJobCacheModel.jobType = null;
		}

		spJobCacheModel.jobLocation = getJobLocation();

		String jobLocation = spJobCacheModel.jobLocation;

		if ((jobLocation != null) && (jobLocation.length() == 0)) {
			spJobCacheModel.jobLocation = null;
		}

		spJobCacheModel.jobDescription = getJobDescription();

		String jobDescription = spJobCacheModel.jobDescription;

		if ((jobDescription != null) && (jobDescription.length() == 0)) {
			spJobCacheModel.jobDescription = null;
		}

		spJobCacheModel.status = getStatus();

		String status = spJobCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			spJobCacheModel.status = null;
		}

		spJobCacheModel.autoMatch = getAutoMatch();

		spJobCacheModel.currency = getCurrency();

		String currency = spJobCacheModel.currency;

		if ((currency != null) && (currency.length() == 0)) {
			spJobCacheModel.currency = null;
		}

		spJobCacheModel.salary = getSalary();

		spJobCacheModel.rate = getRate();

		String rate = spJobCacheModel.rate;

		if ((rate != null) && (rate.length() == 0)) {
			spJobCacheModel.rate = null;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			spJobCacheModel.startDate = startDate.getTime();
		}
		else {
			spJobCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			spJobCacheModel.endDate = endDate.getTime();
		}
		else {
			spJobCacheModel.endDate = Long.MIN_VALUE;
		}

		Date closingDate = getClosingDate();

		if (closingDate != null) {
			spJobCacheModel.closingDate = closingDate.getTime();
		}
		else {
			spJobCacheModel.closingDate = Long.MIN_VALUE;
		}

		spJobCacheModel.extra1 = getExtra1();

		String extra1 = spJobCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			spJobCacheModel.extra1 = null;
		}

		spJobCacheModel.extra2 = getExtra2();

		String extra2 = spJobCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			spJobCacheModel.extra2 = null;
		}

		spJobCacheModel.extra3 = getExtra3();

		String extra3 = spJobCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			spJobCacheModel.extra3 = null;
		}

		spJobCacheModel.extra4 = getExtra4();

		String extra4 = spJobCacheModel.extra4;

		if ((extra4 != null) && (extra4.length() == 0)) {
			spJobCacheModel.extra4 = null;
		}

		spJobCacheModel.extra5 = getExtra5();

		String extra5 = spJobCacheModel.extra5;

		if ((extra5 != null) && (extra5.length() == 0)) {
			spJobCacheModel.extra5 = null;
		}

		spJobCacheModel.notefto = getNotefto();

		String notefto = spJobCacheModel.notefto;

		if ((notefto != null) && (notefto.length() == 0)) {
			spJobCacheModel.notefto = null;
		}

		return spJobCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", spJobId=");
		sb.append(getSpJobId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", yearsOfExperience=");
		sb.append(getYearsOfExperience());
		sb.append(", corporateName=");
		sb.append(getCorporateName());
		sb.append(", corporateId=");
		sb.append(getCorporateId());
		sb.append(", jobTitle=");
		sb.append(getJobTitle());
		sb.append(", jobType=");
		sb.append(getJobType());
		sb.append(", jobLocation=");
		sb.append(getJobLocation());
		sb.append(", jobDescription=");
		sb.append(getJobDescription());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", autoMatch=");
		sb.append(getAutoMatch());
		sb.append(", currency=");
		sb.append(getCurrency());
		sb.append(", salary=");
		sb.append(getSalary());
		sb.append(", rate=");
		sb.append(getRate());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", closingDate=");
		sb.append(getClosingDate());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append(", extra3=");
		sb.append(getExtra3());
		sb.append(", extra4=");
		sb.append(getExtra4());
		sb.append(", extra5=");
		sb.append(getExtra5());
		sb.append(", notefto=");
		sb.append(getNotefto());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.spjob.model.SPJob");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spJobId</column-name><column-value><![CDATA[");
		sb.append(getSpJobId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yearsOfExperience</column-name><column-value><![CDATA[");
		sb.append(getYearsOfExperience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporateName</column-name><column-value><![CDATA[");
		sb.append(getCorporateName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporateId</column-name><column-value><![CDATA[");
		sb.append(getCorporateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobTitle</column-name><column-value><![CDATA[");
		sb.append(getJobTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobType</column-name><column-value><![CDATA[");
		sb.append(getJobType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobLocation</column-name><column-value><![CDATA[");
		sb.append(getJobLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jobDescription</column-name><column-value><![CDATA[");
		sb.append(getJobDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>autoMatch</column-name><column-value><![CDATA[");
		sb.append(getAutoMatch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currency</column-name><column-value><![CDATA[");
		sb.append(getCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>salary</column-name><column-value><![CDATA[");
		sb.append(getSalary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rate</column-name><column-value><![CDATA[");
		sb.append(getRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>closingDate</column-name><column-value><![CDATA[");
		sb.append(getClosingDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra3</column-name><column-value><![CDATA[");
		sb.append(getExtra3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra4</column-name><column-value><![CDATA[");
		sb.append(getExtra4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra5</column-name><column-value><![CDATA[");
		sb.append(getExtra5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notefto</column-name><column-value><![CDATA[");
		sb.append(getNotefto());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPJob.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { SPJob.class };
	private String _uuid;
	private String _originalUuid;
	private long _spJobId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private long _createdBy;
	private long _originalCreatedBy;
	private boolean _setOriginalCreatedBy;
	private Date _createDate;
	private Date _modifiedDate;
	private long _updatedBy;
	private String _yearsOfExperience;
	private String _corporateName;
	private String _originalCorporateName;
	private long _corporateId;
	private long _originalCorporateId;
	private boolean _setOriginalCorporateId;
	private String _jobTitle;
	private String _originalJobTitle;
	private String _jobType;
	private String _originalJobType;
	private String _jobLocation;
	private String _originalJobLocation;
	private String _jobDescription;
	private String _status;
	private String _originalStatus;
	private boolean _autoMatch;
	private String _currency;
	private double _salary;
	private String _rate;
	private Date _startDate;
	private Date _endDate;
	private Date _closingDate;
	private String _extra1;
	private String _extra2;
	private String _extra3;
	private String _extra4;
	private String _extra5;
	private String _notefto;
	private long _columnBitmask;
	private SPJob _escapedModel;
}
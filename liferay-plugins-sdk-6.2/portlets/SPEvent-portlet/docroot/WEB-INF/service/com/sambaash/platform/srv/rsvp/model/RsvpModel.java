/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.rsvp.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Rsvp service. Represents a row in the &quot;SPRsvp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.sambaash.platform.srv.rsvp.model.impl.RsvpModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.sambaash.platform.srv.rsvp.model.impl.RsvpImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see Rsvp
 * @see com.sambaash.platform.srv.rsvp.model.impl.RsvpImpl
 * @see com.sambaash.platform.srv.rsvp.model.impl.RsvpModelImpl
 * @generated
 */
public interface RsvpModel extends BaseModel<Rsvp>, StagedGroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a rsvp model instance should use the {@link Rsvp} interface instead.
	 */

	/**
	 * Returns the primary key of this rsvp.
	 *
	 * @return the primary key of this rsvp
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this rsvp.
	 *
	 * @param primaryKey the primary key of this rsvp
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this rsvp.
	 *
	 * @return the uuid of this rsvp
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this rsvp.
	 *
	 * @param uuid the uuid of this rsvp
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the rsvp ID of this rsvp.
	 *
	 * @return the rsvp ID of this rsvp
	 */
	public long getRsvpId();

	/**
	 * Sets the rsvp ID of this rsvp.
	 *
	 * @param rsvpId the rsvp ID of this rsvp
	 */
	public void setRsvpId(long rsvpId);

	/**
	 * Returns the group ID of this rsvp.
	 *
	 * @return the group ID of this rsvp
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this rsvp.
	 *
	 * @param groupId the group ID of this rsvp
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this rsvp.
	 *
	 * @return the company ID of this rsvp
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this rsvp.
	 *
	 * @param companyId the company ID of this rsvp
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this rsvp.
	 *
	 * @return the user ID of this rsvp
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this rsvp.
	 *
	 * @param userId the user ID of this rsvp
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this rsvp.
	 *
	 * @return the user uuid of this rsvp
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this rsvp.
	 *
	 * @param userUuid the user uuid of this rsvp
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this rsvp.
	 *
	 * @return the user name of this rsvp
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this rsvp.
	 *
	 * @param userName the user name of this rsvp
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this rsvp.
	 *
	 * @return the create date of this rsvp
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this rsvp.
	 *
	 * @param createDate the create date of this rsvp
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this rsvp.
	 *
	 * @return the modified date of this rsvp
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this rsvp.
	 *
	 * @param modifiedDate the modified date of this rsvp
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the title of this rsvp.
	 *
	 * @return the title of this rsvp
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this rsvp.
	 *
	 * @param title the title of this rsvp
	 */
	public void setTitle(String title);

	/**
	 * Returns the description of this rsvp.
	 *
	 * @return the description of this rsvp
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this rsvp.
	 *
	 * @param description the description of this rsvp
	 */
	public void setDescription(String description);

	/**
	 * Returns the event ID of this rsvp.
	 *
	 * @return the event ID of this rsvp
	 */
	public long getEventId();

	/**
	 * Sets the event ID of this rsvp.
	 *
	 * @param eventId the event ID of this rsvp
	 */
	public void setEventId(long eventId);

	/**
	 * Returns the sp asset type ID of this rsvp.
	 *
	 * @return the sp asset type ID of this rsvp
	 */
	public long getSpAssetTypeId();

	/**
	 * Sets the sp asset type ID of this rsvp.
	 *
	 * @param spAssetTypeId the sp asset type ID of this rsvp
	 */
	public void setSpAssetTypeId(long spAssetTypeId);

	/**
	 * Returns the status of this rsvp.
	 *
	 * @return the status of this rsvp
	 */
	public boolean getStatus();

	/**
	 * Returns <code>true</code> if this rsvp is status.
	 *
	 * @return <code>true</code> if this rsvp is status; <code>false</code> otherwise
	 */
	public boolean isStatus();

	/**
	 * Sets whether this rsvp is status.
	 *
	 * @param status the status of this rsvp
	 */
	public void setStatus(boolean status);

	/**
	 * Returns the rsvp url of this rsvp.
	 *
	 * @return the rsvp url of this rsvp
	 */
	@AutoEscape
	public String getRsvpUrl();

	/**
	 * Sets the rsvp url of this rsvp.
	 *
	 * @param rsvpUrl the rsvp url of this rsvp
	 */
	public void setRsvpUrl(String rsvpUrl);

	/**
	 * Returns the processing of this rsvp.
	 *
	 * @return the processing of this rsvp
	 */
	public int getProcessing();

	/**
	 * Sets the processing of this rsvp.
	 *
	 * @param processing the processing of this rsvp
	 */
	public void setProcessing(int processing);

	/**
	 * Returns the price of this rsvp.
	 *
	 * @return the price of this rsvp
	 */
	@AutoEscape
	public String getPrice();

	/**
	 * Sets the price of this rsvp.
	 *
	 * @param price the price of this rsvp
	 */
	public void setPrice(String price);

	/**
	 * Returns the currency of this rsvp.
	 *
	 * @return the currency of this rsvp
	 */
	@AutoEscape
	public String getCurrency();

	/**
	 * Sets the currency of this rsvp.
	 *
	 * @param currency the currency of this rsvp
	 */
	public void setCurrency(String currency);

	/**
	 * Returns the tax of this rsvp.
	 *
	 * @return the tax of this rsvp
	 */
	@AutoEscape
	public String getTax();

	/**
	 * Sets the tax of this rsvp.
	 *
	 * @param tax the tax of this rsvp
	 */
	public void setTax(String tax);

	/**
	 * Returns the account ID of this rsvp.
	 *
	 * @return the account ID of this rsvp
	 */
	@AutoEscape
	public String getAccountId();

	/**
	 * Sets the account ID of this rsvp.
	 *
	 * @param accountId the account ID of this rsvp
	 */
	public void setAccountId(String accountId);

	/**
	 * Returns the payment flag of this rsvp.
	 *
	 * @return the payment flag of this rsvp
	 */
	public boolean getPaymentFlag();

	/**
	 * Returns <code>true</code> if this rsvp is payment flag.
	 *
	 * @return <code>true</code> if this rsvp is payment flag; <code>false</code> otherwise
	 */
	public boolean isPaymentFlag();

	/**
	 * Sets whether this rsvp is payment flag.
	 *
	 * @param paymentFlag the payment flag of this rsvp
	 */
	public void setPaymentFlag(boolean paymentFlag);

	/**
	 * Returns the register flag of this rsvp.
	 *
	 * @return the register flag of this rsvp
	 */
	public boolean getRegisterFlag();

	/**
	 * Returns <code>true</code> if this rsvp is register flag.
	 *
	 * @return <code>true</code> if this rsvp is register flag; <code>false</code> otherwise
	 */
	public boolean isRegisterFlag();

	/**
	 * Sets whether this rsvp is register flag.
	 *
	 * @param registerFlag the register flag of this rsvp
	 */
	public void setRegisterFlag(boolean registerFlag);

	/**
	 * Returns the ticket flag of this rsvp.
	 *
	 * @return the ticket flag of this rsvp
	 */
	public boolean getTicketFlag();

	/**
	 * Returns <code>true</code> if this rsvp is ticket flag.
	 *
	 * @return <code>true</code> if this rsvp is ticket flag; <code>false</code> otherwise
	 */
	public boolean isTicketFlag();

	/**
	 * Sets whether this rsvp is ticket flag.
	 *
	 * @param ticketFlag the ticket flag of this rsvp
	 */
	public void setTicketFlag(boolean ticketFlag);

	/**
	 * Returns the dynamic section name of this rsvp.
	 *
	 * @return the dynamic section name of this rsvp
	 */
	@AutoEscape
	public String getDynamicSectionName();

	/**
	 * Sets the dynamic section name of this rsvp.
	 *
	 * @param dynamicSectionName the dynamic section name of this rsvp
	 */
	public void setDynamicSectionName(String dynamicSectionName);

	/**
	 * Returns the cc email of this rsvp.
	 *
	 * @return the cc email of this rsvp
	 */
	public boolean getCcEmail();

	/**
	 * Returns <code>true</code> if this rsvp is cc email.
	 *
	 * @return <code>true</code> if this rsvp is cc email; <code>false</code> otherwise
	 */
	public boolean isCcEmail();

	/**
	 * Sets whether this rsvp is cc email.
	 *
	 * @param ccEmail the cc email of this rsvp
	 */
	public void setCcEmail(boolean ccEmail);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.sambaash.platform.srv.rsvp.model.Rsvp rsvp);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.sambaash.platform.srv.rsvp.model.Rsvp> toCacheModel();

	@Override
	public com.sambaash.platform.srv.rsvp.model.Rsvp toEscapedModel();

	@Override
	public com.sambaash.platform.srv.rsvp.model.Rsvp toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}
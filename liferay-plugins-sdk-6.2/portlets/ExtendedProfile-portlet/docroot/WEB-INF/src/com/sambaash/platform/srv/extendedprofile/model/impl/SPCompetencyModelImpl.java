/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.extendedprofile.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.extendedprofile.model.SPCompetency;
import com.sambaash.platform.srv.extendedprofile.model.SPCompetencyModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SPCompetency service. Represents a row in the &quot;SPCompetency&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.extendedprofile.model.SPCompetencyModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SPCompetencyImpl}.
 * </p>
 *
 * @author harini
 * @see SPCompetencyImpl
 * @see com.sambaash.platform.srv.extendedprofile.model.SPCompetency
 * @see com.sambaash.platform.srv.extendedprofile.model.SPCompetencyModel
 * @generated
 */
public class SPCompetencyModelImpl extends BaseModelImpl<SPCompetency>
	implements SPCompetencyModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a s p competency model instance should use the {@link com.sambaash.platform.srv.extendedprofile.model.SPCompetency} interface instead.
	 */
	public static final String TABLE_NAME = "SPCompetency";
	public static final Object[][] TABLE_COLUMNS = {
			{ "classpk", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "categoryId", Types.BIGINT },
			{ "competencyId", Types.BIGINT },
			{ "competencyLevelId", Types.BIGINT },
			{ "belongsToJobRole", Types.BIGINT },
			{ "publicView", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table SPCompetency (classpk BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,categoryId BIGINT(20),competencyId BIGINT(20),competencyLevelId BIGINT(20),belongsToJobRole BIGINT(20),publicView BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table SPCompetency";
	public static final String ORDER_BY_JPQL = " ORDER BY spCompetency.userId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPCompetency.userId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.extendedprofile.model.SPCompetency"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.extendedprofile.model.SPCompetency"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.extendedprofile.model.SPCompetency"),
			true);
	public static long BELONGSTOJOBROLE_COLUMN_BITMASK = 1L;
	public static long CATEGORYID_COLUMN_BITMASK = 2L;
	public static long COMPETENCYID_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.extendedprofile.model.SPCompetency"));

	public SPCompetencyModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _classpk;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setClasspk(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _classpk;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SPCompetency.class;
	}

	@Override
	public String getModelClassName() {
		return SPCompetency.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("classpk", getClasspk());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("categoryId", getCategoryId());
		attributes.put("competencyId", getCompetencyId());
		attributes.put("competencyLevelId", getCompetencyLevelId());
		attributes.put("belongsToJobRole", getBelongsToJobRole());
		attributes.put("publicView", getPublicView());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long classpk = (Long)attributes.get("classpk");

		if (classpk != null) {
			setClasspk(classpk);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long competencyId = (Long)attributes.get("competencyId");

		if (competencyId != null) {
			setCompetencyId(competencyId);
		}

		Long competencyLevelId = (Long)attributes.get("competencyLevelId");

		if (competencyLevelId != null) {
			setCompetencyLevelId(competencyLevelId);
		}

		Long belongsToJobRole = (Long)attributes.get("belongsToJobRole");

		if (belongsToJobRole != null) {
			setBelongsToJobRole(belongsToJobRole);
		}

		Boolean publicView = (Boolean)attributes.get("publicView");

		if (publicView != null) {
			setPublicView(publicView);
		}
	}

	@Override
	public long getClasspk() {
		return _classpk;
	}

	@Override
	public void setClasspk(long classpk) {
		_classpk = classpk;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask = -1L;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	@Override
	public long getCompetencyId() {
		return _competencyId;
	}

	@Override
	public void setCompetencyId(long competencyId) {
		_columnBitmask |= COMPETENCYID_COLUMN_BITMASK;

		if (!_setOriginalCompetencyId) {
			_setOriginalCompetencyId = true;

			_originalCompetencyId = _competencyId;
		}

		_competencyId = competencyId;
	}

	public long getOriginalCompetencyId() {
		return _originalCompetencyId;
	}

	@Override
	public long getCompetencyLevelId() {
		return _competencyLevelId;
	}

	@Override
	public void setCompetencyLevelId(long competencyLevelId) {
		_competencyLevelId = competencyLevelId;
	}

	@Override
	public long getBelongsToJobRole() {
		return _belongsToJobRole;
	}

	@Override
	public void setBelongsToJobRole(long belongsToJobRole) {
		_columnBitmask |= BELONGSTOJOBROLE_COLUMN_BITMASK;

		if (!_setOriginalBelongsToJobRole) {
			_setOriginalBelongsToJobRole = true;

			_originalBelongsToJobRole = _belongsToJobRole;
		}

		_belongsToJobRole = belongsToJobRole;
	}

	public long getOriginalBelongsToJobRole() {
		return _originalBelongsToJobRole;
	}

	@Override
	public boolean getPublicView() {
		return _publicView;
	}

	@Override
	public boolean isPublicView() {
		return _publicView;
	}

	@Override
	public void setPublicView(boolean publicView) {
		_publicView = publicView;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SPCompetency.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SPCompetency toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SPCompetency)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SPCompetencyImpl spCompetencyImpl = new SPCompetencyImpl();

		spCompetencyImpl.setClasspk(getClasspk());
		spCompetencyImpl.setGroupId(getGroupId());
		spCompetencyImpl.setCompanyId(getCompanyId());
		spCompetencyImpl.setUserId(getUserId());
		spCompetencyImpl.setUserName(getUserName());
		spCompetencyImpl.setCreateDate(getCreateDate());
		spCompetencyImpl.setModifiedDate(getModifiedDate());
		spCompetencyImpl.setCategoryId(getCategoryId());
		spCompetencyImpl.setCompetencyId(getCompetencyId());
		spCompetencyImpl.setCompetencyLevelId(getCompetencyLevelId());
		spCompetencyImpl.setBelongsToJobRole(getBelongsToJobRole());
		spCompetencyImpl.setPublicView(getPublicView());

		spCompetencyImpl.resetOriginalValues();

		return spCompetencyImpl;
	}

	@Override
	public int compareTo(SPCompetency spCompetency) {
		int value = 0;

		if (getUserId() < spCompetency.getUserId()) {
			value = -1;
		}
		else if (getUserId() > spCompetency.getUserId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SPCompetency)) {
			return false;
		}

		SPCompetency spCompetency = (SPCompetency)obj;

		long primaryKey = spCompetency.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SPCompetencyModelImpl spCompetencyModelImpl = this;

		spCompetencyModelImpl._originalUserId = spCompetencyModelImpl._userId;

		spCompetencyModelImpl._setOriginalUserId = false;

		spCompetencyModelImpl._originalCategoryId = spCompetencyModelImpl._categoryId;

		spCompetencyModelImpl._setOriginalCategoryId = false;

		spCompetencyModelImpl._originalCompetencyId = spCompetencyModelImpl._competencyId;

		spCompetencyModelImpl._setOriginalCompetencyId = false;

		spCompetencyModelImpl._originalBelongsToJobRole = spCompetencyModelImpl._belongsToJobRole;

		spCompetencyModelImpl._setOriginalBelongsToJobRole = false;

		spCompetencyModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SPCompetency> toCacheModel() {
		SPCompetencyCacheModel spCompetencyCacheModel = new SPCompetencyCacheModel();

		spCompetencyCacheModel.classpk = getClasspk();

		spCompetencyCacheModel.groupId = getGroupId();

		spCompetencyCacheModel.companyId = getCompanyId();

		spCompetencyCacheModel.userId = getUserId();

		spCompetencyCacheModel.userName = getUserName();

		String userName = spCompetencyCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			spCompetencyCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			spCompetencyCacheModel.createDate = createDate.getTime();
		}
		else {
			spCompetencyCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			spCompetencyCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			spCompetencyCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		spCompetencyCacheModel.categoryId = getCategoryId();

		spCompetencyCacheModel.competencyId = getCompetencyId();

		spCompetencyCacheModel.competencyLevelId = getCompetencyLevelId();

		spCompetencyCacheModel.belongsToJobRole = getBelongsToJobRole();

		spCompetencyCacheModel.publicView = getPublicView();

		return spCompetencyCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{classpk=");
		sb.append(getClasspk());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", competencyId=");
		sb.append(getCompetencyId());
		sb.append(", competencyLevelId=");
		sb.append(getCompetencyLevelId());
		sb.append(", belongsToJobRole=");
		sb.append(getBelongsToJobRole());
		sb.append(", publicView=");
		sb.append(getPublicView());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.extendedprofile.model.SPCompetency");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>classpk</column-name><column-value><![CDATA[");
		sb.append(getClasspk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>competencyId</column-name><column-value><![CDATA[");
		sb.append(getCompetencyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>competencyLevelId</column-name><column-value><![CDATA[");
		sb.append(getCompetencyLevelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>belongsToJobRole</column-name><column-value><![CDATA[");
		sb.append(getBelongsToJobRole());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publicView</column-name><column-value><![CDATA[");
		sb.append(getPublicView());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SPCompetency.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SPCompetency.class
		};
	private long _classpk;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _competencyId;
	private long _originalCompetencyId;
	private boolean _setOriginalCompetencyId;
	private long _competencyLevelId;
	private long _belongsToJobRole;
	private long _originalBelongsToJobRole;
	private boolean _setOriginalBelongsToJobRole;
	private boolean _publicView;
	private long _columnBitmask;
	private SPCompetency _escapedModel;
}
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.rsvp.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail;
import com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalService;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpCoParticipantDetailPersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpDetailFinder;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpDetailPersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpDiscountPersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpPaymentPersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpPersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpPromoCodePersistence;
import com.sambaash.platform.srv.rsvp.service.persistence.RsvpTicketPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the rsvp co participant detail local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sambaash.platform.srv.rsvp.service.impl.RsvpCoParticipantDetailLocalServiceImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see com.sambaash.platform.srv.rsvp.service.impl.RsvpCoParticipantDetailLocalServiceImpl
 * @see com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalServiceUtil
 * @generated
 */
public abstract class RsvpCoParticipantDetailLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements RsvpCoParticipantDetailLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalServiceUtil} to access the rsvp co participant detail local service.
	 */

	/**
	 * Adds the rsvp co participant detail to the database. Also notifies the appropriate model listeners.
	 *
	 * @param rsvpCoParticipantDetail the rsvp co participant detail
	 * @return the rsvp co participant detail that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public RsvpCoParticipantDetail addRsvpCoParticipantDetail(
		RsvpCoParticipantDetail rsvpCoParticipantDetail)
		throws SystemException {
		rsvpCoParticipantDetail.setNew(true);

		return rsvpCoParticipantDetailPersistence.update(rsvpCoParticipantDetail);
	}

	/**
	 * Creates a new rsvp co participant detail with the primary key. Does not add the rsvp co participant detail to the database.
	 *
	 * @param rsvpCoParticipantDetailId the primary key for the new rsvp co participant detail
	 * @return the new rsvp co participant detail
	 */
	@Override
	public RsvpCoParticipantDetail createRsvpCoParticipantDetail(
		long rsvpCoParticipantDetailId) {
		return rsvpCoParticipantDetailPersistence.create(rsvpCoParticipantDetailId);
	}

	/**
	 * Deletes the rsvp co participant detail with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param rsvpCoParticipantDetailId the primary key of the rsvp co participant detail
	 * @return the rsvp co participant detail that was removed
	 * @throws PortalException if a rsvp co participant detail with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public RsvpCoParticipantDetail deleteRsvpCoParticipantDetail(
		long rsvpCoParticipantDetailId) throws PortalException, SystemException {
		return rsvpCoParticipantDetailPersistence.remove(rsvpCoParticipantDetailId);
	}

	/**
	 * Deletes the rsvp co participant detail from the database. Also notifies the appropriate model listeners.
	 *
	 * @param rsvpCoParticipantDetail the rsvp co participant detail
	 * @return the rsvp co participant detail that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public RsvpCoParticipantDetail deleteRsvpCoParticipantDetail(
		RsvpCoParticipantDetail rsvpCoParticipantDetail)
		throws SystemException {
		return rsvpCoParticipantDetailPersistence.remove(rsvpCoParticipantDetail);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(RsvpCoParticipantDetail.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return rsvpCoParticipantDetailPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.rsvp.model.impl.RsvpCoParticipantDetailModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return rsvpCoParticipantDetailPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.rsvp.model.impl.RsvpCoParticipantDetailModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return rsvpCoParticipantDetailPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return rsvpCoParticipantDetailPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return rsvpCoParticipantDetailPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public RsvpCoParticipantDetail fetchRsvpCoParticipantDetail(
		long rsvpCoParticipantDetailId) throws SystemException {
		return rsvpCoParticipantDetailPersistence.fetchByPrimaryKey(rsvpCoParticipantDetailId);
	}

	/**
	 * Returns the rsvp co participant detail with the matching UUID and company.
	 *
	 * @param uuid the rsvp co participant detail's UUID
	 * @param  companyId the primary key of the company
	 * @return the matching rsvp co participant detail, or <code>null</code> if a matching rsvp co participant detail could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public RsvpCoParticipantDetail fetchRsvpCoParticipantDetailByUuidAndCompanyId(
		String uuid, long companyId) throws SystemException {
		return rsvpCoParticipantDetailPersistence.fetchByUuid_C_First(uuid,
			companyId, null);
	}

	/**
	 * Returns the rsvp co participant detail matching the UUID and group.
	 *
	 * @param uuid the rsvp co participant detail's UUID
	 * @param groupId the primary key of the group
	 * @return the matching rsvp co participant detail, or <code>null</code> if a matching rsvp co participant detail could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public RsvpCoParticipantDetail fetchRsvpCoParticipantDetailByUuidAndGroupId(
		String uuid, long groupId) throws SystemException {
		return rsvpCoParticipantDetailPersistence.fetchByUUID_G(uuid, groupId);
	}

	/**
	 * Returns the rsvp co participant detail with the primary key.
	 *
	 * @param rsvpCoParticipantDetailId the primary key of the rsvp co participant detail
	 * @return the rsvp co participant detail
	 * @throws PortalException if a rsvp co participant detail with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public RsvpCoParticipantDetail getRsvpCoParticipantDetail(
		long rsvpCoParticipantDetailId) throws PortalException, SystemException {
		return rsvpCoParticipantDetailPersistence.findByPrimaryKey(rsvpCoParticipantDetailId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return rsvpCoParticipantDetailPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns the rsvp co participant detail with the matching UUID and company.
	 *
	 * @param uuid the rsvp co participant detail's UUID
	 * @param  companyId the primary key of the company
	 * @return the matching rsvp co participant detail
	 * @throws PortalException if a matching rsvp co participant detail could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public RsvpCoParticipantDetail getRsvpCoParticipantDetailByUuidAndCompanyId(
		String uuid, long companyId) throws PortalException, SystemException {
		return rsvpCoParticipantDetailPersistence.findByUuid_C_First(uuid,
			companyId, null);
	}

	/**
	 * Returns the rsvp co participant detail matching the UUID and group.
	 *
	 * @param uuid the rsvp co participant detail's UUID
	 * @param groupId the primary key of the group
	 * @return the matching rsvp co participant detail
	 * @throws PortalException if a matching rsvp co participant detail could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public RsvpCoParticipantDetail getRsvpCoParticipantDetailByUuidAndGroupId(
		String uuid, long groupId) throws PortalException, SystemException {
		return rsvpCoParticipantDetailPersistence.findByUUID_G(uuid, groupId);
	}

	/**
	 * Returns a range of all the rsvp co participant details.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.rsvp.model.impl.RsvpCoParticipantDetailModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of rsvp co participant details
	 * @param end the upper bound of the range of rsvp co participant details (not inclusive)
	 * @return the range of rsvp co participant details
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<RsvpCoParticipantDetail> getRsvpCoParticipantDetails(
		int start, int end) throws SystemException {
		return rsvpCoParticipantDetailPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of rsvp co participant details.
	 *
	 * @return the number of rsvp co participant details
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getRsvpCoParticipantDetailsCount() throws SystemException {
		return rsvpCoParticipantDetailPersistence.countAll();
	}

	/**
	 * Updates the rsvp co participant detail in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param rsvpCoParticipantDetail the rsvp co participant detail
	 * @return the rsvp co participant detail that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public RsvpCoParticipantDetail updateRsvpCoParticipantDetail(
		RsvpCoParticipantDetail rsvpCoParticipantDetail)
		throws SystemException {
		return rsvpCoParticipantDetailPersistence.update(rsvpCoParticipantDetail);
	}

	/**
	 * Returns the rsvp local service.
	 *
	 * @return the rsvp local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpLocalService getRsvpLocalService() {
		return rsvpLocalService;
	}

	/**
	 * Sets the rsvp local service.
	 *
	 * @param rsvpLocalService the rsvp local service
	 */
	public void setRsvpLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpLocalService rsvpLocalService) {
		this.rsvpLocalService = rsvpLocalService;
	}

	/**
	 * Returns the rsvp persistence.
	 *
	 * @return the rsvp persistence
	 */
	public RsvpPersistence getRsvpPersistence() {
		return rsvpPersistence;
	}

	/**
	 * Sets the rsvp persistence.
	 *
	 * @param rsvpPersistence the rsvp persistence
	 */
	public void setRsvpPersistence(RsvpPersistence rsvpPersistence) {
		this.rsvpPersistence = rsvpPersistence;
	}

	/**
	 * Returns the rsvp co participant detail local service.
	 *
	 * @return the rsvp co participant detail local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalService getRsvpCoParticipantDetailLocalService() {
		return rsvpCoParticipantDetailLocalService;
	}

	/**
	 * Sets the rsvp co participant detail local service.
	 *
	 * @param rsvpCoParticipantDetailLocalService the rsvp co participant detail local service
	 */
	public void setRsvpCoParticipantDetailLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalService rsvpCoParticipantDetailLocalService) {
		this.rsvpCoParticipantDetailLocalService = rsvpCoParticipantDetailLocalService;
	}

	/**
	 * Returns the rsvp co participant detail persistence.
	 *
	 * @return the rsvp co participant detail persistence
	 */
	public RsvpCoParticipantDetailPersistence getRsvpCoParticipantDetailPersistence() {
		return rsvpCoParticipantDetailPersistence;
	}

	/**
	 * Sets the rsvp co participant detail persistence.
	 *
	 * @param rsvpCoParticipantDetailPersistence the rsvp co participant detail persistence
	 */
	public void setRsvpCoParticipantDetailPersistence(
		RsvpCoParticipantDetailPersistence rsvpCoParticipantDetailPersistence) {
		this.rsvpCoParticipantDetailPersistence = rsvpCoParticipantDetailPersistence;
	}

	/**
	 * Returns the rsvp detail local service.
	 *
	 * @return the rsvp detail local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpDetailLocalService getRsvpDetailLocalService() {
		return rsvpDetailLocalService;
	}

	/**
	 * Sets the rsvp detail local service.
	 *
	 * @param rsvpDetailLocalService the rsvp detail local service
	 */
	public void setRsvpDetailLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpDetailLocalService rsvpDetailLocalService) {
		this.rsvpDetailLocalService = rsvpDetailLocalService;
	}

	/**
	 * Returns the rsvp detail persistence.
	 *
	 * @return the rsvp detail persistence
	 */
	public RsvpDetailPersistence getRsvpDetailPersistence() {
		return rsvpDetailPersistence;
	}

	/**
	 * Sets the rsvp detail persistence.
	 *
	 * @param rsvpDetailPersistence the rsvp detail persistence
	 */
	public void setRsvpDetailPersistence(
		RsvpDetailPersistence rsvpDetailPersistence) {
		this.rsvpDetailPersistence = rsvpDetailPersistence;
	}

	/**
	 * Returns the rsvp detail finder.
	 *
	 * @return the rsvp detail finder
	 */
	public RsvpDetailFinder getRsvpDetailFinder() {
		return rsvpDetailFinder;
	}

	/**
	 * Sets the rsvp detail finder.
	 *
	 * @param rsvpDetailFinder the rsvp detail finder
	 */
	public void setRsvpDetailFinder(RsvpDetailFinder rsvpDetailFinder) {
		this.rsvpDetailFinder = rsvpDetailFinder;
	}

	/**
	 * Returns the rsvp discount local service.
	 *
	 * @return the rsvp discount local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpDiscountLocalService getRsvpDiscountLocalService() {
		return rsvpDiscountLocalService;
	}

	/**
	 * Sets the rsvp discount local service.
	 *
	 * @param rsvpDiscountLocalService the rsvp discount local service
	 */
	public void setRsvpDiscountLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpDiscountLocalService rsvpDiscountLocalService) {
		this.rsvpDiscountLocalService = rsvpDiscountLocalService;
	}

	/**
	 * Returns the rsvp discount persistence.
	 *
	 * @return the rsvp discount persistence
	 */
	public RsvpDiscountPersistence getRsvpDiscountPersistence() {
		return rsvpDiscountPersistence;
	}

	/**
	 * Sets the rsvp discount persistence.
	 *
	 * @param rsvpDiscountPersistence the rsvp discount persistence
	 */
	public void setRsvpDiscountPersistence(
		RsvpDiscountPersistence rsvpDiscountPersistence) {
		this.rsvpDiscountPersistence = rsvpDiscountPersistence;
	}

	/**
	 * Returns the rsvp payment local service.
	 *
	 * @return the rsvp payment local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpPaymentLocalService getRsvpPaymentLocalService() {
		return rsvpPaymentLocalService;
	}

	/**
	 * Sets the rsvp payment local service.
	 *
	 * @param rsvpPaymentLocalService the rsvp payment local service
	 */
	public void setRsvpPaymentLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpPaymentLocalService rsvpPaymentLocalService) {
		this.rsvpPaymentLocalService = rsvpPaymentLocalService;
	}

	/**
	 * Returns the rsvp payment persistence.
	 *
	 * @return the rsvp payment persistence
	 */
	public RsvpPaymentPersistence getRsvpPaymentPersistence() {
		return rsvpPaymentPersistence;
	}

	/**
	 * Sets the rsvp payment persistence.
	 *
	 * @param rsvpPaymentPersistence the rsvp payment persistence
	 */
	public void setRsvpPaymentPersistence(
		RsvpPaymentPersistence rsvpPaymentPersistence) {
		this.rsvpPaymentPersistence = rsvpPaymentPersistence;
	}

	/**
	 * Returns the rsvp promo code local service.
	 *
	 * @return the rsvp promo code local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpPromoCodeLocalService getRsvpPromoCodeLocalService() {
		return rsvpPromoCodeLocalService;
	}

	/**
	 * Sets the rsvp promo code local service.
	 *
	 * @param rsvpPromoCodeLocalService the rsvp promo code local service
	 */
	public void setRsvpPromoCodeLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpPromoCodeLocalService rsvpPromoCodeLocalService) {
		this.rsvpPromoCodeLocalService = rsvpPromoCodeLocalService;
	}

	/**
	 * Returns the rsvp promo code persistence.
	 *
	 * @return the rsvp promo code persistence
	 */
	public RsvpPromoCodePersistence getRsvpPromoCodePersistence() {
		return rsvpPromoCodePersistence;
	}

	/**
	 * Sets the rsvp promo code persistence.
	 *
	 * @param rsvpPromoCodePersistence the rsvp promo code persistence
	 */
	public void setRsvpPromoCodePersistence(
		RsvpPromoCodePersistence rsvpPromoCodePersistence) {
		this.rsvpPromoCodePersistence = rsvpPromoCodePersistence;
	}

	/**
	 * Returns the rsvp ticket local service.
	 *
	 * @return the rsvp ticket local service
	 */
	public com.sambaash.platform.srv.rsvp.service.RsvpTicketLocalService getRsvpTicketLocalService() {
		return rsvpTicketLocalService;
	}

	/**
	 * Sets the rsvp ticket local service.
	 *
	 * @param rsvpTicketLocalService the rsvp ticket local service
	 */
	public void setRsvpTicketLocalService(
		com.sambaash.platform.srv.rsvp.service.RsvpTicketLocalService rsvpTicketLocalService) {
		this.rsvpTicketLocalService = rsvpTicketLocalService;
	}

	/**
	 * Returns the rsvp ticket persistence.
	 *
	 * @return the rsvp ticket persistence
	 */
	public RsvpTicketPersistence getRsvpTicketPersistence() {
		return rsvpTicketPersistence;
	}

	/**
	 * Sets the rsvp ticket persistence.
	 *
	 * @param rsvpTicketPersistence the rsvp ticket persistence
	 */
	public void setRsvpTicketPersistence(
		RsvpTicketPersistence rsvpTicketPersistence) {
		this.rsvpTicketPersistence = rsvpTicketPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail",
			rsvpCoParticipantDetailLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.sambaash.platform.srv.rsvp.model.RsvpCoParticipantDetail");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return RsvpCoParticipantDetail.class;
	}

	protected String getModelClassName() {
		return RsvpCoParticipantDetail.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = rsvpCoParticipantDetailPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpLocalService rsvpLocalService;
	@BeanReference(type = RsvpPersistence.class)
	protected RsvpPersistence rsvpPersistence;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpCoParticipantDetailLocalService rsvpCoParticipantDetailLocalService;
	@BeanReference(type = RsvpCoParticipantDetailPersistence.class)
	protected RsvpCoParticipantDetailPersistence rsvpCoParticipantDetailPersistence;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpDetailLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpDetailLocalService rsvpDetailLocalService;
	@BeanReference(type = RsvpDetailPersistence.class)
	protected RsvpDetailPersistence rsvpDetailPersistence;
	@BeanReference(type = RsvpDetailFinder.class)
	protected RsvpDetailFinder rsvpDetailFinder;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpDiscountLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpDiscountLocalService rsvpDiscountLocalService;
	@BeanReference(type = RsvpDiscountPersistence.class)
	protected RsvpDiscountPersistence rsvpDiscountPersistence;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpPaymentLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpPaymentLocalService rsvpPaymentLocalService;
	@BeanReference(type = RsvpPaymentPersistence.class)
	protected RsvpPaymentPersistence rsvpPaymentPersistence;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpPromoCodeLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpPromoCodeLocalService rsvpPromoCodeLocalService;
	@BeanReference(type = RsvpPromoCodePersistence.class)
	protected RsvpPromoCodePersistence rsvpPromoCodePersistence;
	@BeanReference(type = com.sambaash.platform.srv.rsvp.service.RsvpTicketLocalService.class)
	protected com.sambaash.platform.srv.rsvp.service.RsvpTicketLocalService rsvpTicketLocalService;
	@BeanReference(type = RsvpTicketPersistence.class)
	protected RsvpTicketPersistence rsvpTicketPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private RsvpCoParticipantDetailLocalServiceClpInvoker _clpInvoker = new RsvpCoParticipantDetailLocalServiceClpInvoker();
}
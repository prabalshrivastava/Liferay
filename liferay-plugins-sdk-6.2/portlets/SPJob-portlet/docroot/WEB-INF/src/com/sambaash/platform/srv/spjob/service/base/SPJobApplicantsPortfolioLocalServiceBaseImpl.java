/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spjob.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.service.persistence.UserPersistence;

import com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio;
import com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalService;
import com.sambaash.platform.srv.spjob.service.persistence.SPJobApplicantsPersistence;
import com.sambaash.platform.srv.spjob.service.persistence.SPJobApplicantsPortfolioPK;
import com.sambaash.platform.srv.spjob.service.persistence.SPJobApplicantsPortfolioPersistence;
import com.sambaash.platform.srv.spjob.service.persistence.SPJobPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the s p job applicants portfolio local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.sambaash.platform.srv.spjob.service.impl.SPJobApplicantsPortfolioLocalServiceImpl}.
 * </p>
 *
 * @author harini
 * @see com.sambaash.platform.srv.spjob.service.impl.SPJobApplicantsPortfolioLocalServiceImpl
 * @see com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalServiceUtil
 * @generated
 */
public abstract class SPJobApplicantsPortfolioLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements SPJobApplicantsPortfolioLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalServiceUtil} to access the s p job applicants portfolio local service.
	 */

	/**
	 * Adds the s p job applicants portfolio to the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobApplicantsPortfolio the s p job applicants portfolio
	 * @return the s p job applicants portfolio that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SPJobApplicantsPortfolio addSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolio spJobApplicantsPortfolio)
		throws SystemException {
		spJobApplicantsPortfolio.setNew(true);

		return spJobApplicantsPortfolioPersistence.update(spJobApplicantsPortfolio);
	}

	/**
	 * Creates a new s p job applicants portfolio with the primary key. Does not add the s p job applicants portfolio to the database.
	 *
	 * @param spJobApplicantsPortfolioPK the primary key for the new s p job applicants portfolio
	 * @return the new s p job applicants portfolio
	 */
	@Override
	public SPJobApplicantsPortfolio createSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolioPK spJobApplicantsPortfolioPK) {
		return spJobApplicantsPortfolioPersistence.create(spJobApplicantsPortfolioPK);
	}

	/**
	 * Deletes the s p job applicants portfolio with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobApplicantsPortfolioPK the primary key of the s p job applicants portfolio
	 * @return the s p job applicants portfolio that was removed
	 * @throws PortalException if a s p job applicants portfolio with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SPJobApplicantsPortfolio deleteSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolioPK spJobApplicantsPortfolioPK)
		throws PortalException, SystemException {
		return spJobApplicantsPortfolioPersistence.remove(spJobApplicantsPortfolioPK);
	}

	/**
	 * Deletes the s p job applicants portfolio from the database. Also notifies the appropriate model listeners.
	 *
	 * @param spJobApplicantsPortfolio the s p job applicants portfolio
	 * @return the s p job applicants portfolio that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public SPJobApplicantsPortfolio deleteSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolio spJobApplicantsPortfolio)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.remove(spJobApplicantsPortfolio);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(SPJobApplicantsPortfolio.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spjob.model.impl.SPJobApplicantsPortfolioModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spjob.model.impl.SPJobApplicantsPortfolioModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return spJobApplicantsPortfolioPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return spJobApplicantsPortfolioPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public SPJobApplicantsPortfolio fetchSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolioPK spJobApplicantsPortfolioPK)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.fetchByPrimaryKey(spJobApplicantsPortfolioPK);
	}

	/**
	 * Returns the s p job applicants portfolio with the primary key.
	 *
	 * @param spJobApplicantsPortfolioPK the primary key of the s p job applicants portfolio
	 * @return the s p job applicants portfolio
	 * @throws PortalException if a s p job applicants portfolio with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public SPJobApplicantsPortfolio getSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolioPK spJobApplicantsPortfolioPK)
		throws PortalException, SystemException {
		return spJobApplicantsPortfolioPersistence.findByPrimaryKey(spJobApplicantsPortfolioPK);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return spJobApplicantsPortfolioPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the s p job applicants portfolios.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.sambaash.platform.srv.spjob.model.impl.SPJobApplicantsPortfolioModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of s p job applicants portfolios
	 * @param end the upper bound of the range of s p job applicants portfolios (not inclusive)
	 * @return the range of s p job applicants portfolios
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<SPJobApplicantsPortfolio> getSPJobApplicantsPortfolios(
		int start, int end) throws SystemException {
		return spJobApplicantsPortfolioPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of s p job applicants portfolios.
	 *
	 * @return the number of s p job applicants portfolios
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getSPJobApplicantsPortfoliosCount() throws SystemException {
		return spJobApplicantsPortfolioPersistence.countAll();
	}

	/**
	 * Updates the s p job applicants portfolio in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param spJobApplicantsPortfolio the s p job applicants portfolio
	 * @return the s p job applicants portfolio that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public SPJobApplicantsPortfolio updateSPJobApplicantsPortfolio(
		SPJobApplicantsPortfolio spJobApplicantsPortfolio)
		throws SystemException {
		return spJobApplicantsPortfolioPersistence.update(spJobApplicantsPortfolio);
	}

	/**
	 * Returns the s p job local service.
	 *
	 * @return the s p job local service
	 */
	public com.sambaash.platform.srv.spjob.service.SPJobLocalService getSPJobLocalService() {
		return spJobLocalService;
	}

	/**
	 * Sets the s p job local service.
	 *
	 * @param spJobLocalService the s p job local service
	 */
	public void setSPJobLocalService(
		com.sambaash.platform.srv.spjob.service.SPJobLocalService spJobLocalService) {
		this.spJobLocalService = spJobLocalService;
	}

	/**
	 * Returns the s p job persistence.
	 *
	 * @return the s p job persistence
	 */
	public SPJobPersistence getSPJobPersistence() {
		return spJobPersistence;
	}

	/**
	 * Sets the s p job persistence.
	 *
	 * @param spJobPersistence the s p job persistence
	 */
	public void setSPJobPersistence(SPJobPersistence spJobPersistence) {
		this.spJobPersistence = spJobPersistence;
	}

	/**
	 * Returns the s p job applicants local service.
	 *
	 * @return the s p job applicants local service
	 */
	public com.sambaash.platform.srv.spjob.service.SPJobApplicantsLocalService getSPJobApplicantsLocalService() {
		return spJobApplicantsLocalService;
	}

	/**
	 * Sets the s p job applicants local service.
	 *
	 * @param spJobApplicantsLocalService the s p job applicants local service
	 */
	public void setSPJobApplicantsLocalService(
		com.sambaash.platform.srv.spjob.service.SPJobApplicantsLocalService spJobApplicantsLocalService) {
		this.spJobApplicantsLocalService = spJobApplicantsLocalService;
	}

	/**
	 * Returns the s p job applicants persistence.
	 *
	 * @return the s p job applicants persistence
	 */
	public SPJobApplicantsPersistence getSPJobApplicantsPersistence() {
		return spJobApplicantsPersistence;
	}

	/**
	 * Sets the s p job applicants persistence.
	 *
	 * @param spJobApplicantsPersistence the s p job applicants persistence
	 */
	public void setSPJobApplicantsPersistence(
		SPJobApplicantsPersistence spJobApplicantsPersistence) {
		this.spJobApplicantsPersistence = spJobApplicantsPersistence;
	}

	/**
	 * Returns the s p job applicants portfolio local service.
	 *
	 * @return the s p job applicants portfolio local service
	 */
	public com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalService getSPJobApplicantsPortfolioLocalService() {
		return spJobApplicantsPortfolioLocalService;
	}

	/**
	 * Sets the s p job applicants portfolio local service.
	 *
	 * @param spJobApplicantsPortfolioLocalService the s p job applicants portfolio local service
	 */
	public void setSPJobApplicantsPortfolioLocalService(
		com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalService spJobApplicantsPortfolioLocalService) {
		this.spJobApplicantsPortfolioLocalService = spJobApplicantsPortfolioLocalService;
	}

	/**
	 * Returns the s p job applicants portfolio persistence.
	 *
	 * @return the s p job applicants portfolio persistence
	 */
	public SPJobApplicantsPortfolioPersistence getSPJobApplicantsPortfolioPersistence() {
		return spJobApplicantsPortfolioPersistence;
	}

	/**
	 * Sets the s p job applicants portfolio persistence.
	 *
	 * @param spJobApplicantsPortfolioPersistence the s p job applicants portfolio persistence
	 */
	public void setSPJobApplicantsPortfolioPersistence(
		SPJobApplicantsPortfolioPersistence spJobApplicantsPortfolioPersistence) {
		this.spJobApplicantsPortfolioPersistence = spJobApplicantsPortfolioPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio",
			spJobApplicantsPortfolioLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.sambaash.platform.srv.spjob.model.SPJobApplicantsPortfolio");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return SPJobApplicantsPortfolio.class;
	}

	protected String getModelClassName() {
		return SPJobApplicantsPortfolio.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = spJobApplicantsPortfolioPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.sambaash.platform.srv.spjob.service.SPJobLocalService.class)
	protected com.sambaash.platform.srv.spjob.service.SPJobLocalService spJobLocalService;
	@BeanReference(type = SPJobPersistence.class)
	protected SPJobPersistence spJobPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spjob.service.SPJobApplicantsLocalService.class)
	protected com.sambaash.platform.srv.spjob.service.SPJobApplicantsLocalService spJobApplicantsLocalService;
	@BeanReference(type = SPJobApplicantsPersistence.class)
	protected SPJobApplicantsPersistence spJobApplicantsPersistence;
	@BeanReference(type = com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalService.class)
	protected com.sambaash.platform.srv.spjob.service.SPJobApplicantsPortfolioLocalService spJobApplicantsPortfolioLocalService;
	@BeanReference(type = SPJobApplicantsPortfolioPersistence.class)
	protected SPJobApplicantsPortfolioPersistence spJobApplicantsPortfolioPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private SPJobApplicantsPortfolioLocalServiceClpInvoker _clpInvoker = new SPJobApplicantsPortfolioLocalServiceClpInvoker();
}
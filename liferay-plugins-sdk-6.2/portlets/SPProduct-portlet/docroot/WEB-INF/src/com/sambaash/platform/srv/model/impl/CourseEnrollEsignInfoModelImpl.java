/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.CourseEnrollEsignInfo;
import com.sambaash.platform.srv.model.CourseEnrollEsignInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CourseEnrollEsignInfo service. Represents a row in the &quot;SPCourseEnrollEsignInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.CourseEnrollEsignInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CourseEnrollEsignInfoImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see CourseEnrollEsignInfoImpl
 * @see com.sambaash.platform.srv.model.CourseEnrollEsignInfo
 * @see com.sambaash.platform.srv.model.CourseEnrollEsignInfoModel
 * @generated
 */
public class CourseEnrollEsignInfoModelImpl extends BaseModelImpl<CourseEnrollEsignInfo>
	implements CourseEnrollEsignInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a course enroll esign info model instance should use the {@link com.sambaash.platform.srv.model.CourseEnrollEsignInfo} interface instead.
	 */
	public static final String TABLE_NAME = "SPCourseEnrollEsignInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spEsignInfoId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "signerId", Types.VARCHAR },
			{ "packageId", Types.VARCHAR },
			{ "documentId", Types.VARCHAR },
			{ "lastGeneratedUrl", Types.VARCHAR },
			{ "spPEProcessStateId", Types.BIGINT },
			{ "extraInfo", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPCourseEnrollEsignInfo (spEsignInfoId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,signerId VARCHAR(75) null,packageId VARCHAR(75) null,documentId VARCHAR(75) null,lastGeneratedUrl LONGTEXT null,spPEProcessStateId BIGINT(20),extraInfo LONGTEXT null)";
	public static final String TABLE_SQL_DROP = "drop table SPCourseEnrollEsignInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY courseEnrollEsignInfo.spEsignInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPCourseEnrollEsignInfo.spEsignInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.CourseEnrollEsignInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.CourseEnrollEsignInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.CourseEnrollEsignInfo"),
			true);
	public static long DOCUMENTID_COLUMN_BITMASK = 1L;
	public static long PACKAGEID_COLUMN_BITMASK = 2L;
	public static long SIGNERID_COLUMN_BITMASK = 4L;
	public static long SPPEPROCESSSTATEID_COLUMN_BITMASK = 8L;
	public static long SPESIGNINFOID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.CourseEnrollEsignInfo"));

	public CourseEnrollEsignInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spEsignInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpEsignInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spEsignInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CourseEnrollEsignInfo.class;
	}

	@Override
	public String getModelClassName() {
		return CourseEnrollEsignInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spEsignInfoId", getSpEsignInfoId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("signerId", getSignerId());
		attributes.put("packageId", getPackageId());
		attributes.put("documentId", getDocumentId());
		attributes.put("lastGeneratedUrl", getLastGeneratedUrl());
		attributes.put("spPEProcessStateId", getSpPEProcessStateId());
		attributes.put("extraInfo", getExtraInfo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spEsignInfoId = (Long)attributes.get("spEsignInfoId");

		if (spEsignInfoId != null) {
			setSpEsignInfoId(spEsignInfoId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String signerId = (String)attributes.get("signerId");

		if (signerId != null) {
			setSignerId(signerId);
		}

		String packageId = (String)attributes.get("packageId");

		if (packageId != null) {
			setPackageId(packageId);
		}

		String documentId = (String)attributes.get("documentId");

		if (documentId != null) {
			setDocumentId(documentId);
		}

		String lastGeneratedUrl = (String)attributes.get("lastGeneratedUrl");

		if (lastGeneratedUrl != null) {
			setLastGeneratedUrl(lastGeneratedUrl);
		}

		Long spPEProcessStateId = (Long)attributes.get("spPEProcessStateId");

		if (spPEProcessStateId != null) {
			setSpPEProcessStateId(spPEProcessStateId);
		}

		String extraInfo = (String)attributes.get("extraInfo");

		if (extraInfo != null) {
			setExtraInfo(extraInfo);
		}
	}

	@Override
	public long getSpEsignInfoId() {
		return _spEsignInfoId;
	}

	@Override
	public void setSpEsignInfoId(long spEsignInfoId) {
		_spEsignInfoId = spEsignInfoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getSignerId() {
		if (_signerId == null) {
			return StringPool.BLANK;
		}
		else {
			return _signerId;
		}
	}

	@Override
	public void setSignerId(String signerId) {
		_columnBitmask |= SIGNERID_COLUMN_BITMASK;

		if (_originalSignerId == null) {
			_originalSignerId = _signerId;
		}

		_signerId = signerId;
	}

	public String getOriginalSignerId() {
		return GetterUtil.getString(_originalSignerId);
	}

	@Override
	public String getPackageId() {
		if (_packageId == null) {
			return StringPool.BLANK;
		}
		else {
			return _packageId;
		}
	}

	@Override
	public void setPackageId(String packageId) {
		_columnBitmask |= PACKAGEID_COLUMN_BITMASK;

		if (_originalPackageId == null) {
			_originalPackageId = _packageId;
		}

		_packageId = packageId;
	}

	public String getOriginalPackageId() {
		return GetterUtil.getString(_originalPackageId);
	}

	@Override
	public String getDocumentId() {
		if (_documentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentId;
		}
	}

	@Override
	public void setDocumentId(String documentId) {
		_columnBitmask |= DOCUMENTID_COLUMN_BITMASK;

		if (_originalDocumentId == null) {
			_originalDocumentId = _documentId;
		}

		_documentId = documentId;
	}

	public String getOriginalDocumentId() {
		return GetterUtil.getString(_originalDocumentId);
	}

	@Override
	public String getLastGeneratedUrl() {
		if (_lastGeneratedUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastGeneratedUrl;
		}
	}

	@Override
	public void setLastGeneratedUrl(String lastGeneratedUrl) {
		_lastGeneratedUrl = lastGeneratedUrl;
	}

	@Override
	public long getSpPEProcessStateId() {
		return _spPEProcessStateId;
	}

	@Override
	public void setSpPEProcessStateId(long spPEProcessStateId) {
		_columnBitmask |= SPPEPROCESSSTATEID_COLUMN_BITMASK;

		if (!_setOriginalSpPEProcessStateId) {
			_setOriginalSpPEProcessStateId = true;

			_originalSpPEProcessStateId = _spPEProcessStateId;
		}

		_spPEProcessStateId = spPEProcessStateId;
	}

	public long getOriginalSpPEProcessStateId() {
		return _originalSpPEProcessStateId;
	}

	@Override
	public String getExtraInfo() {
		if (_extraInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _extraInfo;
		}
	}

	@Override
	public void setExtraInfo(String extraInfo) {
		_extraInfo = extraInfo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CourseEnrollEsignInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CourseEnrollEsignInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CourseEnrollEsignInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CourseEnrollEsignInfoImpl courseEnrollEsignInfoImpl = new CourseEnrollEsignInfoImpl();

		courseEnrollEsignInfoImpl.setSpEsignInfoId(getSpEsignInfoId());
		courseEnrollEsignInfoImpl.setGroupId(getGroupId());
		courseEnrollEsignInfoImpl.setCompanyId(getCompanyId());
		courseEnrollEsignInfoImpl.setUserId(getUserId());
		courseEnrollEsignInfoImpl.setUserName(getUserName());
		courseEnrollEsignInfoImpl.setCreateDate(getCreateDate());
		courseEnrollEsignInfoImpl.setModifiedDate(getModifiedDate());
		courseEnrollEsignInfoImpl.setSignerId(getSignerId());
		courseEnrollEsignInfoImpl.setPackageId(getPackageId());
		courseEnrollEsignInfoImpl.setDocumentId(getDocumentId());
		courseEnrollEsignInfoImpl.setLastGeneratedUrl(getLastGeneratedUrl());
		courseEnrollEsignInfoImpl.setSpPEProcessStateId(getSpPEProcessStateId());
		courseEnrollEsignInfoImpl.setExtraInfo(getExtraInfo());

		courseEnrollEsignInfoImpl.resetOriginalValues();

		return courseEnrollEsignInfoImpl;
	}

	@Override
	public int compareTo(CourseEnrollEsignInfo courseEnrollEsignInfo) {
		long primaryKey = courseEnrollEsignInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CourseEnrollEsignInfo)) {
			return false;
		}

		CourseEnrollEsignInfo courseEnrollEsignInfo = (CourseEnrollEsignInfo)obj;

		long primaryKey = courseEnrollEsignInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CourseEnrollEsignInfoModelImpl courseEnrollEsignInfoModelImpl = this;

		courseEnrollEsignInfoModelImpl._originalSignerId = courseEnrollEsignInfoModelImpl._signerId;

		courseEnrollEsignInfoModelImpl._originalPackageId = courseEnrollEsignInfoModelImpl._packageId;

		courseEnrollEsignInfoModelImpl._originalDocumentId = courseEnrollEsignInfoModelImpl._documentId;

		courseEnrollEsignInfoModelImpl._originalSpPEProcessStateId = courseEnrollEsignInfoModelImpl._spPEProcessStateId;

		courseEnrollEsignInfoModelImpl._setOriginalSpPEProcessStateId = false;

		courseEnrollEsignInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CourseEnrollEsignInfo> toCacheModel() {
		CourseEnrollEsignInfoCacheModel courseEnrollEsignInfoCacheModel = new CourseEnrollEsignInfoCacheModel();

		courseEnrollEsignInfoCacheModel.spEsignInfoId = getSpEsignInfoId();

		courseEnrollEsignInfoCacheModel.groupId = getGroupId();

		courseEnrollEsignInfoCacheModel.companyId = getCompanyId();

		courseEnrollEsignInfoCacheModel.userId = getUserId();

		courseEnrollEsignInfoCacheModel.userName = getUserName();

		String userName = courseEnrollEsignInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			courseEnrollEsignInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			courseEnrollEsignInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			courseEnrollEsignInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			courseEnrollEsignInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			courseEnrollEsignInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		courseEnrollEsignInfoCacheModel.signerId = getSignerId();

		String signerId = courseEnrollEsignInfoCacheModel.signerId;

		if ((signerId != null) && (signerId.length() == 0)) {
			courseEnrollEsignInfoCacheModel.signerId = null;
		}

		courseEnrollEsignInfoCacheModel.packageId = getPackageId();

		String packageId = courseEnrollEsignInfoCacheModel.packageId;

		if ((packageId != null) && (packageId.length() == 0)) {
			courseEnrollEsignInfoCacheModel.packageId = null;
		}

		courseEnrollEsignInfoCacheModel.documentId = getDocumentId();

		String documentId = courseEnrollEsignInfoCacheModel.documentId;

		if ((documentId != null) && (documentId.length() == 0)) {
			courseEnrollEsignInfoCacheModel.documentId = null;
		}

		courseEnrollEsignInfoCacheModel.lastGeneratedUrl = getLastGeneratedUrl();

		String lastGeneratedUrl = courseEnrollEsignInfoCacheModel.lastGeneratedUrl;

		if ((lastGeneratedUrl != null) && (lastGeneratedUrl.length() == 0)) {
			courseEnrollEsignInfoCacheModel.lastGeneratedUrl = null;
		}

		courseEnrollEsignInfoCacheModel.spPEProcessStateId = getSpPEProcessStateId();

		courseEnrollEsignInfoCacheModel.extraInfo = getExtraInfo();

		String extraInfo = courseEnrollEsignInfoCacheModel.extraInfo;

		if ((extraInfo != null) && (extraInfo.length() == 0)) {
			courseEnrollEsignInfoCacheModel.extraInfo = null;
		}

		return courseEnrollEsignInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{spEsignInfoId=");
		sb.append(getSpEsignInfoId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", signerId=");
		sb.append(getSignerId());
		sb.append(", packageId=");
		sb.append(getPackageId());
		sb.append(", documentId=");
		sb.append(getDocumentId());
		sb.append(", lastGeneratedUrl=");
		sb.append(getLastGeneratedUrl());
		sb.append(", spPEProcessStateId=");
		sb.append(getSpPEProcessStateId());
		sb.append(", extraInfo=");
		sb.append(getExtraInfo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.CourseEnrollEsignInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spEsignInfoId</column-name><column-value><![CDATA[");
		sb.append(getSpEsignInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signerId</column-name><column-value><![CDATA[");
		sb.append(getSignerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>packageId</column-name><column-value><![CDATA[");
		sb.append(getPackageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentId</column-name><column-value><![CDATA[");
		sb.append(getDocumentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastGeneratedUrl</column-name><column-value><![CDATA[");
		sb.append(getLastGeneratedUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spPEProcessStateId</column-name><column-value><![CDATA[");
		sb.append(getSpPEProcessStateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extraInfo</column-name><column-value><![CDATA[");
		sb.append(getExtraInfo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CourseEnrollEsignInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CourseEnrollEsignInfo.class
		};
	private long _spEsignInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _signerId;
	private String _originalSignerId;
	private String _packageId;
	private String _originalPackageId;
	private String _documentId;
	private String _originalDocumentId;
	private String _lastGeneratedUrl;
	private long _spPEProcessStateId;
	private long _originalSpPEProcessStateId;
	private boolean _setOriginalSpPEProcessStateId;
	private String _extraInfo;
	private long _columnBitmask;
	private CourseEnrollEsignInfo _escapedModel;
}
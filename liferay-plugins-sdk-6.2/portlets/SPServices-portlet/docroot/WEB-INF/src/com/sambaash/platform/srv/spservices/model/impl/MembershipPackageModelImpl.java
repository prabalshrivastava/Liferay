/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.spservices.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.spservices.model.MembershipPackage;
import com.sambaash.platform.srv.spservices.model.MembershipPackageModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MembershipPackage service. Represents a row in the &quot;SPMembershipPackage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.spservices.model.MembershipPackageModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MembershipPackageImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see MembershipPackageImpl
 * @see com.sambaash.platform.srv.spservices.model.MembershipPackage
 * @see com.sambaash.platform.srv.spservices.model.MembershipPackageModel
 * @generated
 */
public class MembershipPackageModelImpl extends BaseModelImpl<MembershipPackage>
	implements MembershipPackageModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a membership package model instance should use the {@link com.sambaash.platform.srv.spservices.model.MembershipPackage} interface instead.
	 */
	public static final String TABLE_NAME = "SPMembershipPackage";
	public static final Object[][] TABLE_COLUMNS = {
			{ "mpId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "type_", Types.VARCHAR },
			{ "version", Types.VARCHAR },
			{ "cost", Types.FLOAT },
			{ "costCurrency", Types.VARCHAR },
			{ "costPeriod", Types.VARCHAR },
			{ "costPeriodType", Types.VARCHAR },
			{ "promotionCode", Types.VARCHAR },
			{ "promotionFrom", Types.TIMESTAMP },
			{ "promotionTo", Types.TIMESTAMP },
			{ "discount", Types.VARCHAR },
			{ "dateAdded", Types.TIMESTAMP },
			{ "dateModified", Types.TIMESTAMP },
			{ "createdBy", Types.VARCHAR },
			{ "modifiedBy", Types.VARCHAR },
			{ "extra1", Types.VARCHAR },
			{ "extra2", Types.VARCHAR },
			{ "extra3", Types.VARCHAR },
			{ "extra4", Types.VARCHAR },
			{ "extra5", Types.TIMESTAMP },
			{ "extra6", Types.TIMESTAMP },
			{ "extra7", Types.VARCHAR },
			{ "extra8", Types.VARCHAR },
			{ "extra9", Types.VARCHAR },
			{ "extra10", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPMembershipPackage (mpId BIGINT(20) not null primary key,name VARCHAR(75) null,description VARCHAR(75) null,status VARCHAR(75) null,type_ VARCHAR(75) null,version VARCHAR(75) null,cost DOUBLE,costCurrency VARCHAR(75) null,costPeriod VARCHAR(75) null,costPeriodType VARCHAR(75) null,promotionCode VARCHAR(75) null,promotionFrom DATETIME null,promotionTo DATETIME null,discount VARCHAR(75) null,dateAdded DATETIME null,dateModified DATETIME null,createdBy VARCHAR(75) null,modifiedBy VARCHAR(75) null,extra1 VARCHAR(75) null,extra2 VARCHAR(75) null,extra3 VARCHAR(75) null,extra4 VARCHAR(75) null,extra5 DATETIME null,extra6 DATETIME null,extra7 VARCHAR(75) null,extra8 VARCHAR(75) null,extra9 VARCHAR(75) null,extra10 VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table SPMembershipPackage";
	public static final String ORDER_BY_JPQL = " ORDER BY membershipPackage.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPMembershipPackage.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackage"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackage"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.spservices.model.MembershipPackage"),
			true);
	public static long EXTRA1_COLUMN_BITMASK = 1L;
	public static long NAME_COLUMN_BITMASK = 2L;
	public static long TYPE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.spservices.model.MembershipPackage"));

	public MembershipPackageModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _mpId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMpId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _mpId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return MembershipPackage.class;
	}

	@Override
	public String getModelClassName() {
		return MembershipPackage.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("mpId", getMpId());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("status", getStatus());
		attributes.put("type", getType());
		attributes.put("version", getVersion());
		attributes.put("cost", getCost());
		attributes.put("costCurrency", getCostCurrency());
		attributes.put("costPeriod", getCostPeriod());
		attributes.put("costPeriodType", getCostPeriodType());
		attributes.put("promotionCode", getPromotionCode());
		attributes.put("promotionFrom", getPromotionFrom());
		attributes.put("promotionTo", getPromotionTo());
		attributes.put("discount", getDiscount());
		attributes.put("dateAdded", getDateAdded());
		attributes.put("dateModified", getDateModified());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("extra1", getExtra1());
		attributes.put("extra2", getExtra2());
		attributes.put("extra3", getExtra3());
		attributes.put("extra4", getExtra4());
		attributes.put("extra5", getExtra5());
		attributes.put("extra6", getExtra6());
		attributes.put("extra7", getExtra7());
		attributes.put("extra8", getExtra8());
		attributes.put("extra9", getExtra9());
		attributes.put("extra10", getExtra10());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long mpId = (Long)attributes.get("mpId");

		if (mpId != null) {
			setMpId(mpId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		Float cost = (Float)attributes.get("cost");

		if (cost != null) {
			setCost(cost);
		}

		String costCurrency = (String)attributes.get("costCurrency");

		if (costCurrency != null) {
			setCostCurrency(costCurrency);
		}

		String costPeriod = (String)attributes.get("costPeriod");

		if (costPeriod != null) {
			setCostPeriod(costPeriod);
		}

		String costPeriodType = (String)attributes.get("costPeriodType");

		if (costPeriodType != null) {
			setCostPeriodType(costPeriodType);
		}

		String promotionCode = (String)attributes.get("promotionCode");

		if (promotionCode != null) {
			setPromotionCode(promotionCode);
		}

		Date promotionFrom = (Date)attributes.get("promotionFrom");

		if (promotionFrom != null) {
			setPromotionFrom(promotionFrom);
		}

		Date promotionTo = (Date)attributes.get("promotionTo");

		if (promotionTo != null) {
			setPromotionTo(promotionTo);
		}

		String discount = (String)attributes.get("discount");

		if (discount != null) {
			setDiscount(discount);
		}

		Date dateAdded = (Date)attributes.get("dateAdded");

		if (dateAdded != null) {
			setDateAdded(dateAdded);
		}

		Date dateModified = (Date)attributes.get("dateModified");

		if (dateModified != null) {
			setDateModified(dateModified);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String extra1 = (String)attributes.get("extra1");

		if (extra1 != null) {
			setExtra1(extra1);
		}

		String extra2 = (String)attributes.get("extra2");

		if (extra2 != null) {
			setExtra2(extra2);
		}

		String extra3 = (String)attributes.get("extra3");

		if (extra3 != null) {
			setExtra3(extra3);
		}

		String extra4 = (String)attributes.get("extra4");

		if (extra4 != null) {
			setExtra4(extra4);
		}

		Date extra5 = (Date)attributes.get("extra5");

		if (extra5 != null) {
			setExtra5(extra5);
		}

		Date extra6 = (Date)attributes.get("extra6");

		if (extra6 != null) {
			setExtra6(extra6);
		}

		String extra7 = (String)attributes.get("extra7");

		if (extra7 != null) {
			setExtra7(extra7);
		}

		String extra8 = (String)attributes.get("extra8");

		if (extra8 != null) {
			setExtra8(extra8);
		}

		String extra9 = (String)attributes.get("extra9");

		if (extra9 != null) {
			setExtra9(extra9);
		}

		String extra10 = (String)attributes.get("extra10");

		if (extra10 != null) {
			setExtra10(extra10);
		}
	}

	@Override
	public long getMpId() {
		return _mpId;
	}

	@Override
	public void setMpId(long mpId) {
		_mpId = mpId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_columnBitmask |= TYPE_COLUMN_BITMASK;

		if (_originalType == null) {
			_originalType = _type;
		}

		_type = type;
	}

	public String getOriginalType() {
		return GetterUtil.getString(_originalType);
	}

	@Override
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_version = version;
	}

	@Override
	public float getCost() {
		return _cost;
	}

	@Override
	public void setCost(float cost) {
		_cost = cost;
	}

	@Override
	public String getCostCurrency() {
		if (_costCurrency == null) {
			return StringPool.BLANK;
		}
		else {
			return _costCurrency;
		}
	}

	@Override
	public void setCostCurrency(String costCurrency) {
		_costCurrency = costCurrency;
	}

	@Override
	public String getCostPeriod() {
		if (_costPeriod == null) {
			return StringPool.BLANK;
		}
		else {
			return _costPeriod;
		}
	}

	@Override
	public void setCostPeriod(String costPeriod) {
		_costPeriod = costPeriod;
	}

	@Override
	public String getCostPeriodType() {
		if (_costPeriodType == null) {
			return StringPool.BLANK;
		}
		else {
			return _costPeriodType;
		}
	}

	@Override
	public void setCostPeriodType(String costPeriodType) {
		_costPeriodType = costPeriodType;
	}

	@Override
	public String getPromotionCode() {
		if (_promotionCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _promotionCode;
		}
	}

	@Override
	public void setPromotionCode(String promotionCode) {
		_promotionCode = promotionCode;
	}

	@Override
	public Date getPromotionFrom() {
		return _promotionFrom;
	}

	@Override
	public void setPromotionFrom(Date promotionFrom) {
		_promotionFrom = promotionFrom;
	}

	@Override
	public Date getPromotionTo() {
		return _promotionTo;
	}

	@Override
	public void setPromotionTo(Date promotionTo) {
		_promotionTo = promotionTo;
	}

	@Override
	public String getDiscount() {
		if (_discount == null) {
			return StringPool.BLANK;
		}
		else {
			return _discount;
		}
	}

	@Override
	public void setDiscount(String discount) {
		_discount = discount;
	}

	@Override
	public Date getDateAdded() {
		return _dateAdded;
	}

	@Override
	public void setDateAdded(Date dateAdded) {
		_dateAdded = dateAdded;
	}

	@Override
	public Date getDateModified() {
		return _dateModified;
	}

	@Override
	public void setDateModified(Date dateModified) {
		_dateModified = dateModified;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getExtra1() {
		if (_extra1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra1;
		}
	}

	@Override
	public void setExtra1(String extra1) {
		_columnBitmask |= EXTRA1_COLUMN_BITMASK;

		if (_originalExtra1 == null) {
			_originalExtra1 = _extra1;
		}

		_extra1 = extra1;
	}

	public String getOriginalExtra1() {
		return GetterUtil.getString(_originalExtra1);
	}

	@Override
	public String getExtra2() {
		if (_extra2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra2;
		}
	}

	@Override
	public void setExtra2(String extra2) {
		_extra2 = extra2;
	}

	@Override
	public String getExtra3() {
		if (_extra3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra3;
		}
	}

	@Override
	public void setExtra3(String extra3) {
		_extra3 = extra3;
	}

	@Override
	public String getExtra4() {
		if (_extra4 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra4;
		}
	}

	@Override
	public void setExtra4(String extra4) {
		_extra4 = extra4;
	}

	@Override
	public Date getExtra5() {
		return _extra5;
	}

	@Override
	public void setExtra5(Date extra5) {
		_extra5 = extra5;
	}

	@Override
	public Date getExtra6() {
		return _extra6;
	}

	@Override
	public void setExtra6(Date extra6) {
		_extra6 = extra6;
	}

	@Override
	public String getExtra7() {
		if (_extra7 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra7;
		}
	}

	@Override
	public void setExtra7(String extra7) {
		_extra7 = extra7;
	}

	@Override
	public String getExtra8() {
		if (_extra8 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra8;
		}
	}

	@Override
	public void setExtra8(String extra8) {
		_extra8 = extra8;
	}

	@Override
	public String getExtra9() {
		if (_extra9 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra9;
		}
	}

	@Override
	public void setExtra9(String extra9) {
		_extra9 = extra9;
	}

	@Override
	public String getExtra10() {
		if (_extra10 == null) {
			return StringPool.BLANK;
		}
		else {
			return _extra10;
		}
	}

	@Override
	public void setExtra10(String extra10) {
		_extra10 = extra10;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			MembershipPackage.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public MembershipPackage toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (MembershipPackage)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MembershipPackageImpl membershipPackageImpl = new MembershipPackageImpl();

		membershipPackageImpl.setMpId(getMpId());
		membershipPackageImpl.setName(getName());
		membershipPackageImpl.setDescription(getDescription());
		membershipPackageImpl.setStatus(getStatus());
		membershipPackageImpl.setType(getType());
		membershipPackageImpl.setVersion(getVersion());
		membershipPackageImpl.setCost(getCost());
		membershipPackageImpl.setCostCurrency(getCostCurrency());
		membershipPackageImpl.setCostPeriod(getCostPeriod());
		membershipPackageImpl.setCostPeriodType(getCostPeriodType());
		membershipPackageImpl.setPromotionCode(getPromotionCode());
		membershipPackageImpl.setPromotionFrom(getPromotionFrom());
		membershipPackageImpl.setPromotionTo(getPromotionTo());
		membershipPackageImpl.setDiscount(getDiscount());
		membershipPackageImpl.setDateAdded(getDateAdded());
		membershipPackageImpl.setDateModified(getDateModified());
		membershipPackageImpl.setCreatedBy(getCreatedBy());
		membershipPackageImpl.setModifiedBy(getModifiedBy());
		membershipPackageImpl.setExtra1(getExtra1());
		membershipPackageImpl.setExtra2(getExtra2());
		membershipPackageImpl.setExtra3(getExtra3());
		membershipPackageImpl.setExtra4(getExtra4());
		membershipPackageImpl.setExtra5(getExtra5());
		membershipPackageImpl.setExtra6(getExtra6());
		membershipPackageImpl.setExtra7(getExtra7());
		membershipPackageImpl.setExtra8(getExtra8());
		membershipPackageImpl.setExtra9(getExtra9());
		membershipPackageImpl.setExtra10(getExtra10());

		membershipPackageImpl.resetOriginalValues();

		return membershipPackageImpl;
	}

	@Override
	public int compareTo(MembershipPackage membershipPackage) {
		int value = 0;

		value = getName().compareTo(membershipPackage.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof MembershipPackage)) {
			return false;
		}

		MembershipPackage membershipPackage = (MembershipPackage)obj;

		long primaryKey = membershipPackage.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		MembershipPackageModelImpl membershipPackageModelImpl = this;

		membershipPackageModelImpl._originalName = membershipPackageModelImpl._name;

		membershipPackageModelImpl._originalType = membershipPackageModelImpl._type;

		membershipPackageModelImpl._originalExtra1 = membershipPackageModelImpl._extra1;

		membershipPackageModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<MembershipPackage> toCacheModel() {
		MembershipPackageCacheModel membershipPackageCacheModel = new MembershipPackageCacheModel();

		membershipPackageCacheModel.mpId = getMpId();

		membershipPackageCacheModel.name = getName();

		String name = membershipPackageCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			membershipPackageCacheModel.name = null;
		}

		membershipPackageCacheModel.description = getDescription();

		String description = membershipPackageCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			membershipPackageCacheModel.description = null;
		}

		membershipPackageCacheModel.status = getStatus();

		String status = membershipPackageCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			membershipPackageCacheModel.status = null;
		}

		membershipPackageCacheModel.type = getType();

		String type = membershipPackageCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			membershipPackageCacheModel.type = null;
		}

		membershipPackageCacheModel.version = getVersion();

		String version = membershipPackageCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			membershipPackageCacheModel.version = null;
		}

		membershipPackageCacheModel.cost = getCost();

		membershipPackageCacheModel.costCurrency = getCostCurrency();

		String costCurrency = membershipPackageCacheModel.costCurrency;

		if ((costCurrency != null) && (costCurrency.length() == 0)) {
			membershipPackageCacheModel.costCurrency = null;
		}

		membershipPackageCacheModel.costPeriod = getCostPeriod();

		String costPeriod = membershipPackageCacheModel.costPeriod;

		if ((costPeriod != null) && (costPeriod.length() == 0)) {
			membershipPackageCacheModel.costPeriod = null;
		}

		membershipPackageCacheModel.costPeriodType = getCostPeriodType();

		String costPeriodType = membershipPackageCacheModel.costPeriodType;

		if ((costPeriodType != null) && (costPeriodType.length() == 0)) {
			membershipPackageCacheModel.costPeriodType = null;
		}

		membershipPackageCacheModel.promotionCode = getPromotionCode();

		String promotionCode = membershipPackageCacheModel.promotionCode;

		if ((promotionCode != null) && (promotionCode.length() == 0)) {
			membershipPackageCacheModel.promotionCode = null;
		}

		Date promotionFrom = getPromotionFrom();

		if (promotionFrom != null) {
			membershipPackageCacheModel.promotionFrom = promotionFrom.getTime();
		}
		else {
			membershipPackageCacheModel.promotionFrom = Long.MIN_VALUE;
		}

		Date promotionTo = getPromotionTo();

		if (promotionTo != null) {
			membershipPackageCacheModel.promotionTo = promotionTo.getTime();
		}
		else {
			membershipPackageCacheModel.promotionTo = Long.MIN_VALUE;
		}

		membershipPackageCacheModel.discount = getDiscount();

		String discount = membershipPackageCacheModel.discount;

		if ((discount != null) && (discount.length() == 0)) {
			membershipPackageCacheModel.discount = null;
		}

		Date dateAdded = getDateAdded();

		if (dateAdded != null) {
			membershipPackageCacheModel.dateAdded = dateAdded.getTime();
		}
		else {
			membershipPackageCacheModel.dateAdded = Long.MIN_VALUE;
		}

		Date dateModified = getDateModified();

		if (dateModified != null) {
			membershipPackageCacheModel.dateModified = dateModified.getTime();
		}
		else {
			membershipPackageCacheModel.dateModified = Long.MIN_VALUE;
		}

		membershipPackageCacheModel.createdBy = getCreatedBy();

		String createdBy = membershipPackageCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			membershipPackageCacheModel.createdBy = null;
		}

		membershipPackageCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = membershipPackageCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			membershipPackageCacheModel.modifiedBy = null;
		}

		membershipPackageCacheModel.extra1 = getExtra1();

		String extra1 = membershipPackageCacheModel.extra1;

		if ((extra1 != null) && (extra1.length() == 0)) {
			membershipPackageCacheModel.extra1 = null;
		}

		membershipPackageCacheModel.extra2 = getExtra2();

		String extra2 = membershipPackageCacheModel.extra2;

		if ((extra2 != null) && (extra2.length() == 0)) {
			membershipPackageCacheModel.extra2 = null;
		}

		membershipPackageCacheModel.extra3 = getExtra3();

		String extra3 = membershipPackageCacheModel.extra3;

		if ((extra3 != null) && (extra3.length() == 0)) {
			membershipPackageCacheModel.extra3 = null;
		}

		membershipPackageCacheModel.extra4 = getExtra4();

		String extra4 = membershipPackageCacheModel.extra4;

		if ((extra4 != null) && (extra4.length() == 0)) {
			membershipPackageCacheModel.extra4 = null;
		}

		Date extra5 = getExtra5();

		if (extra5 != null) {
			membershipPackageCacheModel.extra5 = extra5.getTime();
		}
		else {
			membershipPackageCacheModel.extra5 = Long.MIN_VALUE;
		}

		Date extra6 = getExtra6();

		if (extra6 != null) {
			membershipPackageCacheModel.extra6 = extra6.getTime();
		}
		else {
			membershipPackageCacheModel.extra6 = Long.MIN_VALUE;
		}

		membershipPackageCacheModel.extra7 = getExtra7();

		String extra7 = membershipPackageCacheModel.extra7;

		if ((extra7 != null) && (extra7.length() == 0)) {
			membershipPackageCacheModel.extra7 = null;
		}

		membershipPackageCacheModel.extra8 = getExtra8();

		String extra8 = membershipPackageCacheModel.extra8;

		if ((extra8 != null) && (extra8.length() == 0)) {
			membershipPackageCacheModel.extra8 = null;
		}

		membershipPackageCacheModel.extra9 = getExtra9();

		String extra9 = membershipPackageCacheModel.extra9;

		if ((extra9 != null) && (extra9.length() == 0)) {
			membershipPackageCacheModel.extra9 = null;
		}

		membershipPackageCacheModel.extra10 = getExtra10();

		String extra10 = membershipPackageCacheModel.extra10;

		if ((extra10 != null) && (extra10.length() == 0)) {
			membershipPackageCacheModel.extra10 = null;
		}

		return membershipPackageCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{mpId=");
		sb.append(getMpId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", cost=");
		sb.append(getCost());
		sb.append(", costCurrency=");
		sb.append(getCostCurrency());
		sb.append(", costPeriod=");
		sb.append(getCostPeriod());
		sb.append(", costPeriodType=");
		sb.append(getCostPeriodType());
		sb.append(", promotionCode=");
		sb.append(getPromotionCode());
		sb.append(", promotionFrom=");
		sb.append(getPromotionFrom());
		sb.append(", promotionTo=");
		sb.append(getPromotionTo());
		sb.append(", discount=");
		sb.append(getDiscount());
		sb.append(", dateAdded=");
		sb.append(getDateAdded());
		sb.append(", dateModified=");
		sb.append(getDateModified());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", extra1=");
		sb.append(getExtra1());
		sb.append(", extra2=");
		sb.append(getExtra2());
		sb.append(", extra3=");
		sb.append(getExtra3());
		sb.append(", extra4=");
		sb.append(getExtra4());
		sb.append(", extra5=");
		sb.append(getExtra5());
		sb.append(", extra6=");
		sb.append(getExtra6());
		sb.append(", extra7=");
		sb.append(getExtra7());
		sb.append(", extra8=");
		sb.append(getExtra8());
		sb.append(", extra9=");
		sb.append(getExtra9());
		sb.append(", extra10=");
		sb.append(getExtra10());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append(
			"com.sambaash.platform.srv.spservices.model.MembershipPackage");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>mpId</column-name><column-value><![CDATA[");
		sb.append(getMpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cost</column-name><column-value><![CDATA[");
		sb.append(getCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costCurrency</column-name><column-value><![CDATA[");
		sb.append(getCostCurrency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costPeriod</column-name><column-value><![CDATA[");
		sb.append(getCostPeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costPeriodType</column-name><column-value><![CDATA[");
		sb.append(getCostPeriodType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionCode</column-name><column-value><![CDATA[");
		sb.append(getPromotionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionFrom</column-name><column-value><![CDATA[");
		sb.append(getPromotionFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotionTo</column-name><column-value><![CDATA[");
		sb.append(getPromotionTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>discount</column-name><column-value><![CDATA[");
		sb.append(getDiscount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateAdded</column-name><column-value><![CDATA[");
		sb.append(getDateAdded());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateModified</column-name><column-value><![CDATA[");
		sb.append(getDateModified());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra1</column-name><column-value><![CDATA[");
		sb.append(getExtra1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra2</column-name><column-value><![CDATA[");
		sb.append(getExtra2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra3</column-name><column-value><![CDATA[");
		sb.append(getExtra3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra4</column-name><column-value><![CDATA[");
		sb.append(getExtra4());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra5</column-name><column-value><![CDATA[");
		sb.append(getExtra5());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra6</column-name><column-value><![CDATA[");
		sb.append(getExtra6());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra7</column-name><column-value><![CDATA[");
		sb.append(getExtra7());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra8</column-name><column-value><![CDATA[");
		sb.append(getExtra8());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra9</column-name><column-value><![CDATA[");
		sb.append(getExtra9());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extra10</column-name><column-value><![CDATA[");
		sb.append(getExtra10());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = MembershipPackage.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			MembershipPackage.class
		};
	private long _mpId;
	private String _name;
	private String _originalName;
	private String _description;
	private String _status;
	private String _type;
	private String _originalType;
	private String _version;
	private float _cost;
	private String _costCurrency;
	private String _costPeriod;
	private String _costPeriodType;
	private String _promotionCode;
	private Date _promotionFrom;
	private Date _promotionTo;
	private String _discount;
	private Date _dateAdded;
	private Date _dateModified;
	private String _createdBy;
	private String _modifiedBy;
	private String _extra1;
	private String _originalExtra1;
	private String _extra2;
	private String _extra3;
	private String _extra4;
	private Date _extra5;
	private Date _extra6;
	private String _extra7;
	private String _extra8;
	private String _extra9;
	private String _extra10;
	private long _columnBitmask;
	private MembershipPackage _escapedModel;
}
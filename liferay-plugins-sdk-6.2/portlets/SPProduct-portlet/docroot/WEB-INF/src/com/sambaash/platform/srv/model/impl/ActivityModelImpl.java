/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.sambaash.platform.srv.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.sambaash.platform.srv.model.Activity;
import com.sambaash.platform.srv.model.ActivityModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Activity service. Represents a row in the &quot;SPActivity&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.sambaash.platform.srv.model.ActivityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ActivityImpl}.
 * </p>
 *
 * @author gauravvijayvergia
 * @see ActivityImpl
 * @see com.sambaash.platform.srv.model.Activity
 * @see com.sambaash.platform.srv.model.ActivityModel
 * @generated
 */
public class ActivityModelImpl extends BaseModelImpl<Activity>
	implements ActivityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a activity model instance should use the {@link com.sambaash.platform.srv.model.Activity} interface instead.
	 */
	public static final String TABLE_NAME = "SPActivity";
	public static final Object[][] TABLE_COLUMNS = {
			{ "spActivityId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "spModuleId", Types.BIGINT },
			{ "spScheduleId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "activityTiming", Types.VARCHAR },
			{ "activityPerformer", Types.VARCHAR },
			{ "activityDuration", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SPActivity (spActivityId BIGINT(20) not null primary key,groupId BIGINT(20),companyId BIGINT(20),userId BIGINT(20),userName VARCHAR(75) null,createDate DATETIME null,modifiedDate DATETIME null,spModuleId BIGINT(20),spScheduleId BIGINT(20),description LONGTEXT null,activityTiming VARCHAR(400) null,activityPerformer VARCHAR(400) null,activityDuration VARCHAR(400) null)";
	public static final String TABLE_SQL_DROP = "drop table SPActivity";
	public static final String ORDER_BY_JPQL = " ORDER BY activity.spActivityId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY SPActivity.spActivityId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.sambaash.platform.srv.model.Activity"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.sambaash.platform.srv.model.Activity"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.sambaash.platform.srv.model.Activity"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long SPMODULEID_COLUMN_BITMASK = 2L;
	public static long SPSCHEDULEID_COLUMN_BITMASK = 4L;
	public static long SPACTIVITYID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.sambaash.platform.srv.model.Activity"));

	public ActivityModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _spActivityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpActivityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _spActivityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Activity.class;
	}

	@Override
	public String getModelClassName() {
		return Activity.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("spActivityId", getSpActivityId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("spModuleId", getSpModuleId());
		attributes.put("spScheduleId", getSpScheduleId());
		attributes.put("description", getDescription());
		attributes.put("activityTiming", getActivityTiming());
		attributes.put("activityPerformer", getActivityPerformer());
		attributes.put("activityDuration", getActivityDuration());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long spActivityId = (Long)attributes.get("spActivityId");

		if (spActivityId != null) {
			setSpActivityId(spActivityId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long spModuleId = (Long)attributes.get("spModuleId");

		if (spModuleId != null) {
			setSpModuleId(spModuleId);
		}

		Long spScheduleId = (Long)attributes.get("spScheduleId");

		if (spScheduleId != null) {
			setSpScheduleId(spScheduleId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String activityTiming = (String)attributes.get("activityTiming");

		if (activityTiming != null) {
			setActivityTiming(activityTiming);
		}

		String activityPerformer = (String)attributes.get("activityPerformer");

		if (activityPerformer != null) {
			setActivityPerformer(activityPerformer);
		}

		String activityDuration = (String)attributes.get("activityDuration");

		if (activityDuration != null) {
			setActivityDuration(activityDuration);
		}
	}

	@Override
	public long getSpActivityId() {
		return _spActivityId;
	}

	@Override
	public void setSpActivityId(long spActivityId) {
		_columnBitmask = -1L;

		_spActivityId = spActivityId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getSpModuleId() {
		return _spModuleId;
	}

	@Override
	public void setSpModuleId(long spModuleId) {
		_columnBitmask |= SPMODULEID_COLUMN_BITMASK;

		if (!_setOriginalSpModuleId) {
			_setOriginalSpModuleId = true;

			_originalSpModuleId = _spModuleId;
		}

		_spModuleId = spModuleId;
	}

	public long getOriginalSpModuleId() {
		return _originalSpModuleId;
	}

	@Override
	public long getSpScheduleId() {
		return _spScheduleId;
	}

	@Override
	public void setSpScheduleId(long spScheduleId) {
		_columnBitmask |= SPSCHEDULEID_COLUMN_BITMASK;

		if (!_setOriginalSpScheduleId) {
			_setOriginalSpScheduleId = true;

			_originalSpScheduleId = _spScheduleId;
		}

		_spScheduleId = spScheduleId;
	}

	public long getOriginalSpScheduleId() {
		return _originalSpScheduleId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getActivityTiming() {
		if (_activityTiming == null) {
			return StringPool.BLANK;
		}
		else {
			return _activityTiming;
		}
	}

	@Override
	public void setActivityTiming(String activityTiming) {
		_activityTiming = activityTiming;
	}

	@Override
	public String getActivityPerformer() {
		if (_activityPerformer == null) {
			return StringPool.BLANK;
		}
		else {
			return _activityPerformer;
		}
	}

	@Override
	public void setActivityPerformer(String activityPerformer) {
		_activityPerformer = activityPerformer;
	}

	@Override
	public String getActivityDuration() {
		if (_activityDuration == null) {
			return StringPool.BLANK;
		}
		else {
			return _activityDuration;
		}
	}

	@Override
	public void setActivityDuration(String activityDuration) {
		_activityDuration = activityDuration;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Activity.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Activity toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Activity)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ActivityImpl activityImpl = new ActivityImpl();

		activityImpl.setSpActivityId(getSpActivityId());
		activityImpl.setGroupId(getGroupId());
		activityImpl.setCompanyId(getCompanyId());
		activityImpl.setUserId(getUserId());
		activityImpl.setUserName(getUserName());
		activityImpl.setCreateDate(getCreateDate());
		activityImpl.setModifiedDate(getModifiedDate());
		activityImpl.setSpModuleId(getSpModuleId());
		activityImpl.setSpScheduleId(getSpScheduleId());
		activityImpl.setDescription(getDescription());
		activityImpl.setActivityTiming(getActivityTiming());
		activityImpl.setActivityPerformer(getActivityPerformer());
		activityImpl.setActivityDuration(getActivityDuration());

		activityImpl.resetOriginalValues();

		return activityImpl;
	}

	@Override
	public int compareTo(Activity activity) {
		int value = 0;

		if (getSpActivityId() < activity.getSpActivityId()) {
			value = -1;
		}
		else if (getSpActivityId() > activity.getSpActivityId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Activity)) {
			return false;
		}

		Activity activity = (Activity)obj;

		long primaryKey = activity.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ActivityModelImpl activityModelImpl = this;

		activityModelImpl._originalGroupId = activityModelImpl._groupId;

		activityModelImpl._setOriginalGroupId = false;

		activityModelImpl._originalSpModuleId = activityModelImpl._spModuleId;

		activityModelImpl._setOriginalSpModuleId = false;

		activityModelImpl._originalSpScheduleId = activityModelImpl._spScheduleId;

		activityModelImpl._setOriginalSpScheduleId = false;

		activityModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Activity> toCacheModel() {
		ActivityCacheModel activityCacheModel = new ActivityCacheModel();

		activityCacheModel.spActivityId = getSpActivityId();

		activityCacheModel.groupId = getGroupId();

		activityCacheModel.companyId = getCompanyId();

		activityCacheModel.userId = getUserId();

		activityCacheModel.userName = getUserName();

		String userName = activityCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			activityCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			activityCacheModel.createDate = createDate.getTime();
		}
		else {
			activityCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			activityCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			activityCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		activityCacheModel.spModuleId = getSpModuleId();

		activityCacheModel.spScheduleId = getSpScheduleId();

		activityCacheModel.description = getDescription();

		String description = activityCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			activityCacheModel.description = null;
		}

		activityCacheModel.activityTiming = getActivityTiming();

		String activityTiming = activityCacheModel.activityTiming;

		if ((activityTiming != null) && (activityTiming.length() == 0)) {
			activityCacheModel.activityTiming = null;
		}

		activityCacheModel.activityPerformer = getActivityPerformer();

		String activityPerformer = activityCacheModel.activityPerformer;

		if ((activityPerformer != null) && (activityPerformer.length() == 0)) {
			activityCacheModel.activityPerformer = null;
		}

		activityCacheModel.activityDuration = getActivityDuration();

		String activityDuration = activityCacheModel.activityDuration;

		if ((activityDuration != null) && (activityDuration.length() == 0)) {
			activityCacheModel.activityDuration = null;
		}

		return activityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{spActivityId=");
		sb.append(getSpActivityId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", spModuleId=");
		sb.append(getSpModuleId());
		sb.append(", spScheduleId=");
		sb.append(getSpScheduleId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", activityTiming=");
		sb.append(getActivityTiming());
		sb.append(", activityPerformer=");
		sb.append(getActivityPerformer());
		sb.append(", activityDuration=");
		sb.append(getActivityDuration());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.sambaash.platform.srv.model.Activity");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>spActivityId</column-name><column-value><![CDATA[");
		sb.append(getSpActivityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spModuleId</column-name><column-value><![CDATA[");
		sb.append(getSpModuleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spScheduleId</column-name><column-value><![CDATA[");
		sb.append(getSpScheduleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activityTiming</column-name><column-value><![CDATA[");
		sb.append(getActivityTiming());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activityPerformer</column-name><column-value><![CDATA[");
		sb.append(getActivityPerformer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activityDuration</column-name><column-value><![CDATA[");
		sb.append(getActivityDuration());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Activity.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Activity.class
		};
	private long _spActivityId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _spModuleId;
	private long _originalSpModuleId;
	private boolean _setOriginalSpModuleId;
	private long _spScheduleId;
	private long _originalSpScheduleId;
	private boolean _setOriginalSpScheduleId;
	private String _description;
	private String _activityTiming;
	private String _activityPerformer;
	private String _activityDuration;
	private long _columnBitmask;
	private Activity _escapedModel;
}